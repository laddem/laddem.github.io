<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>üìä Aprenda a utilizar o tidyverse | LADDEM</title>
    <link>https://laddem.github.io/courses/tidyverse/</link>
      <atom:link href="https://laddem.github.io/courses/tidyverse/index.xml" rel="self" type="application/rss+xml" />
    <description>üìä Aprenda a utilizar o tidyverse</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>pt</language><copyright>¬© 2021 Laborat√≥rio de An√°lise de Dados em Demografia</copyright><lastBuildDate>Thu, 20 May 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://laddem.github.io/courses/tidyverse/featured.png</url>
      <title>üìä Aprenda a utilizar o tidyverse</title>
      <link>https://laddem.github.io/courses/tidyverse/</link>
    </image>
    
    <item>
      <title>readr, tibble e tidyr</title>
      <link>https://laddem.github.io/courses/tidyverse/dia1/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/courses/tidyverse/dia1/</guid>
      <description>&lt;h2 id=&#34;um-modelo-de-ci√™ncia-de-dados&#34;&gt;Um modelo de ci√™ncia de dados&lt;/h2&gt;
&lt;p&gt;Uma forma esquem√°tica, mas √∫til de encarar o processo de an√°lise de dados e de produ√ß√£o de conhecimento a partir de informa√ß√µes secund√°rias √© esta figura:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia1_files/data-science-explore.png&#34; alt=&#34;Data Science Visual Model&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ela acaba sendo um ponto de partida interessante porque contextualiza a maioria dos pacotes que vamos utilizar. O &lt;code&gt;readr&lt;/code&gt; √© uma maneira de facilitar e tornar mais r√°pida a importa√ß√£o de dados em formatos comuns, como o texto delimitado por separadores e o formato colunado com larguras-fixas utilizado pelo IBGE.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;tibble&lt;/code&gt; √© uma proposta de moderniza√ß√£o para o &lt;code&gt;data.frame&lt;/code&gt;, aproveitando a estrutura flex√≠vel e poderosa, mas mudando certas conven√ß√µes, como a convers√£o de strings para fatores, permitindo a cria√ß√£o de colunas de listas, utiliza√ß√£o de nomes mais complexos para colunas, etc.&lt;/p&gt;
&lt;p&gt;O &lt;code&gt;tidyr&lt;/code&gt; √© uma forma de reformatar (&lt;em&gt;reshape&lt;/em&gt;) bancos de dados que v√™m em formatos que dificultam seu processamento, permitindo que o analista facilmente reconfigure a informa√ß√£o para o formato mais adequado. Ele √© o primeiro pacote que veremos sobre a parte de &amp;ldquo;cozinha&amp;rdquo; dos dados, no qual √© preciso processar o dado bruto para torn√°-lo pass√≠vel de an√°lise.&lt;/p&gt;
&lt;p&gt;O mesmo pode ser dito para os outros pacotes que veremos nos pr√≥ximos dias. Cada um deles foi pensado para resolver um problema ou facilitar uma rotina de trabalho relacionada com um dos passos descritos acima.&lt;/p&gt;
&lt;h3 id=&#34;programa√ß√£o-liter√°ria&#34;&gt;Programa√ß√£o liter√°ria&lt;/h3&gt;
&lt;p&gt;V√°rios dos conceitos que guiam o design do &lt;code&gt;tidyverse&lt;/code&gt; s√£o orientados por uma certa filosofia. Esta filosofia dita que a principal preocupa√ß√£o por tr√°s de um programa n√£o √© que ele funcione. Eventualmente e com um pouco de persist√™ncia, √© quase sempre poss√≠vel chegar a uma solu√ß√£o t√©cnica adequada. A principal quest√£o √© que o programa √© uma ferramenta de comunica√ß√£o com outras pessoas que o ler√£o, seja seus colegas, colaboradores, alunos ou voc√™ mesmo, daqui a 2 anos, quando lembrar que voc√™ j√° escreveu um programa para aquela tarefa. Trago aqui alguns trechos de &lt;em&gt;Literate Programming&lt;/em&gt;, de Donald Knuth (1984), traduzidos livremente por este que vos fala:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Creio que chegou a hora de melhorar significativamente a documenta√ß√£o dos programas, e que podemos atingir este objetivo tratando programas como obras liter√°rias. Por isso o t√≠tulo: &amp;ldquo;Programa√ß√£o Liter√°ria&amp;rdquo;. Abandonemos os velhos h√°bitos de construir programas: ao inv√©s de imaginar que nossa tarefa principal √© instruir um computador sobre o que deve ser feito, concentremo-nos em explicar aos seres humanos o que queremos que o computador fa√ßa. O praticante da programa√ß√£o liter√°ria pode ser visto como um ensa√≠sta, cuja principal preocupa√ß√£o √© com a clareza da exposi√ß√£o e a excel√™ncia no estilo. Tal autor, com um dicion√°rio na m√£o, escolhe os nomes das vari√°veis com cuidado e explica claramente seu significado. Ele ou ela esmera por um programa que √© compreens√≠vel porque seus conceitos foram introduzidos na melhor ordem poss√≠vel para o entendimento humano, utilizando uma mistura de m√©todos formais e informais que se complementam.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Assim, v√°rias das escolhas feitas na constru√ß√£o de &lt;code&gt;tidyverse&lt;/code&gt; procuram refor√ßar essa caracter√≠stica de interpretabilidade dos programas, como a ordem l√≥gica das opera√ß√µes com o pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;), fun√ß√µes com nomes mais longos e sem√¢nticos, a utiliza√ß√£o de uma fun√ß√£o espec√≠fica para cada tarefa, ao inv√©s da adapta√ß√£o de fun√ß√µes gen√©ricas para uma grande variedade de tarefas. O prop√≥sito de um c√≥digo escrito como &lt;code&gt;tidyverse&lt;/code&gt; √© que, no limite, a pr√≥pria s√≠ntaxe do c√≥digo funcione como parte da documenta√ß√£o do programa.&lt;/p&gt;
&lt;h3 id=&#34;o-mist√©rio-do-pipe-&#34;&gt;O mist√©rio do pipe: &lt;code&gt;%&amp;gt;%&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Usu√°rios de longa data do R j√° podem ter encontrado no mato esse animal estranho e podem ter ficado confusos com seu significado. O pipe √© de origem humilde e nasceu nos sistemas Unix h√° muitas d√©cadas atr√°s. Seu objetivo √© muito simples: e se voc√™ tiver uma sequ√™ncia de computa√ß√µes em que cada uma recebe o resultado daquela feita anteriormente? Claro que voc√™ poderia fazer:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- 1:10
y &amp;lt;- diff(x)
mean(y)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mas n√£o seria interessante pular os objetos intermedi√°rios e ir direto ao ponto? O pipe vem do pacote &lt;code&gt;magrittr&lt;/code&gt;, mas ele v√™m carregado em quase todos os pacotes do tidyverse. Vamos carregar logo o tibble.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Para ter acesso ao pipe, basta carregar um pacote do tidyverse, como tibble, dplyr, tidyr, etc.
# Vamos carregar o tibble agora
library(tibble)
x %&amp;gt;% diff() %&amp;gt;% mean()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vejamos um exemplo mais real, quantos artistas existem no dataset &lt;code&gt;billboard&lt;/code&gt;? Podemos usar &lt;code&gt;unique&lt;/code&gt; e &lt;code&gt;length&lt;/code&gt; para descobrir.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- unique(tidyr::billboard$artist)
length(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 228
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mas com &lt;code&gt;%&amp;gt;%&lt;/code&gt; fica bem melhor:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidyr::billboard %&amp;gt;% .$artist %&amp;gt;% unique() %&amp;gt;% length()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 228
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, mas como ele funciona? √â simples, o pipe carrega o objeto a sua esquerda num ponto &lt;code&gt;.&lt;/code&gt; invis√≠vel que √© automaticamente passado como o primeiro argumento da fun√ß√£o √† direita.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- 1:10
mean(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5.5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x %&amp;gt;% mean()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5.5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OK, mas e se meu argumento n√£o for o primeiro, ainda posso usar pipe? Pode! √â s√≥ usar explicitamente um ponto no lugar onde voc√™ quer aproveitar o efeito:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;iris %&amp;gt;% boxplot(Sepal.Length ~ Species, data = .)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia1_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;O ponto &lt;code&gt;.&lt;/code&gt; depois de &lt;code&gt;data&lt;/code&gt; indica indica que ali deve ser colocado o &lt;code&gt;iris&lt;/code&gt;. O pipe √© uma pe√ßa chave de muitas fun√ß√µes do &lt;code&gt;tidyverse&lt;/code&gt;, n√£o porque ele seja obrigat√≥rio, mas sim porque ele permite expressar sequ√™ncias de opera√ß√µes numa ordem mais l√≥gica, do tipo: &amp;ldquo;Primeiro fa√ßa a, ent√£o b, ent√£o c, &amp;hellip; &amp;ldquo;, ao contr√°rio da forma como isto √© geralmente feito usando par√™nteses para preced√™ncia.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Compare
mean(diff(1:10))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1:10 %&amp;gt;% diff %&amp;gt;% mean
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E assim fica desmistificado o mist√©rio do pipe! Um √∫ltimo pulo do gato: pelo amor de deus ningu√©m digita &lt;code&gt;Shift + %, &amp;gt;, Shift + %&lt;/code&gt;, basta usar o atalho: &lt;code&gt;Ctrl + Shift + M&lt;/code&gt; que ele p√µe um pipe separado por espa√ßos &lt;code&gt;%&amp;gt;%&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;readr&#34;&gt;&lt;code&gt;readr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Usu√°rios do R provavelmente v√£o estar familiarizados com os nossos leitores de arquivos mais comuns: &lt;code&gt;read.table&lt;/code&gt; e &lt;code&gt;read.csv&lt;/code&gt;. Talvez muitos de voc√™s j√° at√© memorizaram alguns dos argumentos mais comuns. N√£o √© o caso aqui de revisitar esta fun√ß√£o, mas o &lt;code&gt;readr&lt;/code&gt; tem muitos paralelos com elas, porque √© pensado como uma nova vers√£o da mesma coisa.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Comecemos carregando o readr
library(readr)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;debaixo-do-cap√¥&#34;&gt;Debaixo do cap√¥&lt;/h3&gt;
&lt;p&gt;O readr, como as fun√ß√µes de leitura do &lt;code&gt;base&lt;/code&gt; √© uma cole√ß√£o de &lt;em&gt;parsers&lt;/em&gt;, que transformam texto em objetos R com o tipo desejado.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;parse_number(c(&amp;quot;1&amp;quot;, &amp;quot;20&amp;quot;, &amp;quot;38&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  1 20 38
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;parse_character(c(&amp;quot;banana&amp;quot;, &amp;quot;ma√ß√£&amp;quot;, &amp;quot;p√™ra&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;banana&amp;quot;     &amp;quot;ma&amp;lt;e7&amp;gt;&amp;lt;e3&amp;gt;&amp;quot; &amp;quot;p&amp;lt;ea&amp;gt;ra&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Note os acentos e caracteres especiais
parse_character(c(&amp;quot;banana&amp;quot;, &amp;quot;ma√ß√£&amp;quot;, &amp;quot;p√™ra&amp;quot;), 
                locale = locale(encoding = &amp;quot;Windows-1252&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;banana&amp;quot; &amp;quot;ma√ß√£&amp;quot;   &amp;quot;p√™ra&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;parse_logical(c(&amp;quot;true&amp;quot;, &amp;quot;false&amp;quot;, &amp;quot;true&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  TRUE FALSE  TRUE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Em geral, a gente n√£o precisa descer tanto o n√≠vel, a gente vai trabalhar mesmo √© com os leitores de dados &amp;ldquo;retangulares&amp;rdquo;. Como os do &lt;code&gt;base&lt;/code&gt;, eles s√£o &lt;code&gt;read_csv&lt;/code&gt;, &lt;code&gt;read_table&lt;/code&gt;, etc. Vamos trabalhar com bancos de dados que j√° v√™m no pacote, para facilitar o processo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Lista os datasets que vem no pacote
readr_example()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;challenge.csv&amp;quot;     &amp;quot;epa78.txt&amp;quot;         &amp;quot;example.log&amp;quot;      
## [4] &amp;quot;fwf-sample.txt&amp;quot;    &amp;quot;massey-rating.txt&amp;quot; &amp;quot;mtcars.csv&amp;quot;       
## [7] &amp;quot;mtcars.csv.bz2&amp;quot;    &amp;quot;mtcars.csv.zip&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Uma coisa que gosto de fazer √© olhar como o arquivo est√° organizado antes de tentar abr√≠-lo. Muitos de voc√™s podem fazer isso com &lt;code&gt;readLines&lt;/code&gt;. Ela ganhou sua vers√£o no pacote com &lt;code&gt;read_lines&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Vamos tentar abrir massey-rating.txt
read_lines(readr_example(&amp;quot;massey-rating.txt&amp;quot;), n_max = 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;UCC PAY LAZ KPK  RT   COF BIH DII ENG ACU Rank Team            Conf&amp;quot; 
##  [2] &amp;quot;  1   1   1   1   1     1   1   1   1   1    1 Ohio St          B10 &amp;quot;
##  [3] &amp;quot;  2   2   2   2   2     2   2   2   4   2    2 Oregon           P12 &amp;quot;
##  [4] &amp;quot;  3   4   3   4   3     4   3   4   2   3    3 Alabama          SEC &amp;quot;
##  [5] &amp;quot;  4   3   4   3   4     3   5   3   3   4    4 TCU              B12 &amp;quot;
##  [6] &amp;quot;  6   6   6   5   5     7   6   5   6  11    5 Michigan St      B10 &amp;quot;
##  [7] &amp;quot;  7   7   7   6   7     6  11   8   7   8    6 Georgia          SEC &amp;quot;
##  [8] &amp;quot;  5   5   5   7   6     8   4   6   5   5    7 Florida St       ACC &amp;quot;
##  [9] &amp;quot;  8   8   9   9  10     5   7   7  10   7    8 Baylor           B12 &amp;quot;
## [10] &amp;quot;  9  11   8  13  11    11  12   9  14   9    9 Georgia Tech     ACC &amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Identificando o separador, escolho a fun√ß√£o adequada
read_table(readr_example(&amp;quot;massey-rating.txt&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   UCC = col_double(),
##   PAY = col_double(),
##   LAZ = col_double(),
##   KPK = col_double(),
##   RT = col_double(),
##   COF = col_double(),
##   BIH = col_double(),
##   DII = col_double(),
##   ENG = col_double(),
##   ACU = col_double(),
##   Rank = col_double(),
##   Team = col_character(),
##   Conf = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 13
##      UCC   PAY   LAZ   KPK    RT   COF   BIH   DII   ENG   ACU  Rank Team  Conf 
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
##  1     1     1     1     1     1     1     1     1     1     1     1 Ohio~ B10  
##  2     2     2     2     2     2     2     2     2     4     2     2 Oreg~ P12  
##  3     3     4     3     4     3     4     3     4     2     3     3 Alab~ SEC  
##  4     4     3     4     3     4     3     5     3     3     4     4 TCU   B12  
##  5     6     6     6     5     5     7     6     5     6    11     5 Mich~ B10  
##  6     7     7     7     6     7     6    11     8     7     8     6 Geor~ SEC  
##  7     5     5     5     7     6     8     4     6     5     5     7 Flor~ ACC  
##  8     8     8     9     9    10     5     7     7    10     7     8 Bayl~ B12  
##  9     9    11     8    13    11    11    12     9    14     9     9 Geor~ ACC  
## 10    13    10    13    11     8     9    10    11     9    10    10 Miss~ SEC
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como identifiquei que as colunas estavam separadas por espa√ßos, utilizei &lt;code&gt;read_table&lt;/code&gt; cujo delimitador √© o espa√ßo &lt;code&gt;&amp;quot; &amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A segunda feature mais interessante do readr, √© uma interface para selecionar os tipos de colunas que ser√£o importadas. Vejamos o seguinte exemplo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Vamos abrir mtcars.csv
read_lines(readr_example(&amp;quot;mtcars.csv&amp;quot;), n_max = 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;\&amp;quot;mpg\&amp;quot;,\&amp;quot;cyl\&amp;quot;,\&amp;quot;disp\&amp;quot;,\&amp;quot;hp\&amp;quot;,\&amp;quot;drat\&amp;quot;,\&amp;quot;wt\&amp;quot;,\&amp;quot;qsec\&amp;quot;,\&amp;quot;vs\&amp;quot;,\&amp;quot;am\&amp;quot;,\&amp;quot;gear\&amp;quot;,\&amp;quot;carb\&amp;quot;&amp;quot;
##  [2] &amp;quot;21,6,160,110,3.9,2.62,16.46,0,1,4,4&amp;quot;                                                     
##  [3] &amp;quot;21,6,160,110,3.9,2.875,17.02,0,1,4,4&amp;quot;                                                    
##  [4] &amp;quot;22.8,4,108,93,3.85,2.32,18.61,1,1,4,1&amp;quot;                                                   
##  [5] &amp;quot;21.4,6,258,110,3.08,3.215,19.44,1,0,3,1&amp;quot;                                                 
##  [6] &amp;quot;18.7,8,360,175,3.15,3.44,17.02,0,0,3,2&amp;quot;                                                  
##  [7] &amp;quot;18.1,6,225,105,2.76,3.46,20.22,1,0,3,1&amp;quot;                                                  
##  [8] &amp;quot;14.3,8,360,245,3.21,3.57,15.84,0,0,3,4&amp;quot;                                                  
##  [9] &amp;quot;24.4,4,146.7,62,3.69,3.19,20,1,0,4,2&amp;quot;                                                    
## [10] &amp;quot;22.8,4,140.8,95,3.92,3.15,22.9,1,0,4,2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Identificamos o separador de colunas, selecionamos a fun√ß√£o adequada
read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   mpg = col_double(),
##   cyl = col_double(),
##   disp = col_double(),
##   hp = col_double(),
##   drat = col_double(),
##   wt = col_double(),
##   qsec = col_double(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4
##  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4
##  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1
##  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1
##  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2
##  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1
##  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2
##  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2
## 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O console nos mostra que a leitura do banco foi completada, mas tamb√©m mostra &lt;code&gt;Column Specification&lt;/code&gt;. Isto indica qual o tipo de dado que foi identificado automaticamente numa an√°lise feita pela fun√ß√£o  &lt;code&gt;guess_parser&lt;/code&gt;. Em diversos casos, n√≥s podemos querer identificar manualmente as colunas. Vejamos um exemplo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Vamos identificar as colunas com spec
spec_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   mpg = col_double(),
##   cyl = col_double(),
##   disp = col_double(),
##   hp = col_double(),
##   drat = col_double(),
##   wt = col_double(),
##   qsec = col_double(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## cols(
##   mpg = col_double(),
##   cyl = col_double(),
##   disp = col_double(),
##   hp = col_double(),
##   drat = col_double(),
##   wt = col_double(),
##   qsec = col_double(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Copia e cola, modifica as colunas que queremos alterar

spec_cols &amp;lt;- cols(
  mpg = col_double(),
  cyl = col_factor(), # N de cilindros do autom√≥vel
  disp = col_double(),
  hp = col_double(),
  drat = col_double(),
  wt = col_double(),
  qsec = col_double(),
  vs = col_double(),
  am = col_factor(c(&amp;quot;0&amp;quot;, &amp;quot;1&amp;quot;)), # Transmiss√£o autom√°tica ou manual
  gear = col_double(),
  carb = col_double()
)

df &amp;lt;- read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), col_types = spec_cols)
df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg cyl    disp    hp  drat    wt  qsec    vs am     gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21   6      160    110  3.9   2.62  16.5     0 1         4     4
##  2  21   6      160    110  3.9   2.88  17.0     0 1         4     4
##  3  22.8 4      108     93  3.85  2.32  18.6     1 1         4     1
##  4  21.4 6      258    110  3.08  3.22  19.4     1 0         3     1
##  5  18.7 8      360    175  3.15  3.44  17.0     0 0         3     2
##  6  18.1 6      225    105  2.76  3.46  20.2     1 0         3     1
##  7  14.3 8      360    245  3.21  3.57  15.8     0 0         3     4
##  8  24.4 4      147.    62  3.69  3.19  20       1 0         4     2
##  9  22.8 4      141.    95  3.92  3.15  22.9     1 0         4     2
## 10  19.2 6      168.   123  3.92  3.44  18.3     1 0         4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Para importar apenas colunas selecionadas, utilize &#39;cols_only()&#39;
spec_cols2 &amp;lt;- cols_only(
  mpg = col_double(),
  cyl = col_factor(), # N de cilindros do autom√≥vel
  am = col_factor(c(&amp;quot;0&amp;quot;, &amp;quot;1&amp;quot;)), # Transmiss√£o autom√°tica ou manual
  gear = col_double(),
  carb = col_double()
)

df2 &amp;lt;- read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), col_types = spec_cols2)
df2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 5
##      mpg cyl   am     gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21   6     1         4     4
##  2  21   6     1         4     4
##  3  22.8 4     1         4     1
##  4  21.4 6     0         3     1
##  5  18.7 8     0         3     2
##  6  18.1 6     0         3     1
##  7  14.3 8     0         3     4
##  8  24.4 4     0         4     2
##  9  22.8 4     0         4     2
## 10  19.2 6     0         4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Para indicar os tipos de colunas de um jeito mais sucinto, utilize uma string:

df &amp;lt;- read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), col_types = &amp;quot;dfddddddfdd&amp;quot;)

# S√≥ cuidado pra n√£o perder a conta dos ds!
df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg cyl    disp    hp  drat    wt  qsec    vs am     gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21   6      160    110  3.9   2.62  16.5     0 1         4     4
##  2  21   6      160    110  3.9   2.88  17.0     0 1         4     4
##  3  22.8 4      108     93  3.85  2.32  18.6     1 1         4     1
##  4  21.4 6      258    110  3.08  3.22  19.4     1 0         3     1
##  5  18.7 8      360    175  3.15  3.44  17.0     0 0         3     2
##  6  18.1 6      225    105  2.76  3.46  20.2     1 0         3     1
##  7  14.3 8      360    245  3.21  3.57  15.8     0 0         3     4
##  8  24.4 4      147.    62  3.69  3.19  20       1 0         4     2
##  9  22.8 4      141.    95  3.92  3.15  22.9     1 0         4     2
## 10  19.2 6      168.   123  3.92  3.44  18.3     1 0         4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Voc√™ tamb√©m pode querer definir caracter√≠sticas de localiza√ß√£o, como a codifica√ß√£o de caracteres, os separadores de decimal e de milhar e etc. A melhor forma de fazer isso √© definir um &lt;code&gt;locale&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;meu_locale &amp;lt;- locale(encoding = &amp;quot;UTF-8&amp;quot;, decimal_mark = &amp;quot;,&amp;quot;, grouping_mark = &amp;quot;.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A√≠ √© s√≥ passar isso pra uma das fun√ß√µes do pacote sob o argumento &lt;code&gt;locale&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), locale = meu_locale)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   mpg = col_number(),
##   cyl = col_double(),
##   disp = col_number(),
##   hp = col_double(),
##   drat = col_number(),
##   wt = col_number(),
##   qsec = col_number(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1    21     6   160   110    39   262  1646     0     1     4     4
##  2    21     6   160   110    39  2875  1702     0     1     4     4
##  3   228     4   108    93   385   232  1861     1     1     4     1
##  4   214     6   258   110   308  3215  1944     1     0     3     1
##  5   187     8   360   175   315   344  1702     0     0     3     2
##  6   181     6   225   105   276   346  2022     1     0     3     1
##  7   143     8   360   245   321   357  1584     0     0     3     4
##  8   244     4  1467    62   369   319    20     1     0     4     2
##  9   228     4  1408    95   392   315   229     1     0     4     2
## 10   192     6  1676   123   392   344   183     1     0     4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Existe ainda a possibilidade de ler dados colunados com largura-fixa. &lt;code&gt;readr&lt;/code&gt; implementa quatro fun√ß√µes diferentes para ajudar na constru√ß√£o do dicion√°rio:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Nossos dados
x &amp;lt;- readr_example(&amp;quot;fwf-sample.txt&amp;quot;)
read_lines(x, n_max = 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;John Smith          WA        418-Y11-4111&amp;quot;
## [2] &amp;quot;Mary Hartford       CA        319-Z19-4341&amp;quot;
## [3] &amp;quot;Evan Nolan          IL        219-532-c301&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# separados por espa√ßo

dic1 &amp;lt;- fwf_empty(x)
dic1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $begin
## [1]  0  5 20 30
## 
## $end
## [1]  4 13 22 NA
## 
## $skip
## [1] 0
## 
## $col_names
## [1] &amp;quot;X1&amp;quot; &amp;quot;X2&amp;quot; &amp;quot;X3&amp;quot; &amp;quot;X4&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_fwf(file = x, col_positions = dic1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   X1 = col_character(),
##   X2 = col_character(),
##   X3 = col_character(),
##   X4 = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 4
##   X1    X2       X3    X4          
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       
## 1 John  Smith    WA    418-Y11-4111
## 2 Mary  Hartford CA    319-Z19-4341
## 3 Evan  Nolan    IL    219-532-c301
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# indicando a largura da coluna
larguras &amp;lt;- c(20, 10, 12)

dic2 &amp;lt;- fwf_widths(larguras)
dic2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   begin   end col_names
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    
## 1     0    20 X1       
## 2    20    30 X2       
## 3    30    42 X3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_fwf(file = x, col_positions = dic2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   X1 = col_character(),
##   X2 = col_character(),
##   X3 = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   X1            X2    X3          
##   &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       
## 1 John Smith    WA    418-Y11-4111
## 2 Mary Hartford CA    319-Z19-4341
## 3 Evan Nolan    IL    219-532-c301
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# indicando onde cada coluna come√ßa e termina
comeca &amp;lt;- c(1, 21, 30)
termina &amp;lt;- c(20, 29, 42)

dic3 &amp;lt;- fwf_positions(comeca, termina)
dic3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   begin   end col_names
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    
## 1     0    20 X1       
## 2    20    29 X2       
## 3    29    42 X3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_fwf(file = x, col_positions = dic3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   X1 = col_character(),
##   X2 = col_character(),
##   X3 = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   X1            X2    X3          
##   &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       
## 1 John Smith    WA    418-Y11-4111
## 2 Mary Hartford CA    319-Z19-4341
## 3 Evan Nolan    IL    219-532-c301
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# indicando pares nome-valor
dic4 &amp;lt;- fwf_cols(
  nome = c(1, 20),
  uf = c(21, 29),
  numero = c(30, 42))
dic4
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   begin   end col_names
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;    
## 1     0    20 nome     
## 2    20    29 uf       
## 3    29    42 numero
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_fwf(file = x, col_positions = dic4)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   nome = col_character(),
##   uf = col_character(),
##   numero = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   nome          uf    numero      
##   &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       
## 1 John Smith    WA    418-Y11-4111
## 2 Mary Hartford CA    319-Z19-4341
## 3 Evan Nolan    IL    219-532-c301
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Especificar dicion√°rios para arquivos colunados √© um p√©-no-saco, por sorte, existem pacotes que j√° fizeram parte desse trabalho por n√≥s. O &lt;code&gt;readr&lt;/code&gt; n√£o melhora muita o servi√ßo manual de constru√ß√£o de dicion√°rios, o que ele oferece √© um ganho de performance tremendo. &lt;code&gt;read_fwf&lt;/code&gt; √© centenas de vezes mais r√°pido que o base &lt;code&gt;read.fwf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Em termos do que o pacote faz, √© basicamente isso. A √∫nica coisa que falta mencionar √© que ele importa os dados como &lt;code&gt;tibbles&lt;/code&gt; ao inv√©s do &lt;code&gt;data.frame&lt;/code&gt; padr√£o, mas isso j√° √© um √≥timo gancho pra nossa pr√≥xima parte.&lt;/p&gt;
&lt;h2 id=&#34;tibbles&#34;&gt;&lt;code&gt;tibbles&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Tibbles s√£o basicamente data.frames com um m√©todo mais bonitinho de &lt;code&gt;print&lt;/code&gt;. Elas automaticamente se ajustam a largura da sua tela, omitindo as colunas que estouram, e por padr√£o imprimem s√≥ as 10 primeiras observa√ß√µes. Outras caracter√≠sticas que pessoalmente gosto, √© que elas informam o tipo de vari√°vel junto com o nome, arrendondam digitos significativos, destacam n√∫meros grandes, negativos, NAs e etc.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), col_types = cols()) # omitir a especifica√ß√£o
df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4
##  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4
##  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1
##  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1
##  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2
##  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1
##  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2
##  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2
## 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do ponto de vista pr√°tico, elas funcionam exatamente igual a data.frames, tudo que voc√™ pode fazer com um data.frame, voc√™ faz com tibbles. O que elas trazem de novidade √©:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elas nunca mudam o tipo de dado inputado.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df1 &amp;lt;- data.frame(x = list(1:5, 1:10, 1:20))
df1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    x.1.5 x.1.10 x.1.20
## 1      1      1      1
## 2      2      2      2
## 3      3      3      3
## 4      4      4      4
## 5      5      5      5
## 6      1      6      6
## 7      2      7      7
## 8      3      8      8
## 9      4      9      9
## 10     5     10     10
## 11     1      1     11
## 12     2      2     12
## 13     3      3     13
## 14     4      4     14
## 15     5      5     15
## 16     1      6     16
## 17     2      7     17
## 18     3      8     18
## 19     4      9     19
## 20     5     10     20
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df2 &amp;lt;- tibble(x = list(1:5, 1:10, 1:20))
df2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 1
##   x         
##   &amp;lt;list&amp;gt;    
## 1 &amp;lt;int [5]&amp;gt; 
## 2 &amp;lt;int [10]&amp;gt;
## 3 &amp;lt;int [20]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Elas nunca ajustam os nomes das vari√°veis&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;names(data.frame(`nome hipster` = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;nome.hipster&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;names(tibble(`nome hipster` = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;nome hipster&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ela avalia cada argumento de forma &amp;ldquo;pregui√ßosa&amp;rdquo; e sequencial&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# erro
data.frame(x = 1:5, y = x ^ 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error in x^2: argumento n√£o-num√©rico para operador bin√°rio
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# funciona
tibble(x = 1:5, y = x ^ 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 2
##       x     y
##   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     1
## 2     2     4
## 3     3     9
## 4     4    16
## 5     5    25
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ela nunca utiliza row.names&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(data.frame(state.x77))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            Population Income Illiteracy Life.Exp Murder HS.Grad Frost   Area
## Alabama          3615   3624        2.1    69.05   15.1    41.3    20  50708
## Alaska            365   6315        1.5    69.31   11.3    66.7   152 566432
## Arizona          2212   4530        1.8    70.55    7.8    58.1    15 113417
## Arkansas         2110   3378        1.9    70.66   10.1    39.9    65  51945
## California      21198   5114        1.1    71.71   10.3    62.6    20 156361
## Colorado         2541   4884        0.7    72.06    6.8    63.9   166 103766
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;as_tibble(state.x77)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 50 x 8
##    Population Income Illiteracy `Life Exp` Murder `HS Grad` Frost   Area
##         &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
##  1       3615   3624        2.1       69.0   15.1      41.3    20  50708
##  2        365   6315        1.5       69.3   11.3      66.7   152 566432
##  3       2212   4530        1.8       70.6    7.8      58.1    15 113417
##  4       2110   3378        1.9       70.7   10.1      39.9    65  51945
##  5      21198   5114        1.1       71.7   10.3      62.6    20 156361
##  6       2541   4884        0.7       72.1    6.8      63.9   166 103766
##  7       3100   5348        1.1       72.5    3.1      56     139   4862
##  8        579   4809        0.9       70.1    6.2      54.6   103   1982
##  9       8277   4815        1.3       70.7   10.7      52.6    11  54090
## 10       4931   4091        2         68.5   13.9      40.6    60  58073
## # ... with 40 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ela muda a &amp;ldquo;regra da reciclagem&amp;rdquo;: apenas s√£o aceitos vetores unit√°rios ou vetores de tamanho igual aos demais&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data.frame(x = 1:10, y = 1:5)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     x y
## 1   1 1
## 2   2 2
## 3   3 3
## 4   4 4
## 5   5 5
## 6   6 1
## 7   7 2
## 8   8 3
## 9   9 4
## 10 10 5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# erro
tibble(x = 1:10, y = 1:5)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error: Tibble columns must have compatible sizes.
## * Size 10: Existing data.
## * Size 5: Column `y`.
## i Only values of size one are recycled.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tibble(x = 1:10, y = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 2
##        x     y
##    &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
##  1     1     1
##  2     2     1
##  3     3     1
##  4     4     1
##  5     5     1
##  6     6     1
##  7     7     1
##  8     8     1
##  9     9     1
## 10    10     1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tibble(x = 1:10, y = c(1:5, 1:5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 2
##        x     y
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
##  1     1     1
##  2     2     2
##  3     3     3
##  4     4     4
##  5     5     5
##  6     6     1
##  7     7     2
##  8     8     3
##  9     9     4
## 10    10     5
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Tibbles s√£o estritas com rela√ß√£o as opera√ß√µes de subsetting com &lt;code&gt;[&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df1 &amp;lt;- data.frame(x = 1:3, y = 3:1)
class(df1[,1:2])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;data.frame&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;class(df1[,1])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;integer&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df2 &amp;lt;- tibble(x = 1:3, y = 3:1)
class(df2[, 1:2])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;tbl_df&amp;quot;     &amp;quot;tbl&amp;quot;        &amp;quot;data.frame&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;class(df2[, 1])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;tbl_df&amp;quot;     &amp;quot;tbl&amp;quot;        &amp;quot;data.frame&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Se quiser extrair s√≥ uma coluna, utilize &#39;[[&#39; ou &#39;$&#39;
class(df2[[1]])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;integer&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;class(df2$x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;integer&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Elas tamb√©m n√£o aceitam &amp;lsquo;partial matching&amp;rsquo; de nomes de vari√°veis.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- data.frame(nome_de_cavalo = 1)
df$nome
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df2 &amp;lt;- tibble(nome_de_cavalo = 1)
df2$nome
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Unknown or uninitialised column: `nome`.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## NULL
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;tidyr&#34;&gt;&lt;code&gt;tidyr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Ok, nossos dados est√£o no R, mas, muitas vezes, n√£o est√£o no formato adequado. De maneira geral, analistas de dados v√£o dar prefer√™ncia a um formato parecido com este:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia1_files/tidy-1.png&#34; alt=&#34;Tidy Data&#34;&gt;&lt;/p&gt;
&lt;p&gt;Isto tem uma raz√£o de ser que deve tornar-se √≥bvia quando tentarmos realizar as opera√ß√µes de transforma√ß√£o de vari√°veis, visualiza√ß√£o, modelos, etc. Por√©m, muitas vezes outras considera√ß√µes s√£o feitas na hora registrar os dados, armazen√°-los, apresent√°-los ao p√∫blico, por isso, frequentemente nossos dados n√£o est√£o no formato tidy e precisam ser reformatados. Essa √© uma das principais tarefas do tidyr e √© nela que vamos nos concentrar.&lt;/p&gt;
&lt;p&gt;Atente que reformata√ß√£o, como muitos outros aspectos da an√°lise de dados, n√£o √© receita de bolo. Muitas vezes o formato desejado n√£o √© √≥bvio, muito menos os passos necess√°rios para chegar l√°. Por√©m, vou apresentar as ferramentas e alguns exemplos simples que cobrem muitos dos nossos casos de uso.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyr)
who
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7,240 x 60
##    country  iso2  iso3   year new_sp_m014 new_sp_m1524 new_sp_m2534 new_sp_m3544
##    &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;       &amp;lt;int&amp;gt;        &amp;lt;int&amp;gt;        &amp;lt;int&amp;gt;        &amp;lt;int&amp;gt;
##  1 Afghani~ AF    AFG    1980          NA           NA           NA           NA
##  2 Afghani~ AF    AFG    1981          NA           NA           NA           NA
##  3 Afghani~ AF    AFG    1982          NA           NA           NA           NA
##  4 Afghani~ AF    AFG    1983          NA           NA           NA           NA
##  5 Afghani~ AF    AFG    1984          NA           NA           NA           NA
##  6 Afghani~ AF    AFG    1985          NA           NA           NA           NA
##  7 Afghani~ AF    AFG    1986          NA           NA           NA           NA
##  8 Afghani~ AF    AFG    1987          NA           NA           NA           NA
##  9 Afghani~ AF    AFG    1988          NA           NA           NA           NA
## 10 Afghani~ AF    AFG    1989          NA           NA           NA           NA
## # ... with 7,230 more rows, and 52 more variables: new_sp_m4554 &amp;lt;int&amp;gt;,
## #   new_sp_m5564 &amp;lt;int&amp;gt;, new_sp_m65 &amp;lt;int&amp;gt;, new_sp_f014 &amp;lt;int&amp;gt;,
## #   new_sp_f1524 &amp;lt;int&amp;gt;, new_sp_f2534 &amp;lt;int&amp;gt;, new_sp_f3544 &amp;lt;int&amp;gt;,
## #   new_sp_f4554 &amp;lt;int&amp;gt;, new_sp_f5564 &amp;lt;int&amp;gt;, new_sp_f65 &amp;lt;int&amp;gt;,
## #   new_sn_m014 &amp;lt;int&amp;gt;, new_sn_m1524 &amp;lt;int&amp;gt;, new_sn_m2534 &amp;lt;int&amp;gt;,
## #   new_sn_m3544 &amp;lt;int&amp;gt;, new_sn_m4554 &amp;lt;int&amp;gt;, new_sn_m5564 &amp;lt;int&amp;gt;,
## #   new_sn_m65 &amp;lt;int&amp;gt;, new_sn_f014 &amp;lt;int&amp;gt;, new_sn_f1524 &amp;lt;int&amp;gt;,
## #   new_sn_f2534 &amp;lt;int&amp;gt;, new_sn_f3544 &amp;lt;int&amp;gt;, new_sn_f4554 &amp;lt;int&amp;gt;,
## #   new_sn_f5564 &amp;lt;int&amp;gt;, new_sn_f65 &amp;lt;int&amp;gt;, new_ep_m014 &amp;lt;int&amp;gt;,
## #   new_ep_m1524 &amp;lt;int&amp;gt;, new_ep_m2534 &amp;lt;int&amp;gt;, new_ep_m3544 &amp;lt;int&amp;gt;,
## #   new_ep_m4554 &amp;lt;int&amp;gt;, new_ep_m5564 &amp;lt;int&amp;gt;, new_ep_m65 &amp;lt;int&amp;gt;,
## #   new_ep_f014 &amp;lt;int&amp;gt;, new_ep_f1524 &amp;lt;int&amp;gt;, new_ep_f2534 &amp;lt;int&amp;gt;,
## #   new_ep_f3544 &amp;lt;int&amp;gt;, new_ep_f4554 &amp;lt;int&amp;gt;, new_ep_f5564 &amp;lt;int&amp;gt;,
## #   new_ep_f65 &amp;lt;int&amp;gt;, newrel_m014 &amp;lt;int&amp;gt;, newrel_m1524 &amp;lt;int&amp;gt;,
## #   newrel_m2534 &amp;lt;int&amp;gt;, newrel_m3544 &amp;lt;int&amp;gt;, newrel_m4554 &amp;lt;int&amp;gt;,
## #   newrel_m5564 &amp;lt;int&amp;gt;, newrel_m65 &amp;lt;int&amp;gt;, newrel_f014 &amp;lt;int&amp;gt;,
## #   newrel_f1524 &amp;lt;int&amp;gt;, newrel_f2534 &amp;lt;int&amp;gt;, newrel_f3544 &amp;lt;int&amp;gt;,
## #   newrel_f4554 &amp;lt;int&amp;gt;, newrel_f5564 &amp;lt;int&amp;gt;, newrel_f65 &amp;lt;int&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esse √© um banco de dados dif√≠cil de analisar, ele tem 60 colunas, indicando o n√∫mero de casos de tuberculose em diversos est√°gios da doen√ßa, por pa√≠s e ano. O problema √© que ao inv√©s de termos algo como:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tribble(
  ~pais, ~ano, ~tipo, ~idade, ~casos,
  &amp;quot;brasil&amp;quot;, 1980, &amp;quot;extrapulmonar&amp;quot;, &amp;quot;15-24&amp;quot;, 10,
  &amp;quot;brasil&amp;quot;, 1990, &amp;quot;relapso&amp;quot;, &amp;quot;15-24&amp;quot;, 10
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 5
##   pais     ano tipo          idade casos
##   &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1 brasil  1980 extrapulmonar 15-24    10
## 2 brasil  1990 relapso       15-24    10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As informa√ß√µes de tipo de tuberculose e idade dos pacientes est√£o espalhadas pelas colunas. Pra encurtar a hist√≥ria, precisamos &amp;ldquo;tombar&amp;rdquo; esse banco para que essas colunas se tornem um novo conjunto de vari√°veis. Vamos passo a passo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Primeiro, vamos excluir as colunas iso2 e iso3, porque elas s√£o a mesma informa√ß√£o redundante
who$iso2 &amp;lt;- NULL
who$iso3 &amp;lt;- NULL

who1 &amp;lt;- pivot_longer(who,
                     cols = c(new_sp_m014:newrel_f65),
                     names_to = &amp;quot;tipo_tb&amp;quot;,
                     values_to = &amp;quot;casos&amp;quot;,
                     values_drop_na = TRUE)
who1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 76,046 x 4
##    country      year tipo_tb      casos
##    &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;int&amp;gt;
##  1 Afghanistan  1997 new_sp_m014      0
##  2 Afghanistan  1997 new_sp_m1524    10
##  3 Afghanistan  1997 new_sp_m2534     6
##  4 Afghanistan  1997 new_sp_m3544     3
##  5 Afghanistan  1997 new_sp_m4554     5
##  6 Afghanistan  1997 new_sp_m5564     2
##  7 Afghanistan  1997 new_sp_m65       0
##  8 Afghanistan  1997 new_sp_f014      5
##  9 Afghanistan  1997 new_sp_f1524    38
## 10 Afghanistan  1997 new_sp_f2534    36
## # ... with 76,036 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nosso primeiro passo √© transformar todas as colunas de novos casos em um par de colunas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cols&lt;/code&gt; indica quais colunas ser√£o tombadas e quais ser√£o mantidas.&lt;/li&gt;
&lt;li&gt;Uma coluna &lt;code&gt;names_to&lt;/code&gt; recebe as categorias da vari√°vel.&lt;/li&gt;
&lt;li&gt;Uma coluna &lt;code&gt;values_to&lt;/code&gt; recebe os valores das c√©lulas.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;values_drop_na&lt;/code&gt; √© uma op√ß√£o para eliminar c√©lulas vazias.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essa primeira transforma√ß√£o j√° nos d√° um banco de dados um pouco mais amig√°vel, por√©m, ainda temos vari√°veis &amp;ldquo;presas&amp;rdquo; na coluna &lt;code&gt;tipo_tb&lt;/code&gt;. Vamos tentar solt√°-las.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# primeiro, corrigir uma pequena inconsistencia:
unique(who1$tipo_tb)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;new_sp_m014&amp;quot;  &amp;quot;new_sp_m1524&amp;quot; &amp;quot;new_sp_m2534&amp;quot; &amp;quot;new_sp_m3544&amp;quot; &amp;quot;new_sp_m4554&amp;quot;
##  [6] &amp;quot;new_sp_m5564&amp;quot; &amp;quot;new_sp_m65&amp;quot;   &amp;quot;new_sp_f014&amp;quot;  &amp;quot;new_sp_f1524&amp;quot; &amp;quot;new_sp_f2534&amp;quot;
## [11] &amp;quot;new_sp_f3544&amp;quot; &amp;quot;new_sp_f4554&amp;quot; &amp;quot;new_sp_f5564&amp;quot; &amp;quot;new_sp_f65&amp;quot;   &amp;quot;new_sn_m014&amp;quot; 
## [16] &amp;quot;new_sn_m1524&amp;quot; &amp;quot;new_sn_m2534&amp;quot; &amp;quot;new_sn_m3544&amp;quot; &amp;quot;new_sn_m4554&amp;quot; &amp;quot;new_sn_m5564&amp;quot;
## [21] &amp;quot;new_sn_m65&amp;quot;   &amp;quot;new_ep_m014&amp;quot;  &amp;quot;new_ep_m1524&amp;quot; &amp;quot;new_ep_m2534&amp;quot; &amp;quot;new_ep_m3544&amp;quot;
## [26] &amp;quot;new_ep_m4554&amp;quot; &amp;quot;new_ep_m5564&amp;quot; &amp;quot;new_ep_m65&amp;quot;   &amp;quot;new_sn_f014&amp;quot;  &amp;quot;newrel_m014&amp;quot; 
## [31] &amp;quot;newrel_f014&amp;quot;  &amp;quot;new_sn_f1524&amp;quot; &amp;quot;new_sn_f2534&amp;quot; &amp;quot;new_sn_f3544&amp;quot; &amp;quot;new_sn_f4554&amp;quot;
## [36] &amp;quot;new_sn_f5564&amp;quot; &amp;quot;new_sn_f65&amp;quot;   &amp;quot;new_ep_f014&amp;quot;  &amp;quot;new_ep_f1524&amp;quot; &amp;quot;new_ep_f2534&amp;quot;
## [41] &amp;quot;new_ep_f3544&amp;quot; &amp;quot;new_ep_f4554&amp;quot; &amp;quot;new_ep_f5564&amp;quot; &amp;quot;new_ep_f65&amp;quot;   &amp;quot;newrel_m1524&amp;quot;
## [46] &amp;quot;newrel_m2534&amp;quot; &amp;quot;newrel_m3544&amp;quot; &amp;quot;newrel_m4554&amp;quot; &amp;quot;newrel_m5564&amp;quot; &amp;quot;newrel_m65&amp;quot;  
## [51] &amp;quot;newrel_f1524&amp;quot; &amp;quot;newrel_f2534&amp;quot; &amp;quot;newrel_f3544&amp;quot; &amp;quot;newrel_f4554&amp;quot; &amp;quot;newrel_f5564&amp;quot;
## [56] &amp;quot;newrel_f65&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Notem que newrel deveria ser new_rel
# Alguns de voc√™s devem conhecer &#39;gsub&#39;
who1$tipo_tb &amp;lt;- gsub(&amp;quot;newrel&amp;quot;, &amp;quot;new_rel&amp;quot;, who1$tipo_tb)

# Agora, podemos usar outra fun√ß√£o chave do tidyr, &#39;separate&#39;
who2 &amp;lt;- who1 %&amp;gt;%  separate(col = tipo_tb,
                           into = c(NA, &amp;quot;tipo_tb&amp;quot;, &amp;quot;sexo_idade&amp;quot;),
                           sep = &amp;quot;_&amp;quot;)
who2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 76,046 x 5
##    country      year tipo_tb sexo_idade casos
##    &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt;
##  1 Afghanistan  1997 sp      m014           0
##  2 Afghanistan  1997 sp      m1524         10
##  3 Afghanistan  1997 sp      m2534          6
##  4 Afghanistan  1997 sp      m3544          3
##  5 Afghanistan  1997 sp      m4554          5
##  6 Afghanistan  1997 sp      m5564          2
##  7 Afghanistan  1997 sp      m65            0
##  8 Afghanistan  1997 sp      f014           5
##  9 Afghanistan  1997 sp      f1524         38
## 10 Afghanistan  1997 sp      f2534         36
## # ... with 76,036 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# E outra passagem de separate para separar a idade do sexo
who3 &amp;lt;- who2 %&amp;gt;% separate(col = sexo_idade,
                          into = c(&amp;quot;sexo&amp;quot;, &amp;quot;idade&amp;quot;),
                          sep = 1)
who3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 76,046 x 6
##    country      year tipo_tb sexo  idade casos
##    &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;
##  1 Afghanistan  1997 sp      m     014       0
##  2 Afghanistan  1997 sp      m     1524     10
##  3 Afghanistan  1997 sp      m     2534      6
##  4 Afghanistan  1997 sp      m     3544      3
##  5 Afghanistan  1997 sp      m     4554      5
##  6 Afghanistan  1997 sp      m     5564      2
##  7 Afghanistan  1997 sp      m     65        0
##  8 Afghanistan  1997 sp      f     014       5
##  9 Afghanistan  1997 sp      f     1524     38
## 10 Afghanistan  1997 sp      f     2534     36
## # ... with 76,036 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bem melhor, n√£o acham? Estamos agora com um banco de dados muito mais adequado para uma an√°lise de dados em R. Cada linha √© uma observa√ß√£o, cada coluna √© uma informa√ß√£o sobre ela.&lt;/p&gt;
&lt;p&gt;Alguns de voc√™s podem ter reparado que fizemos um caminho em que nosso banco de dados passou de ter muitas colunas para muitas linhas (ficou mais &amp;ldquo;longo&amp;rdquo;) e depois precisamos separar algumas das colunas que criamos em outras (o que fizemos com separate). Podemos facilmente imaginar situa√ß√µes em que queremos fazer o caminho inverso: transformar um banco do formato longo para o formato com mais colunas e unir colunas separadas em uma nova. Vamos ver um exemplo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Exemplo adaptado de https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population
populacao &amp;lt;- tribble(
  ~Rank, ~Country, ~Population,	~&#39;% of world&#39;, ~Day, ~Month, ~Year, ~Source,
  1L,         &amp;quot;China&amp;quot;,    1411778724, &amp;quot;17.9%&amp;quot;,  &amp;quot;1&amp;quot;, &amp;quot;Nov&amp;quot;, &amp;quot;2020&amp;quot;,       &amp;quot;Seventh Census on 2020&amp;quot;,
  2L,         &amp;quot;India&amp;quot;,    1377123716, &amp;quot;17.5%&amp;quot;, &amp;quot;19&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;2021&amp;quot;, &amp;quot;National population clock[3]&amp;quot;,
  3L, &amp;quot;United States&amp;quot;,     331695937, &amp;quot;4.22%&amp;quot;, &amp;quot;19&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;2021&amp;quot;, &amp;quot;National population clock[4]&amp;quot;,
  4L,     &amp;quot;Indonesia&amp;quot;,     271350000, &amp;quot;3.45%&amp;quot;, &amp;quot;31&amp;quot;, &amp;quot;Dec&amp;quot;, &amp;quot;2020&amp;quot;,  &amp;quot;National annual estimate[5]&amp;quot;,
  5L,      &amp;quot;Pakistan&amp;quot;,     225200000, &amp;quot;2.86%&amp;quot;,  &amp;quot;1&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;2021&amp;quot;,             &amp;quot;UN projection[2]&amp;quot;,
  6L,        &amp;quot;Brazil&amp;quot;,     213154869, &amp;quot;2.71%&amp;quot;, &amp;quot;19&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;2021&amp;quot;, &amp;quot;National population clock[6]&amp;quot;,
  7L,       &amp;quot;Nigeria&amp;quot;,     211401000, &amp;quot;2.69%&amp;quot;,  &amp;quot;1&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;2021&amp;quot;,             &amp;quot;UN projection[2]&amp;quot;,
  8L,    &amp;quot;Bangladesh&amp;quot;,     170689832, &amp;quot;2.17%&amp;quot;, &amp;quot;19&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;2021&amp;quot;, &amp;quot;National population clock[7]&amp;quot;,
  9L,        &amp;quot;Russia&amp;quot;,     146171015, &amp;quot;1.86%&amp;quot;,  &amp;quot;1&amp;quot;, &amp;quot;Jan&amp;quot;, &amp;quot;2021&amp;quot;,  &amp;quot;National annual estimate[8]&amp;quot;,
  10L,       &amp;quot;Mexico&amp;quot;,     126014024, &amp;quot;1.60%&amp;quot;,  &amp;quot;2&amp;quot;, &amp;quot;Mar&amp;quot;, &amp;quot;2020&amp;quot;,        &amp;quot;2020 census result[9]&amp;quot;
)
populacao
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 8
##     Rank Country     Population `% of world` Day   Month Year  Source           
##    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;            &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;            
##  1     1 China       1411778724 17.9%        1     Nov   2020  Seventh Census o~
##  2     2 India       1377123716 17.5%        19    May   2021  National populat~
##  3     3 United Sta~  331695937 4.22%        19    May   2021  National populat~
##  4     4 Indonesia    271350000 3.45%        31    Dec   2020  National annual ~
##  5     5 Pakistan     225200000 2.86%        1     Jul   2021  UN projection[2] 
##  6     6 Brazil       213154869 2.71%        19    May   2021  National populat~
##  7     7 Nigeria      211401000 2.69%        1     Jul   2021  UN projection[2] 
##  8     8 Bangladesh   170689832 2.17%        19    May   2021  National populat~
##  9     9 Russia       146171015 1.86%        1     Jan   2021  National annual ~
## 10    10 Mexico       126014024 1.60%        2     Mar   2020  2020 census resu~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Imagine que, por qualquer motivo, voc√™ prefira trabalhar com uma vari√°vel &amp;ldquo;Data&amp;rdquo; ao inv√©s de dia, m√™s e ano. Podemos usar &lt;code&gt;unite&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;populacao2 &amp;lt;- populacao %&amp;gt;% unite(col = Data, Day, Month, Year, sep = &amp;quot; &amp;quot;)
populacao2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 6
##     Rank Country      Population `% of world` Data       Source                 
##    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;                  
##  1     1 China        1411778724 17.9%        1 Nov 2020 Seventh Census on 2020 
##  2     2 India        1377123716 17.5%        19 May 20~ National population cl~
##  3     3 United Stat~  331695937 4.22%        19 May 20~ National population cl~
##  4     4 Indonesia     271350000 3.45%        31 Dec 20~ National annual estima~
##  5     5 Pakistan      225200000 2.86%        1 Jul 2021 UN projection[2]       
##  6     6 Brazil        213154869 2.71%        19 May 20~ National population cl~
##  7     7 Nigeria       211401000 2.69%        1 Jul 2021 UN projection[2]       
##  8     8 Bangladesh    170689832 2.17%        19 May 20~ National population cl~
##  9     9 Russia        146171015 1.86%        1 Jan 2021 National annual estima~
## 10    10 Mexico        126014024 1.60%        2 Mar 2020 2020 census result[9]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O outro problema que precisamos resolver frequentemente, √© separar um par de vari√°veis em diversas colunas, fazendo o caminho inverso que fizemos no caso do dataset da OMS.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;us_rent_income
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 104 x 5
##    GEOID NAME       variable estimate   moe
##    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 01    Alabama    income      24476   136
##  2 01    Alabama    rent          747     3
##  3 02    Alaska     income      32940   508
##  4 02    Alaska     rent         1200    13
##  5 04    Arizona    income      27517   148
##  6 04    Arizona    rent          972     4
##  7 05    Arkansas   income      23789   165
##  8 05    Arkansas   rent          709     5
##  9 06    California income      29454   109
## 10 06    California rent         1358     3
## # ... with 94 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No exemplo acima, queremos separar em colunas os valores das vari√°veis de renda e valor do aluguel. Esse tipo de opera√ß√£o tem um certo grau de abstra√ß√£o que me deu bastante dor de cabe√ßa para entender inicialmente, ent√£o vamos olhar com carinho para o que queremos ter depois da transforma√ß√£o.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;us_rent_income2 &amp;lt;- tribble(
  ~GEOID, ~NAME, ~income_estimate, ~rent_estimate, ~income_moe, ~rent_moe,
  &amp;quot;01&amp;quot;, &amp;quot;Alabama&amp;quot;, 24476,  747, 136, 3,
  &amp;quot;02&amp;quot;, &amp;quot;Alaska&amp;quot;, 32940, 1200, 508, 13
)
us_rent_income2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 6
##   GEOID NAME    income_estimate rent_estimate income_moe rent_moe
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 01    Alabama           24476           747        136        3
## 2 02    Alaska            32940          1200        508       13
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O banco que queremos tem uma cara assim. Ele tem mais colunas novas e menos linhas, j√° que eu tinha no formato tidy uma vari√°vel chamada &amp;ldquo;variable&amp;rdquo; que guardava os valores renda e aluguel e duas colunas que guardavam os valores da estimativa e do moe. Agora, eu vou ter 4 colunas, duas para as estimativas de renda e aluguel e duas para os moes das mesmas vari√°veis. Como especificar isso para o banco todo? Usando &lt;code&gt;pivot_wider&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;us_rent_income %&amp;gt;% pivot_wider(names_from = variable, values_from = c(estimate, moe))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 52 x 6
##    GEOID NAME                 estimate_income estimate_rent moe_income moe_rent
##    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;                          &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 01    Alabama                        24476           747        136        3
##  2 02    Alaska                         32940          1200        508       13
##  3 04    Arizona                        27517           972        148        4
##  4 05    Arkansas                       23789           709        165        5
##  5 06    California                     29454          1358        109        3
##  6 08    Colorado                       32401          1125        109        5
##  7 09    Connecticut                    35326          1123        195        5
##  8 10    Delaware                       31560          1076        247       10
##  9 11    District of Columbia           43198          1424        681       17
## 10 12    Florida                        25952          1077         70        3
## # ... with 42 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As fun√ß√µes &lt;code&gt;pivot_&lt;/code&gt; tem diversos outros argumentos e cobrem diversos casos de uso. Vejam este exemplo da documenta√ß√£o de &lt;code&gt;pivot_longer&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;anscombe
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    x1 x2 x3 x4    y1   y2    y3    y4
## 1  10 10 10  8  8.04 9.14  7.46  6.58
## 2   8  8  8  8  6.95 8.14  6.77  5.76
## 3  13 13 13  8  7.58 8.74 12.74  7.71
## 4   9  9  9  8  8.81 8.77  7.11  8.84
## 5  11 11 11  8  8.33 9.26  7.81  8.47
## 6  14 14 14  8  9.96 8.10  8.84  7.04
## 7   6  6  6  8  7.24 6.13  6.08  5.25
## 8   4  4  4 19  4.26 3.10  5.39 12.50
## 9  12 12 12  8 10.84 9.13  8.15  5.56
## 10  7  7  7  8  4.82 7.26  6.42  7.91
## 11  5  5  5  8  5.68 4.74  5.73  6.89
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos transformar esse banco de dados rapidamente usando um dos argumentos de &lt;code&gt;pivot_longer&lt;/code&gt;, chamado &lt;code&gt;names_pattern&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;anscombe %&amp;gt;% pivot_longer(everything(),
                          names_to = c(&amp;quot;.value&amp;quot;, &amp;quot;set&amp;quot;),
                          names_pattern = &amp;quot;(.)(.)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 44 x 3
##    set       x     y
##    &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 1        10  8.04
##  2 2        10  9.14
##  3 3        10  7.46
##  4 4         8  6.58
##  5 1         8  6.95
##  6 2         8  8.14
##  7 3         8  6.77
##  8 4         8  5.76
##  9 1        13  7.58
## 10 2        13  8.74
## # ... with 34 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esse exemplo √© interessante, porque ele se aproveita de uma &amp;ldquo;regular expression&amp;rdquo;, tema da parte do nosso curso em que falaremos sobre manipula√ß√£o de strings com o &lt;code&gt;stringr&lt;/code&gt;. Resumidas as contas, as colunas se chamam &amp;ldquo;x1, x2, x3 &amp;hellip;&amp;rdquo; e a string &amp;ldquo;(.)(.)&amp;rdquo; indica que h√° dois &amp;ldquo;grupos&amp;rdquo; formados por um caractere cada. A string &amp;ldquo;.value&amp;rdquo; que vai no argumento de cima √© um atalho da fun√ß√£o para dizer &amp;ldquo;pegue o valor de todas as c√©lulas das vari√°veis selecionadas&amp;rdquo;, aqui, todas. Ou seja, ele indica para a fun√ß√£o que o primeiro caractere &amp;ldquo;x&amp;rdquo; ou &amp;ldquo;y&amp;rdquo; definir√° uma nova vari√°vel e armazenar√° os valores das celulas, enquanto o segundo grupo &amp;ldquo;1&amp;rdquo;, &amp;ldquo;2&amp;rdquo;, &amp;ldquo;3&amp;rdquo; ou &amp;ldquo;4&amp;rdquo; formar√° uma segunda vari√°vel chamada &amp;ldquo;set&amp;rdquo; que cont√©m apenas os nomes das colunas. Deu um n√≥ na cabe√ßa?&lt;/p&gt;
&lt;p&gt;Uma √∫ltima preocupa√ß√£o ao utilizar a reformata√ß√£o de dados √© o que ocorre com os valores &lt;code&gt;NA&lt;/code&gt;. Vejamos este exemplo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;acoes &amp;lt;- tibble(
  ano   = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
  qdr   = c(   1,    2,    3,    4,    2,    3,    4),
  lucro = c(1.88, 0.59, 0.35,   NA, 0.92, 0.17, 2.66)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Existem dois tipos de valor nulo, &lt;strong&gt;expl√≠cito&lt;/strong&gt; se diz de um valor nulo como aquele NA que aparece na vari√°vel lucro. &lt;strong&gt;Impl√≠cito&lt;/strong&gt; √© o valor que ocorre no primeiro quadrimestre de 2016, onde sequer foi adicionada uma linha no banco de dados. Os valores impl√≠citos s√£o muito sacanas, porque eles n√£o s√£o imediatamente vis√≠veis.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;acoes %&amp;gt;% 
  pivot_wider(names_from = ano, values_from = lucro)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##     qdr `2015` `2016`
##   &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
## 1     1   1.88  NA   
## 2     2   0.59   0.92
## 3     3   0.35   0.17
## 4     4  NA      2.66
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ao transformar o banco, o valor impl√≠cito ficou expl√≠cito. Caso voc√™ n√£o esteja interessado neste valor, voc√™ pode passar o &lt;code&gt;values_drop_na&lt;/code&gt; durante a transforma√ß√£o de volta ao formato original.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;acoes %&amp;gt;% 
  pivot_wider(names_from = ano, values_from = lucro) %&amp;gt;% 
  pivot_longer(c(`2015`, `2016`),
               names_to = &amp;quot;ano&amp;quot;,
               values_to = &amp;quot;lucro&amp;quot;,
               values_drop_na = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##     qdr ano   lucro
##   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 2015   1.88
## 2     2 2015   0.59
## 3     2 2016   0.92
## 4     3 2015   0.35
## 5     3 2016   0.17
## 6     4 2016   2.66
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Que faz os valores missing desaparecem.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;complete&lt;/code&gt; pode ser usada pra tornar valores impl√≠citos, expl√≠citos! A fun√ß√£o toma todas as colunas pedidas e verifica todas as combina√ß√µes poss√≠veis de valores, preenchendo as lacunas com &lt;code&gt;NA&lt;/code&gt;. Cuidado ao utilizar complete com valores num√©ricos ou bancos de dados muito grandes, pois o n√∫mero de combina√ß√µes pode ser infinitamente grande e travar sua sess√£o.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;acoes %&amp;gt;% complete(ano, qdr)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 3
##     ano   qdr lucro
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1  2015     1  1.88
## 2  2015     2  0.59
## 3  2015     3  0.35
## 4  2015     4 NA   
## 5  2016     1 NA   
## 6  2016     2  0.92
## 7  2016     3  0.17
## 8  2016     4  2.66
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pra encerrar, &lt;code&gt;fill&lt;/code&gt; serve para aqueles casos em que um valor missing indica que a √∫ltima observa√ß√£o deve ser repetida. Pesquisadores brasileiros das antigas podem lembrar-se do Censo de 1991, em que o IBGE registrava os arquivos de dom√≠cilio e pessoas com esse sistema. Em ingl√™s, isso se chama LOCF, ou &amp;ldquo;last observation carried forward&amp;rdquo;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;treatment &amp;lt;- tribble(
  ~ person,           ~ treatment, ~response,
  &amp;quot;Derrick Whitmore&amp;quot;, 1,           7,
  NA,                 2,           10,
  NA,                 3,           9,
  &amp;quot;Katherine Burke&amp;quot;,  1,           4
)
treatment
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   person           treatment response
##   &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 Derrick Whitmore         1        7
## 2 &amp;lt;NA&amp;gt;                     2       10
## 3 &amp;lt;NA&amp;gt;                     3        9
## 4 Katherine Burke          1        4
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;treatment %&amp;gt;% fill(person)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   person           treatment response
##   &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 Derrick Whitmore         1        7
## 2 Derrick Whitmore         2       10
## 3 Derrick Whitmore         3        9
## 4 Katherine Burke          1        4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tidyr tem tamb√©m outras funcionalidades relevantes para modelagem estat√≠stica, mas acho que isso sai um pouco do escopo do curso. Quem sabe a gente n√£o faz um curso posterior s√≥ sobre modelagem no tidyverse?&lt;/p&gt;
&lt;h2 id=&#34;revis√£o&#34;&gt;Revis√£o&lt;/h2&gt;
&lt;h3 id=&#34;readr-1&#34;&gt;&lt;code&gt;readr&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;O pacote &lt;code&gt;readr&lt;/code&gt; apresenta uma fam√≠lia de fun√ß√µes para substituir as fun√ß√µes do &lt;code&gt;base&lt;/code&gt; relacionadas a importa√ß√£o de arquivos em formato texto, seja delimitado ou largura-fixa. S√£o elas,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read_delim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_csv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_csv2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_tsv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_table&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_fwf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;E assim sucessivamente. Durante o processo de importa√ß√£o, voc√™ pode querer especificar o tipo de coluna com &lt;code&gt;cols&lt;/code&gt; ou &lt;code&gt;cols_only&lt;/code&gt;, usando o argumento &lt;code&gt;col_types&lt;/code&gt;. Ou use uma string do tipo &amp;ldquo;ddcdiDT&amp;rdquo; em que cada letra √© um tipo de vari√°vel.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;col_integer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;col_double&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;col_factor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;col_character&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Etc. Voc√™ tamb√©m pode querer definir caracter√≠sticas de localiza√ß√£o, como a codifica√ß√£o de caracteres, os separadores de decimal e de milhar e etc. A melhor forma de fazer isso √© definir um &lt;code&gt;locale&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ah, e voc√™ sempre pode salvar com &lt;code&gt;write_&lt;/code&gt;, inclusive salvando/lendo compactado para &lt;code&gt;bzip&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt; ou &lt;code&gt;xzip&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;tibble&#34;&gt;&lt;code&gt;tibble&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Tibbles s√£o uma vers√£o do data.frame com algumas regrinhas novas. Vou apenas repet√≠-las aqui de forma resumida.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tibbles tem um m√©todo print mais bonito e amig√°vel, especialmente para bancos com muitas observa√ß√µes e vari√°veis.&lt;/li&gt;
&lt;li&gt;elas s√£o estritas com opera√ß√µes de subsetting com &lt;code&gt;[&lt;/code&gt; e &lt;code&gt;$&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;elas n√£o aceita a reciclagem de argumento de tamanho diferente de 1.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tidyr-1&#34;&gt;&lt;code&gt;tidyr&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Tidyr √© um pacote de reformata√ß√£o de bancos, criando novas linhas e colunas a partir da reorganiza√ß√£o das vari√°veis e valores existentes. Suas principais opera√ß√µes s√£o:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pivot_longer&lt;/code&gt; para converter colunas em linhas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pivot_wider&lt;/code&gt; para converter linhas em colunas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;separate&lt;/code&gt; para separar uma coluna em v√°rias com base em caracteres&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unite&lt;/code&gt; para unir diversas colunas em uma com base em caracteres&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ufa. Acabou n√©? Posso ir dormir j√°? Claro, s√≥ fazer uns exerc√≠cios!&lt;/p&gt;
&lt;h2 id=&#34;exerc√≠cios&#34;&gt;Exerc√≠cios&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Como voc√™ importaria o banco &amp;ldquo;epa78.csv&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;file &amp;lt;- readr_example(&amp;quot;epa78.txt&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Importe o banco &amp;ldquo;challenge.csv&amp;rdquo; e resolva os problemas com o tipo da coluna.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;file &amp;lt;- readr_example(&amp;quot;challenge.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Com o banco sala_aula dado a seguir, transforme-o para que ele contenha as vari√°veis nome, avalia√ß√£o e nota.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sala_aula &amp;lt;- tribble(
 ~name,    ~teste1,  ~teste2,  ~prova1,
 &amp;quot;Billy&amp;quot;,  &amp;quot;&amp;lt;NA&amp;gt;&amp;quot;,   &amp;quot;D&amp;quot;   ,   &amp;quot;C&amp;quot;,
 &amp;quot;Suzy&amp;quot;,   &amp;quot;F&amp;quot;,      &amp;quot;&amp;lt;NA&amp;gt;&amp;quot;,   &amp;quot;&amp;lt;NA&amp;gt;&amp;quot;,
 &amp;quot;Lionel&amp;quot;, &amp;quot;B&amp;quot;,      &amp;quot;C&amp;quot;   ,   &amp;quot;B&amp;quot;,
 &amp;quot;Jenny&amp;quot;,  &amp;quot;A&amp;quot;,      &amp;quot;A&amp;quot;   ,   &amp;quot;B&amp;quot;
)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Transforme o banco &lt;code&gt;relig_income&lt;/code&gt; para que ele contenha as colunas religi√£o, renda e frequ√™ncia.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;relig_income
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 18 x 11
##    religion `&amp;lt;$10k` `$10-20k` `$20-30k` `$30-40k` `$40-50k` `$50-75k` `$75-100k`
##    &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
##  1 Agnostic      27        34        60        81        76       137        122
##  2 Atheist       12        27        37        52        35        70         73
##  3 Buddhist      27        21        30        34        33        58         62
##  4 Catholic     418       617       732       670       638      1116        949
##  5 Don‚Äôt k~      15        14        15        11        10        35         21
##  6 Evangel~     575       869      1064       982       881      1486        949
##  7 Hindu          1         9         7         9        11        34         47
##  8 Histori~     228       244       236       238       197       223        131
##  9 Jehovah~      20        27        24        24        21        30         15
## 10 Jewish        19        19        25        25        30        95         69
## 11 Mainlin~     289       495       619       655       651      1107        939
## 12 Mormon        29        40        48        51        56       112         85
## 13 Muslim         6         7         9        10         9        23         16
## 14 Orthodox      13        17        23        32        32        47         38
## 15 Other C~       9         7        11        13        13        14         18
## 16 Other F~      20        33        40        46        49        63         46
## 17 Other W~       5         2         3         4         2         7          3
## 18 Unaffil~     217       299       374       365       341       528        407
## # ... with 3 more variables: $100-150k &amp;lt;dbl&amp;gt;, &amp;gt;150k &amp;lt;dbl&amp;gt;,
## #   Don&#39;t know/refused &amp;lt;dbl&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Transforme o banco &lt;code&gt;billboard&lt;/code&gt; para que ele contenha apenas uma coluna &amp;ldquo;semana&amp;rdquo; e uma coluna com a posi√ß√£o da m√∫sica no ranking.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Dica, voc√™ pode selecionar v√°rias colunas usando o atalho wk1:wk76
billboard 
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 317 x 79
##    artist   track   date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8
##    &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;   &amp;lt;date&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 2 Pac    Baby D~ 2000-02-26      87    82    72    77    87    94    99    NA
##  2 2Ge+her  The Ha~ 2000-09-02      91    87    92    NA    NA    NA    NA    NA
##  3 3 Doors~ Krypto~ 2000-04-08      81    70    68    67    66    57    54    53
##  4 3 Doors~ Loser   2000-10-21      76    76    72    69    67    65    55    59
##  5 504 Boyz Wobble~ 2000-04-15      57    34    25    17    17    31    36    49
##  6 98^0     Give M~ 2000-08-19      51    39    34    26    26    19     2     2
##  7 A*Teens  Dancin~ 2000-07-08      97    97    96    95   100    NA    NA    NA
##  8 Aaliyah  I Don&#39;~ 2000-01-29      84    62    51    41    38    35    35    38
##  9 Aaliyah  Try Ag~ 2000-03-18      59    53    38    28    21    18    16    14
## 10 Adams, ~ Open M~ 2000-08-26      76    76    74    69    68    67    61    58
## # ... with 307 more rows, and 68 more variables: wk9 &amp;lt;dbl&amp;gt;, wk10 &amp;lt;dbl&amp;gt;,
## #   wk11 &amp;lt;dbl&amp;gt;, wk12 &amp;lt;dbl&amp;gt;, wk13 &amp;lt;dbl&amp;gt;, wk14 &amp;lt;dbl&amp;gt;, wk15 &amp;lt;dbl&amp;gt;, wk16 &amp;lt;dbl&amp;gt;,
## #   wk17 &amp;lt;dbl&amp;gt;, wk18 &amp;lt;dbl&amp;gt;, wk19 &amp;lt;dbl&amp;gt;, wk20 &amp;lt;dbl&amp;gt;, wk21 &amp;lt;dbl&amp;gt;, wk22 &amp;lt;dbl&amp;gt;,
## #   wk23 &amp;lt;dbl&amp;gt;, wk24 &amp;lt;dbl&amp;gt;, wk25 &amp;lt;dbl&amp;gt;, wk26 &amp;lt;dbl&amp;gt;, wk27 &amp;lt;dbl&amp;gt;, wk28 &amp;lt;dbl&amp;gt;,
## #   wk29 &amp;lt;dbl&amp;gt;, wk30 &amp;lt;dbl&amp;gt;, wk31 &amp;lt;dbl&amp;gt;, wk32 &amp;lt;dbl&amp;gt;, wk33 &amp;lt;dbl&amp;gt;, wk34 &amp;lt;dbl&amp;gt;,
## #   wk35 &amp;lt;dbl&amp;gt;, wk36 &amp;lt;dbl&amp;gt;, wk37 &amp;lt;dbl&amp;gt;, wk38 &amp;lt;dbl&amp;gt;, wk39 &amp;lt;dbl&amp;gt;, wk40 &amp;lt;dbl&amp;gt;,
## #   wk41 &amp;lt;dbl&amp;gt;, wk42 &amp;lt;dbl&amp;gt;, wk43 &amp;lt;dbl&amp;gt;, wk44 &amp;lt;dbl&amp;gt;, wk45 &amp;lt;dbl&amp;gt;, wk46 &amp;lt;dbl&amp;gt;,
## #   wk47 &amp;lt;dbl&amp;gt;, wk48 &amp;lt;dbl&amp;gt;, wk49 &amp;lt;dbl&amp;gt;, wk50 &amp;lt;dbl&amp;gt;, wk51 &amp;lt;dbl&amp;gt;, wk52 &amp;lt;dbl&amp;gt;,
## #   wk53 &amp;lt;dbl&amp;gt;, wk54 &amp;lt;dbl&amp;gt;, wk55 &amp;lt;dbl&amp;gt;, wk56 &amp;lt;dbl&amp;gt;, wk57 &amp;lt;dbl&amp;gt;, wk58 &amp;lt;dbl&amp;gt;,
## #   wk59 &amp;lt;dbl&amp;gt;, wk60 &amp;lt;dbl&amp;gt;, wk61 &amp;lt;dbl&amp;gt;, wk62 &amp;lt;dbl&amp;gt;, wk63 &amp;lt;dbl&amp;gt;, wk64 &amp;lt;dbl&amp;gt;,
## #   wk65 &amp;lt;dbl&amp;gt;, wk66 &amp;lt;lgl&amp;gt;, wk67 &amp;lt;lgl&amp;gt;, wk68 &amp;lt;lgl&amp;gt;, wk69 &amp;lt;lgl&amp;gt;, wk70 &amp;lt;lgl&amp;gt;,
## #   wk71 &amp;lt;lgl&amp;gt;, wk72 &amp;lt;lgl&amp;gt;, wk73 &amp;lt;lgl&amp;gt;, wk74 &amp;lt;lgl&amp;gt;, wk75 &amp;lt;lgl&amp;gt;, wk76 &amp;lt;lgl&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;
&lt;p&gt;Experimente fazer o caminho inverso dos exerc√≠cios 3 a 5, devolvendo os datasets ao seu formato original. O que voc√™ observou?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;O que os argumentos &lt;code&gt;extra&lt;/code&gt; e &lt;code&gt;fill&lt;/code&gt; em separate fazem? Utilize o exemplo a seguir como guia.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tibble(x = c(&amp;quot;a,b,c&amp;quot;, &amp;quot;d,e,f,g&amp;quot;, &amp;quot;h,i,j&amp;quot;)) %&amp;gt;% 
  separate(x, c(&amp;quot;um&amp;quot;, &amp;quot;dois&amp;quot;, &amp;quot;tres&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Expected 3 pieces. Additional pieces discarded in 1 rows [2].
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   um    dois  tres 
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
## 1 a     b     c    
## 2 d     e     f    
## 3 h     i     j
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tibble(x = c(&amp;quot;a,b,c&amp;quot;, &amp;quot;d,e&amp;quot;, &amp;quot;f,g,i&amp;quot;)) %&amp;gt;% 
  separate(x, c(&amp;quot;um&amp;quot;, &amp;quot;dois&amp;quot;, &amp;quot;tres&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Expected 3 pieces. Missing pieces filled with `NA` in 1 rows [2].
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   um    dois  tres 
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
## 1 a     b     c    
## 2 d     e     &amp;lt;NA&amp;gt; 
## 3 f     g     i
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;Tanto &lt;code&gt;unite&lt;/code&gt; como &lt;code&gt;separate&lt;/code&gt; possuem um argumento &lt;code&gt;remove&lt;/code&gt;. Pra que ele serve e quando voc√™ o utilizaria no valor &lt;code&gt;FALSE&lt;/code&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compare o argumento &lt;code&gt;values_fill&lt;/code&gt; em &lt;code&gt;pivot_wider&lt;/code&gt; e &lt;code&gt;fill&lt;/code&gt; em &lt;code&gt;complete&lt;/code&gt;. Qual √© a diferen√ßa?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;agradecimentos&#34;&gt;Agradecimentos&lt;/h2&gt;
&lt;p&gt;Esse material √© uma adapta√ß√£o livre das vinhetas dos pacotes &lt;code&gt;tidyr&lt;/code&gt;, &lt;code&gt;readr&lt;/code&gt; e &lt;code&gt;tibble&lt;/code&gt; e do cap√≠tulo Tidy Data do &lt;a href=&#34;https://r4ds.had.co.nz/tidy-data.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R for Data Science&lt;/a&gt;, de Wickham &amp;amp; Grolemund.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
