[{"authors":null,"categories":null,"content":"O Laborat√≥rio de An√°lise de Dados em Demografia √© parte do N√∫cleo de Estudos de Popula√ß√£o Elza Berqu√≥ e dedica-se a promo√ß√£o do conhecimento na √°rea de demografia, ci√™ncias sociais quantitativas e ci√™ncia de dados, oferecendo cursos, eventos e infraestrutura para alunos, pesquisadores e o p√∫blico em geral.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://laddem.github.io/author/laddem/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/laddem/","section":"authors","summary":"O Laborat√≥rio de An√°lise de Dados em Demografia √© parte do N√∫cleo de Estudos de Popula√ß√£o Elza Berqu√≥ e dedica-se a promo√ß√£o do conhecimento na √°rea de demografia, ci√™ncias sociais quantitativas e ci√™ncia de dados, oferecendo cursos, eventos e infraestrutura para alunos, pesquisadores e o p√∫blico em geral.","tags":null,"title":"LADDEM","type":"authors"},{"authors":null,"categories":null,"content":"\r\r Table of Contents\r O que voc√™ vai aprender O curso Programa√ß√£o Instrutores Links √∫teis  \r\rO que voc√™ vai aprender  A filosofia de design por tr√°s de um dos pacotes mais populares no R Importa√ß√£o, Manipula√ß√£o e Visualiza√ß√£o de dados na pr√°tica tidyr, dplyr, ggplot2 e v√°rios outros pacotes para simplificar sua rotina de an√°lise de dados  O curso Uma semana, com aulas √† noite, no formato workshop, com muitos exerc√≠cios para praticar e pegar o jeito.\nPrograma√ß√£o \rreadr, tibble e tidyr\rUm modelo de ci√™ncia de dados Uma forma esquem√°tica, mas √∫til de encarar o processo de an√°lise de dados e de produ√ß√£o de conhecimento a partir de informa√ß√µes secund√°rias √© esta figura:\n\r\rstringr, forcats e dplyr\rOpera√ß√µes em vari√°veis e bancos de dados Hoje vamos apresentar dois pacotes com finalidades mais espec√≠ficas para trabalhar com vari√°veis de tipo caractere e fator e um pacote super importante para as opera√ß√µes com bancos de dados.\n\r\rggplot2\rO pacote ggplot2 e a \u0026ldquo;gram√°tica dos gr√°ficos\u0026rdquo; Ainda me lembro da primeira vez que li o terceiro cap√≠tulo de R for Data Science em que o conceito de visualiza√ß√£o de dados √© apresentado junto com a ideia de data.\n\r\rInstrutores Vin√≠cius de Souza Maia\nNat√°lia Martins Arruda\nLinks √∫teis Ci√™ncia de dados em R\nR for Data Science\n","date":1621728000,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1621728000,"objectID":"02eadce3bea228c4a3968729e322add5","permalink":"https://laddem.github.io/courses/tidyverse/","publishdate":"2021-05-23T00:00:00Z","relpermalink":"/courses/tidyverse/","section":"courses","summary":"Aprenda a utilizar o tidyverse nas suas an√°lises de dados.","tags":null,"title":"üìä Aprenda a utilizar o tidyverse","type":"book"},{"authors":null,"categories":null,"content":"Um modelo de ci√™ncia de dados Uma forma esquem√°tica, mas √∫til de encarar o processo de an√°lise de dados e de produ√ß√£o de conhecimento a partir de informa√ß√µes secund√°rias √© esta figura:\nEla acaba sendo um ponto de partida interessante porque contextualiza a maioria dos pacotes que vamos utilizar. O readr √© uma maneira de facilitar e tornar mais r√°pida a importa√ß√£o de dados em formatos comuns, como o texto delimitado por separadores e o formato colunado com larguras-fixas utilizado pelo IBGE.\nA tibble √© uma proposta de moderniza√ß√£o para o data.frame, aproveitando a estrutura flex√≠vel e poderosa, mas mudando certas conven√ß√µes, como a convers√£o de strings para fatores, permitindo a cria√ß√£o de colunas de listas, utiliza√ß√£o de nomes mais complexos para colunas, etc.\nO tidyr √© uma forma de reformatar (reshape) bancos de dados que v√™m em formatos que dificultam seu processamento, permitindo que o analista facilmente reconfigure a informa√ß√£o para o formato mais adequado. Ele √© o primeiro pacote que veremos sobre a parte de \u0026ldquo;cozinha\u0026rdquo; dos dados, no qual √© preciso processar o dado bruto para torn√°-lo pass√≠vel de an√°lise.\nO mesmo pode ser dito para os outros pacotes que veremos nos pr√≥ximos dias. Cada um deles foi pensado para resolver um problema ou facilitar uma rotina de trabalho relacionada com um dos passos descritos acima.\nPrograma√ß√£o liter√°ria V√°rios dos conceitos que guiam o design do tidyverse s√£o orientados por uma certa filosofia. Esta filosofia dita que a principal preocupa√ß√£o por tr√°s de um programa n√£o √© que ele funcione. Eventualmente e com um pouco de persist√™ncia, √© quase sempre poss√≠vel chegar a uma solu√ß√£o t√©cnica adequada. A principal quest√£o √© que o programa √© uma ferramenta de comunica√ß√£o com outras pessoas que o ler√£o, seja seus colegas, colaboradores, alunos ou voc√™ mesmo, daqui a 2 anos, quando lembrar que voc√™ j√° escreveu um programa para aquela tarefa. Trago aqui alguns trechos de Literate Programming, de Donald Knuth (1984), traduzidos livremente por este que vos fala:\n Creio que chegou a hora de melhorar significativamente a documenta√ß√£o dos programas, e que podemos atingir este objetivo tratando programas como obras liter√°rias. Por isso o t√≠tulo: \u0026ldquo;Programa√ß√£o Liter√°ria\u0026rdquo;. Abandonemos os velhos h√°bitos de construir programas: ao inv√©s de imaginar que nossa tarefa principal √© instruir um computador sobre o que deve ser feito, concentremo-nos em explicar aos seres humanos o que queremos que o computador fa√ßa. O praticante da programa√ß√£o liter√°ria pode ser visto como um ensa√≠sta, cuja principal preocupa√ß√£o √© com a clareza da exposi√ß√£o e a excel√™ncia no estilo. Tal autor, com um dicion√°rio na m√£o, escolhe os nomes das vari√°veis com cuidado e explica claramente seu significado. Ele ou ela esmera por um programa que √© compreens√≠vel porque seus conceitos foram introduzidos na melhor ordem poss√≠vel para o entendimento humano, utilizando uma mistura de m√©todos formais e informais que se complementam.\n Assim, v√°rias das escolhas feitas na constru√ß√£o de tidyverse procuram refor√ßar essa caracter√≠stica de interpretabilidade dos programas, como a ordem l√≥gica das opera√ß√µes com o pipe (%\u0026gt;%), fun√ß√µes com nomes mais longos e sem√¢nticos, a utiliza√ß√£o de uma fun√ß√£o espec√≠fica para cada tarefa, ao inv√©s da adapta√ß√£o de fun√ß√µes gen√©ricas para uma grande variedade de tarefas. O prop√≥sito de um c√≥digo escrito como tidyverse √© que, no limite, a pr√≥pria s√≠ntaxe do c√≥digo funcione como parte da documenta√ß√£o do programa.\nO mist√©rio do pipe: %\u0026gt;% Usu√°rios de longa data do R j√° podem ter encontrado no mato esse animal estranho e podem ter ficado confusos com seu significado. O pipe √© de origem humilde e nasceu nos sistemas Unix h√° muitas d√©cadas atr√°s. Seu objetivo √© muito simples: e se voc√™ tiver uma sequ√™ncia de computa√ß√µes em que cada uma recebe o resultado daquela feita anteriormente? Claro que voc√™ poderia fazer:\nx \u0026lt;- 1:10\ry \u0026lt;- diff(x)\rmean(y)\r ## [1] 1\r Mas n√£o seria interessante pular os objetos intermedi√°rios e ir direto ao ponto? O pipe vem do pacote magrittr, mas ele v√™m carregado em quase todos os pacotes do tidyverse. Vamos carregar logo o tibble.\n# Para ter acesso ao pipe, basta carregar um pacote do tidyverse, como tibble, dplyr, tidyr, etc.\r# Vamos carregar o tibble agora\rlibrary(tibble)\rx %\u0026gt;% diff() %\u0026gt;% mean()\r ## [1] 1\r Vejamos um exemplo mais real, quantos artistas existem no dataset billboard? Podemos usar unique e length para descobrir.\nx \u0026lt;- unique(tidyr::billboard$artist)\rlength(x)\r ## [1] 228\r Mas com %\u0026gt;% fica bem melhor:\ntidyr::billboard %\u0026gt;% .$artist %\u0026gt;% unique() %\u0026gt;% length()\r ## [1] 228\r Ok, mas como ele funciona? √â simples, o pipe carrega o objeto a sua esquerda num ponto . invis√≠vel que √© automaticamente passado como o primeiro argumento da fun√ß√£o √† direita.\nx \u0026lt;- 1:10\rmean(x)\r ## [1] 5.5\r x %\u0026gt;% mean()\r ## [1] 5.5\r OK, mas e se meu argumento n√£o for o primeiro, ainda posso usar pipe? Pode! √â s√≥ usar explicitamente um ponto no lugar onde voc√™ quer aproveitar o efeito:\niris %\u0026gt;% boxplot(Sepal.Length ~ Species, data = .)\r O ponto . depois de data indica indica que ali deve ser colocado o iris. O pipe √© uma pe√ßa chave de muitas fun√ß√µes do tidyverse, n√£o porque ele seja obrigat√≥rio, mas sim porque ele permite expressar sequ√™ncias de opera√ß√µes numa ordem mais l√≥gica, do tipo: \u0026ldquo;Primeiro fa√ßa a, ent√£o b, ent√£o c, \u0026hellip; \u0026ldquo;, ao contr√°rio da forma como isto √© geralmente feito usando par√™nteses para preced√™ncia.\n# Compare\rmean(diff(1:10))\r ## [1] 1\r 1:10 %\u0026gt;% diff %\u0026gt;% mean\r ## [1] 1\r E assim fica desmistificado o mist√©rio do pipe! Um √∫ltimo pulo do gato: pelo amor de deus ningu√©m digita Shift + %, \u0026gt;, Shift + %, basta usar o atalho: Ctrl + Shift + M que ele p√µe um pipe separado por espa√ßos %\u0026gt;%.\nreadr Usu√°rios do R provavelmente v√£o estar familiarizados com os nossos leitores de arquivos mais comuns: read.table e read.csv. Talvez muitos de voc√™s j√° at√© memorizaram alguns dos argumentos mais comuns. N√£o √© o caso aqui de revisitar esta fun√ß√£o, mas o readr tem muitos paralelos com elas, porque √© pensado como uma nova vers√£o da mesma coisa.\n# Comecemos carregando o readr\rlibrary(readr)\r Debaixo do cap√¥ O readr, como as fun√ß√µes de leitura do base √© uma cole√ß√£o de parsers, que transformam texto em objetos R com o tipo desejado.\nparse_number(c(\u0026quot;1\u0026quot;, \u0026quot;20\u0026quot;, \u0026quot;38\u0026quot;))\r ## [1] 1 20 38\r parse_character(c(\u0026quot;banana\u0026quot;, \u0026quot;ma√ß√£\u0026quot;, \u0026quot;p√™ra\u0026quot;))\r ## [1] \u0026quot;banana\u0026quot; \u0026quot;ma\u0026lt;e7\u0026gt;\u0026lt;e3\u0026gt;\u0026quot; \u0026quot;p\u0026lt;ea\u0026gt;ra\u0026quot;\r # Note os acentos e caracteres especiais\rparse_character(c(\u0026quot;banana\u0026quot;, \u0026quot;ma√ß√£\u0026quot;, \u0026quot;p√™ra\u0026quot;), locale = locale(encoding = \u0026quot;Windows-1252\u0026quot;))\r ## [1] \u0026quot;banana\u0026quot; \u0026quot;ma√ß√£\u0026quot; \u0026quot;p√™ra\u0026quot;\r parse_logical(c(\u0026quot;true\u0026quot;, \u0026quot;false\u0026quot;, \u0026quot;true\u0026quot;))\r ## [1] TRUE FALSE TRUE\r Em geral, a gente n√£o precisa descer tanto o n√≠vel, a gente vai trabalhar mesmo √© com os leitores de dados \u0026ldquo;retangulares\u0026rdquo;. Como os do base, eles s√£o read_csv, read_table, etc. Vamos trabalhar com bancos de dados que j√° v√™m no pacote, para facilitar o processo.\n# Lista os datasets que vem no pacote\rreadr_example()\r ## [1] \u0026quot;challenge.csv\u0026quot; \u0026quot;epa78.txt\u0026quot; \u0026quot;example.log\u0026quot; ## [4] \u0026quot;fwf-sample.txt\u0026quot; \u0026quot;massey-rating.txt\u0026quot; \u0026quot;mtcars.csv\u0026quot; ## [7] \u0026quot;mtcars.csv.bz2\u0026quot; \u0026quot;mtcars.csv.zip\u0026quot;\r Uma coisa que gosto de fazer √© olhar como o arquivo est√° organizado antes de tentar abr√≠-lo. Muitos de voc√™s podem fazer isso com readLines. Ela ganhou sua vers√£o no pacote com read_lines.\n# Vamos tentar abrir massey-rating.txt\rread_lines(readr_example(\u0026quot;massey-rating.txt\u0026quot;), n_max = 10)\r ## [1] \u0026quot;UCC PAY LAZ KPK RT COF BIH DII ENG ACU Rank Team Conf\u0026quot; ## [2] \u0026quot; 1 1 1 1 1 1 1 1 1 1 1 Ohio St B10 \u0026quot;\r## [3] \u0026quot; 2 2 2 2 2 2 2 2 4 2 2 Oregon P12 \u0026quot;\r## [4] \u0026quot; 3 4 3 4 3 4 3 4 2 3 3 Alabama SEC \u0026quot;\r## [5] \u0026quot; 4 3 4 3 4 3 5 3 3 4 4 TCU B12 \u0026quot;\r## [6] \u0026quot; 6 6 6 5 5 7 6 5 6 11 5 Michigan St B10 \u0026quot;\r## [7] \u0026quot; 7 7 7 6 7 6 11 8 7 8 6 Georgia SEC \u0026quot;\r## [8] \u0026quot; 5 5 5 7 6 8 4 6 5 5 7 Florida St ACC \u0026quot;\r## [9] \u0026quot; 8 8 9 9 10 5 7 7 10 7 8 Baylor B12 \u0026quot;\r## [10] \u0026quot; 9 11 8 13 11 11 12 9 14 9 9 Georgia Tech ACC \u0026quot;\r # Identificando o separador, escolho a fun√ß√£o adequada\rread_table(readr_example(\u0026quot;massey-rating.txt\u0026quot;))\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## UCC = col_double(),\r## PAY = col_double(),\r## LAZ = col_double(),\r## KPK = col_double(),\r## RT = col_double(),\r## COF = col_double(),\r## BIH = col_double(),\r## DII = col_double(),\r## ENG = col_double(),\r## ACU = col_double(),\r## Rank = col_double(),\r## Team = col_character(),\r## Conf = col_character()\r## )\r ## # A tibble: 10 x 13\r## UCC PAY LAZ KPK RT COF BIH DII ENG ACU Rank Team Conf ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 1 1 1 1 1 1 1 1 1 1 1 Ohio~ B10 ## 2 2 2 2 2 2 2 2 2 4 2 2 Oreg~ P12 ## 3 3 4 3 4 3 4 3 4 2 3 3 Alab~ SEC ## 4 4 3 4 3 4 3 5 3 3 4 4 TCU B12 ## 5 6 6 6 5 5 7 6 5 6 11 5 Mich~ B10 ## 6 7 7 7 6 7 6 11 8 7 8 6 Geor~ SEC ## 7 5 5 5 7 6 8 4 6 5 5 7 Flor~ ACC ## 8 8 8 9 9 10 5 7 7 10 7 8 Bayl~ B12 ## 9 9 11 8 13 11 11 12 9 14 9 9 Geor~ ACC ## 10 13 10 13 11 8 9 10 11 9 10 10 Miss~ SEC\r Como identifiquei que as colunas estavam separadas por espa√ßos, utilizei read_table cujo delimitador √© o espa√ßo \u0026quot; \u0026quot;.\nA segunda feature mais interessante do readr, √© uma interface para selecionar os tipos de colunas que ser√£o importadas. Vejamos o seguinte exemplo.\n# Vamos abrir mtcars.csv\rread_lines(readr_example(\u0026quot;mtcars.csv\u0026quot;), n_max = 10)\r ## [1] \u0026quot;\\\u0026quot;mpg\\\u0026quot;,\\\u0026quot;cyl\\\u0026quot;,\\\u0026quot;disp\\\u0026quot;,\\\u0026quot;hp\\\u0026quot;,\\\u0026quot;drat\\\u0026quot;,\\\u0026quot;wt\\\u0026quot;,\\\u0026quot;qsec\\\u0026quot;,\\\u0026quot;vs\\\u0026quot;,\\\u0026quot;am\\\u0026quot;,\\\u0026quot;gear\\\u0026quot;,\\\u0026quot;carb\\\u0026quot;\u0026quot;\r## [2] \u0026quot;21,6,160,110,3.9,2.62,16.46,0,1,4,4\u0026quot; ## [3] \u0026quot;21,6,160,110,3.9,2.875,17.02,0,1,4,4\u0026quot; ## [4] \u0026quot;22.8,4,108,93,3.85,2.32,18.61,1,1,4,1\u0026quot; ## [5] \u0026quot;21.4,6,258,110,3.08,3.215,19.44,1,0,3,1\u0026quot; ## [6] \u0026quot;18.7,8,360,175,3.15,3.44,17.02,0,0,3,2\u0026quot; ## [7] \u0026quot;18.1,6,225,105,2.76,3.46,20.22,1,0,3,1\u0026quot; ## [8] \u0026quot;14.3,8,360,245,3.21,3.57,15.84,0,0,3,4\u0026quot; ## [9] \u0026quot;24.4,4,146.7,62,3.69,3.19,20,1,0,4,2\u0026quot; ## [10] \u0026quot;22.8,4,140.8,95,3.92,3.15,22.9,1,0,4,2\u0026quot;\r # Identificamos o separador de colunas, selecionamos a fun√ß√£o adequada\rread_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;))\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## mpg = col_double(),\r## cyl = col_double(),\r## disp = col_double(),\r## hp = col_double(),\r## drat = col_double(),\r## wt = col_double(),\r## qsec = col_double(),\r## vs = col_double(),\r## am = col_double(),\r## gear = col_double(),\r## carb = col_double()\r## )\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r## 2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r## 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r## 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r## 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r## 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\r## 7 14.3 8 360 245 3.21 3.57 15.8 0 0 3 4\r## 8 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r## 9 22.8 4 141. 95 3.92 3.15 22.9 1 0 4 2\r## 10 19.2 6 168. 123 3.92 3.44 18.3 1 0 4 4\r## # ... with 22 more rows\r O console nos mostra que a leitura do banco foi completada, mas tamb√©m mostra Column Specification. Isto indica qual o tipo de dado que foi identificado automaticamente numa an√°lise feita pela fun√ß√£o guess_parser. Em diversos casos, n√≥s podemos querer identificar manualmente as colunas. Vejamos um exemplo:\n# Vamos identificar as colunas com spec\rspec_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;))\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## mpg = col_double(),\r## cyl = col_double(),\r## disp = col_double(),\r## hp = col_double(),\r## drat = col_double(),\r## wt = col_double(),\r## qsec = col_double(),\r## vs = col_double(),\r## am = col_double(),\r## gear = col_double(),\r## carb = col_double()\r## )\r ## cols(\r## mpg = col_double(),\r## cyl = col_double(),\r## disp = col_double(),\r## hp = col_double(),\r## drat = col_double(),\r## wt = col_double(),\r## qsec = col_double(),\r## vs = col_double(),\r## am = col_double(),\r## gear = col_double(),\r## carb = col_double()\r## )\r # Copia e cola, modifica as colunas que queremos alterar\rspec_cols \u0026lt;- cols(\rmpg = col_double(),\rcyl = col_factor(), # N de cilindros do autom√≥vel\rdisp = col_double(),\rhp = col_double(),\rdrat = col_double(),\rwt = col_double(),\rqsec = col_double(),\rvs = col_double(),\ram = col_factor(c(\u0026quot;0\u0026quot;, \u0026quot;1\u0026quot;)), # Transmiss√£o autom√°tica ou manual\rgear = col_double(),\rcarb = col_double()\r)\rdf \u0026lt;- read_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), col_types = spec_cols)\rdf\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r## 2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r## 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r## 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r## 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r## 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\r## 7 14.3 8 360 245 3.21 3.57 15.8 0 0 3 4\r## 8 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r## 9 22.8 4 141. 95 3.92 3.15 22.9 1 0 4 2\r## 10 19.2 6 168. 123 3.92 3.44 18.3 1 0 4 4\r## # ... with 22 more rows\r # Para importar apenas colunas selecionadas, utilize 'cols_only()'\rspec_cols2 \u0026lt;- cols_only(\rmpg = col_double(),\rcyl = col_factor(), # N de cilindros do autom√≥vel\ram = col_factor(c(\u0026quot;0\u0026quot;, \u0026quot;1\u0026quot;)), # Transmiss√£o autom√°tica ou manual\rgear = col_double(),\rcarb = col_double()\r)\rdf2 \u0026lt;- read_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), col_types = spec_cols2)\rdf2\r ## # A tibble: 32 x 5\r## mpg cyl am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 1 4 4\r## 2 21 6 1 4 4\r## 3 22.8 4 1 4 1\r## 4 21.4 6 0 3 1\r## 5 18.7 8 0 3 2\r## 6 18.1 6 0 3 1\r## 7 14.3 8 0 3 4\r## 8 24.4 4 0 4 2\r## 9 22.8 4 0 4 2\r## 10 19.2 6 0 4 4\r## # ... with 22 more rows\r # Para indicar os tipos de colunas de um jeito mais sucinto, utilize uma string:\rdf \u0026lt;- read_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), col_types = \u0026quot;dfddddddfdd\u0026quot;)\r# S√≥ cuidado pra n√£o perder a conta dos ds!\rdf\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r## 2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r## 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r## 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r## 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r## 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\r## 7 14.3 8 360 245 3.21 3.57 15.8 0 0 3 4\r## 8 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r## 9 22.8 4 141. 95 3.92 3.15 22.9 1 0 4 2\r## 10 19.2 6 168. 123 3.92 3.44 18.3 1 0 4 4\r## # ... with 22 more rows\r Voc√™ tamb√©m pode querer definir caracter√≠sticas de localiza√ß√£o, como a codifica√ß√£o de caracteres, os separadores de decimal e de milhar e etc. A melhor forma de fazer isso √© definir um locale.\nmeu_locale \u0026lt;- locale(encoding = \u0026quot;UTF-8\u0026quot;, decimal_mark = \u0026quot;,\u0026quot;, grouping_mark = \u0026quot;.\u0026quot;)\r A√≠ √© s√≥ passar isso pra uma das fun√ß√µes do pacote sob o argumento locale\nread_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), locale = meu_locale)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## mpg = col_number(),\r## cyl = col_double(),\r## disp = col_number(),\r## hp = col_double(),\r## drat = col_number(),\r## wt = col_number(),\r## qsec = col_number(),\r## vs = col_double(),\r## am = col_double(),\r## gear = col_double(),\r## carb = col_double()\r## )\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 39 262 1646 0 1 4 4\r## 2 21 6 160 110 39 2875 1702 0 1 4 4\r## 3 228 4 108 93 385 232 1861 1 1 4 1\r## 4 214 6 258 110 308 3215 1944 1 0 3 1\r## 5 187 8 360 175 315 344 1702 0 0 3 2\r## 6 181 6 225 105 276 346 2022 1 0 3 1\r## 7 143 8 360 245 321 357 1584 0 0 3 4\r## 8 244 4 1467 62 369 319 20 1 0 4 2\r## 9 228 4 1408 95 392 315 229 1 0 4 2\r## 10 192 6 1676 123 392 344 183 1 0 4 4\r## # ... with 22 more rows\r Existe ainda a possibilidade de ler dados colunados com largura-fixa. readr implementa quatro fun√ß√µes diferentes para ajudar na constru√ß√£o do dicion√°rio:\n# Nossos dados\rx \u0026lt;- readr_example(\u0026quot;fwf-sample.txt\u0026quot;)\rread_lines(x, n_max = 10)\r ## [1] \u0026quot;John Smith WA 418-Y11-4111\u0026quot;\r## [2] \u0026quot;Mary Hartford CA 319-Z19-4341\u0026quot;\r## [3] \u0026quot;Evan Nolan IL 219-532-c301\u0026quot;\r # separados por espa√ßo\rdic1 \u0026lt;- fwf_empty(x)\rdic1\r ## $begin\r## [1] 0 5 20 30\r## ## $end\r## [1] 4 13 22 NA\r## ## $skip\r## [1] 0\r## ## $col_names\r## [1] \u0026quot;X1\u0026quot; \u0026quot;X2\u0026quot; \u0026quot;X3\u0026quot; \u0026quot;X4\u0026quot;\r df \u0026lt;- read_fwf(file = x, col_positions = dic1)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## X1 = col_character(),\r## X2 = col_character(),\r## X3 = col_character(),\r## X4 = col_character()\r## )\r df\r ## # A tibble: 3 x 4\r## X1 X2 X3 X4 ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 John Smith WA 418-Y11-4111\r## 2 Mary Hartford CA 319-Z19-4341\r## 3 Evan Nolan IL 219-532-c301\r # indicando a largura da coluna\rlarguras \u0026lt;- c(20, 10, 12)\rdic2 \u0026lt;- fwf_widths(larguras)\rdic2\r ## # A tibble: 3 x 3\r## begin end col_names\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; ## 1 0 20 X1 ## 2 20 30 X2 ## 3 30 42 X3\r df \u0026lt;- read_fwf(file = x, col_positions = dic2)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## X1 = col_character(),\r## X2 = col_character(),\r## X3 = col_character()\r## )\r df\r ## # A tibble: 3 x 3\r## X1 X2 X3 ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 John Smith WA 418-Y11-4111\r## 2 Mary Hartford CA 319-Z19-4341\r## 3 Evan Nolan IL 219-532-c301\r # indicando onde cada coluna come√ßa e termina\rcomeca \u0026lt;- c(1, 21, 30)\rtermina \u0026lt;- c(20, 29, 42)\rdic3 \u0026lt;- fwf_positions(comeca, termina)\rdic3\r ## # A tibble: 3 x 3\r## begin end col_names\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; ## 1 0 20 X1 ## 2 20 29 X2 ## 3 29 42 X3\r df \u0026lt;- read_fwf(file = x, col_positions = dic3)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## X1 = col_character(),\r## X2 = col_character(),\r## X3 = col_character()\r## )\r df\r ## # A tibble: 3 x 3\r## X1 X2 X3 ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 John Smith WA 418-Y11-4111\r## 2 Mary Hartford CA 319-Z19-4341\r## 3 Evan Nolan IL 219-532-c301\r # indicando pares nome-valor\rdic4 \u0026lt;- fwf_cols(\rnome = c(1, 20),\ruf = c(21, 29),\rnumero = c(30, 42))\rdic4\r ## # A tibble: 3 x 3\r## begin end col_names\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; ## 1 0 20 nome ## 2 20 29 uf ## 3 29 42 numero\r df \u0026lt;- read_fwf(file = x, col_positions = dic4)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## nome = col_character(),\r## uf = col_character(),\r## numero = col_character()\r## )\r df\r ## # A tibble: 3 x 3\r## nome uf numero ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 John Smith WA 418-Y11-4111\r## 2 Mary Hartford CA 319-Z19-4341\r## 3 Evan Nolan IL 219-532-c301\r Especificar dicion√°rios para arquivos colunados √© um p√©-no-saco, por sorte, existem pacotes que j√° fizeram parte desse trabalho por n√≥s. O readr n√£o melhora muita o servi√ßo manual de constru√ß√£o de dicion√°rios, o que ele oferece √© um ganho de performance tremendo. read_fwf √© centenas de vezes mais r√°pido que o base read.fwf.\nEm termos do que o pacote faz, √© basicamente isso. A √∫nica coisa que falta mencionar √© que ele importa os dados como tibbles ao inv√©s do data.frame padr√£o, mas isso j√° √© um √≥timo gancho pra nossa pr√≥xima parte.\ntibbles Tibbles s√£o basicamente data.frames com um m√©todo mais bonitinho de print. Elas automaticamente se ajustam a largura da sua tela, omitindo as colunas que estouram, e por padr√£o imprimem s√≥ as 10 primeiras observa√ß√µes. Outras caracter√≠sticas que pessoalmente gosto, √© que elas informam o tipo de vari√°vel junto com o nome, arrendondam digitos significativos, destacam n√∫meros grandes, negativos, NAs e etc.\ndf \u0026lt;- read_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), col_types = cols()) # omitir a especifica√ß√£o\rdf\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r## 2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r## 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r## 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r## 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r## 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\r## 7 14.3 8 360 245 3.21 3.57 15.8 0 0 3 4\r## 8 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r## 9 22.8 4 141. 95 3.92 3.15 22.9 1 0 4 2\r## 10 19.2 6 168. 123 3.92 3.44 18.3 1 0 4 4\r## # ... with 22 more rows\r Do ponto de vista pr√°tico, elas funcionam exatamente igual a data.frames, tudo que voc√™ pode fazer com um data.frame, voc√™ faz com tibbles. O que elas trazem de novidade √©:\n Elas nunca mudam o tipo de dado inputado.  df1 \u0026lt;- data.frame(x = list(1:5, 1:10, 1:20))\rdf1\r ## x.1.5 x.1.10 x.1.20\r## 1 1 1 1\r## 2 2 2 2\r## 3 3 3 3\r## 4 4 4 4\r## 5 5 5 5\r## 6 1 6 6\r## 7 2 7 7\r## 8 3 8 8\r## 9 4 9 9\r## 10 5 10 10\r## 11 1 1 11\r## 12 2 2 12\r## 13 3 3 13\r## 14 4 4 14\r## 15 5 5 15\r## 16 1 6 16\r## 17 2 7 17\r## 18 3 8 18\r## 19 4 9 19\r## 20 5 10 20\r df2 \u0026lt;- tibble(x = list(1:5, 1:10, 1:20))\rdf2\r ## # A tibble: 3 x 1\r## x ## \u0026lt;list\u0026gt; ## 1 \u0026lt;int [5]\u0026gt; ## 2 \u0026lt;int [10]\u0026gt;\r## 3 \u0026lt;int [20]\u0026gt;\r  Elas nunca ajustam os nomes das vari√°veis  names(data.frame(`nome hipster` = 1))\r ## [1] \u0026quot;nome.hipster\u0026quot;\r names(tibble(`nome hipster` = 1))\r ## [1] \u0026quot;nome hipster\u0026quot;\r  Ela avalia cada argumento de forma \u0026ldquo;pregui√ßosa\u0026rdquo; e sequencial  # erro\rdata.frame(x = 1:5, y = x ^ 2)\r ## Error in x^2: argumento n√£o-num√©rico para operador bin√°rio\r # funciona\rtibble(x = 1:5, y = x ^ 2)\r ## # A tibble: 5 x 2\r## x y\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 1\r## 2 2 4\r## 3 3 9\r## 4 4 16\r## 5 5 25\r  Ela nunca utiliza row.names  head(data.frame(state.x77))\r ## Population Income Illiteracy Life.Exp Murder HS.Grad Frost Area\r## Alabama 3615 3624 2.1 69.05 15.1 41.3 20 50708\r## Alaska 365 6315 1.5 69.31 11.3 66.7 152 566432\r## Arizona 2212 4530 1.8 70.55 7.8 58.1 15 113417\r## Arkansas 2110 3378 1.9 70.66 10.1 39.9 65 51945\r## California 21198 5114 1.1 71.71 10.3 62.6 20 156361\r## Colorado 2541 4884 0.7 72.06 6.8 63.9 166 103766\r as_tibble(state.x77)\r ## # A tibble: 50 x 8\r## Population Income Illiteracy `Life Exp` Murder `HS Grad` Frost Area\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 3615 3624 2.1 69.0 15.1 41.3 20 50708\r## 2 365 6315 1.5 69.3 11.3 66.7 152 566432\r## 3 2212 4530 1.8 70.6 7.8 58.1 15 113417\r## 4 2110 3378 1.9 70.7 10.1 39.9 65 51945\r## 5 21198 5114 1.1 71.7 10.3 62.6 20 156361\r## 6 2541 4884 0.7 72.1 6.8 63.9 166 103766\r## 7 3100 5348 1.1 72.5 3.1 56 139 4862\r## 8 579 4809 0.9 70.1 6.2 54.6 103 1982\r## 9 8277 4815 1.3 70.7 10.7 52.6 11 54090\r## 10 4931 4091 2 68.5 13.9 40.6 60 58073\r## # ... with 40 more rows\r  Ela muda a \u0026ldquo;regra da reciclagem\u0026rdquo;: apenas s√£o aceitos vetores unit√°rios ou vetores de tamanho igual aos demais  data.frame(x = 1:10, y = 1:5)\r ## x y\r## 1 1 1\r## 2 2 2\r## 3 3 3\r## 4 4 4\r## 5 5 5\r## 6 6 1\r## 7 7 2\r## 8 8 3\r## 9 9 4\r## 10 10 5\r # erro\rtibble(x = 1:10, y = 1:5)\r ## Error: Tibble columns must have compatible sizes.\r## * Size 10: Existing data.\r## * Size 5: Column `y`.\r## i Only values of size one are recycled.\r tibble(x = 1:10, y = 1)\r ## # A tibble: 10 x 2\r## x y\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 1\r## 2 2 1\r## 3 3 1\r## 4 4 1\r## 5 5 1\r## 6 6 1\r## 7 7 1\r## 8 8 1\r## 9 9 1\r## 10 10 1\r tibble(x = 1:10, y = c(1:5, 1:5))\r ## # A tibble: 10 x 2\r## x y\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 1 1\r## 2 2 2\r## 3 3 3\r## 4 4 4\r## 5 5 5\r## 6 6 1\r## 7 7 2\r## 8 8 3\r## 9 9 4\r## 10 10 5\r  Tibbles s√£o estritas com rela√ß√£o as opera√ß√µes de subsetting com [  df1 \u0026lt;- data.frame(x = 1:3, y = 3:1)\rclass(df1[,1:2])\r ## [1] \u0026quot;data.frame\u0026quot;\r class(df1[,1])\r ## [1] \u0026quot;integer\u0026quot;\r df2 \u0026lt;- tibble(x = 1:3, y = 3:1)\rclass(df2[, 1:2])\r ## [1] \u0026quot;tbl_df\u0026quot; \u0026quot;tbl\u0026quot; \u0026quot;data.frame\u0026quot;\r class(df2[, 1])\r ## [1] \u0026quot;tbl_df\u0026quot; \u0026quot;tbl\u0026quot; \u0026quot;data.frame\u0026quot;\r # Se quiser extrair s√≥ uma coluna, utilize '[[' ou '$'\rclass(df2[[1]])\r ## [1] \u0026quot;integer\u0026quot;\r class(df2$x)\r ## [1] \u0026quot;integer\u0026quot;\r Elas tamb√©m n√£o aceitam \u0026lsquo;partial matching\u0026rsquo; de nomes de vari√°veis.\ndf \u0026lt;- data.frame(nome_de_cavalo = 1)\rdf$nome\r ## [1] 1\r df2 \u0026lt;- tibble(nome_de_cavalo = 1)\rdf2$nome\r ## Warning: Unknown or uninitialised column: `nome`.\r ## NULL\r tidyr Ok, nossos dados est√£o no R, mas, muitas vezes, n√£o est√£o no formato adequado. De maneira geral, analistas de dados v√£o dar prefer√™ncia a um formato parecido com este:\nIsto tem uma raz√£o de ser que deve tornar-se √≥bvia quando tentarmos realizar as opera√ß√µes de transforma√ß√£o de vari√°veis, visualiza√ß√£o, modelos, etc. Por√©m, muitas vezes outras considera√ß√µes s√£o feitas na hora registrar os dados, armazen√°-los, apresent√°-los ao p√∫blico, por isso, frequentemente nossos dados n√£o est√£o no formato tidy e precisam ser reformatados. Essa √© uma das principais tarefas do tidyr e √© nela que vamos nos concentrar.\nAtente que reformata√ß√£o, como muitos outros aspectos da an√°lise de dados, n√£o √© receita de bolo. Muitas vezes o formato desejado n√£o √© √≥bvio, muito menos os passos necess√°rios para chegar l√°. Por√©m, vou apresentar as ferramentas e alguns exemplos simples que cobrem muitos dos nossos casos de uso.\nlibrary(tidyr)\rwho\r ## # A tibble: 7,240 x 60\r## country iso2 iso3 year new_sp_m014 new_sp_m1524 new_sp_m2534 new_sp_m3544\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 Afghani~ AF AFG 1980 NA NA NA NA\r## 2 Afghani~ AF AFG 1981 NA NA NA NA\r## 3 Afghani~ AF AFG 1982 NA NA NA NA\r## 4 Afghani~ AF AFG 1983 NA NA NA NA\r## 5 Afghani~ AF AFG 1984 NA NA NA NA\r## 6 Afghani~ AF AFG 1985 NA NA NA NA\r## 7 Afghani~ AF AFG 1986 NA NA NA NA\r## 8 Afghani~ AF AFG 1987 NA NA NA NA\r## 9 Afghani~ AF AFG 1988 NA NA NA NA\r## 10 Afghani~ AF AFG 1989 NA NA NA NA\r## # ... with 7,230 more rows, and 52 more variables: new_sp_m4554 \u0026lt;int\u0026gt;,\r## # new_sp_m5564 \u0026lt;int\u0026gt;, new_sp_m65 \u0026lt;int\u0026gt;, new_sp_f014 \u0026lt;int\u0026gt;,\r## # new_sp_f1524 \u0026lt;int\u0026gt;, new_sp_f2534 \u0026lt;int\u0026gt;, new_sp_f3544 \u0026lt;int\u0026gt;,\r## # new_sp_f4554 \u0026lt;int\u0026gt;, new_sp_f5564 \u0026lt;int\u0026gt;, new_sp_f65 \u0026lt;int\u0026gt;,\r## # new_sn_m014 \u0026lt;int\u0026gt;, new_sn_m1524 \u0026lt;int\u0026gt;, new_sn_m2534 \u0026lt;int\u0026gt;,\r## # new_sn_m3544 \u0026lt;int\u0026gt;, new_sn_m4554 \u0026lt;int\u0026gt;, new_sn_m5564 \u0026lt;int\u0026gt;,\r## # new_sn_m65 \u0026lt;int\u0026gt;, new_sn_f014 \u0026lt;int\u0026gt;, new_sn_f1524 \u0026lt;int\u0026gt;,\r## # new_sn_f2534 \u0026lt;int\u0026gt;, new_sn_f3544 \u0026lt;int\u0026gt;, new_sn_f4554 \u0026lt;int\u0026gt;,\r## # new_sn_f5564 \u0026lt;int\u0026gt;, new_sn_f65 \u0026lt;int\u0026gt;, new_ep_m014 \u0026lt;int\u0026gt;,\r## # new_ep_m1524 \u0026lt;int\u0026gt;, new_ep_m2534 \u0026lt;int\u0026gt;, new_ep_m3544 \u0026lt;int\u0026gt;,\r## # new_ep_m4554 \u0026lt;int\u0026gt;, new_ep_m5564 \u0026lt;int\u0026gt;, new_ep_m65 \u0026lt;int\u0026gt;,\r## # new_ep_f014 \u0026lt;int\u0026gt;, new_ep_f1524 \u0026lt;int\u0026gt;, new_ep_f2534 \u0026lt;int\u0026gt;,\r## # new_ep_f3544 \u0026lt;int\u0026gt;, new_ep_f4554 \u0026lt;int\u0026gt;, new_ep_f5564 \u0026lt;int\u0026gt;,\r## # new_ep_f65 \u0026lt;int\u0026gt;, newrel_m014 \u0026lt;int\u0026gt;, newrel_m1524 \u0026lt;int\u0026gt;,\r## # newrel_m2534 \u0026lt;int\u0026gt;, newrel_m3544 \u0026lt;int\u0026gt;, newrel_m4554 \u0026lt;int\u0026gt;,\r## # newrel_m5564 \u0026lt;int\u0026gt;, newrel_m65 \u0026lt;int\u0026gt;, newrel_f014 \u0026lt;int\u0026gt;,\r## # newrel_f1524 \u0026lt;int\u0026gt;, newrel_f2534 \u0026lt;int\u0026gt;, newrel_f3544 \u0026lt;int\u0026gt;,\r## # newrel_f4554 \u0026lt;int\u0026gt;, newrel_f5564 \u0026lt;int\u0026gt;, newrel_f65 \u0026lt;int\u0026gt;\r Esse √© um banco de dados dif√≠cil de analisar, ele tem 60 colunas, indicando o n√∫mero de casos de tuberculose em diversos est√°gios da doen√ßa, por pa√≠s e ano. O problema √© que ao inv√©s de termos algo como:\ntribble(\r~pais, ~ano, ~tipo, ~idade, ~casos,\r\u0026quot;brasil\u0026quot;, 1980, \u0026quot;extrapulmonar\u0026quot;, \u0026quot;15-24\u0026quot;, 10,\r\u0026quot;brasil\u0026quot;, 1990, \u0026quot;relapso\u0026quot;, \u0026quot;15-24\u0026quot;, 10\r)\r ## # A tibble: 2 x 5\r## pais ano tipo idade casos\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 brasil 1980 extrapulmonar 15-24 10\r## 2 brasil 1990 relapso 15-24 10\r As informa√ß√µes de tipo de tuberculose e idade dos pacientes est√£o espalhadas pelas colunas. Pra encurtar a hist√≥ria, precisamos \u0026ldquo;tombar\u0026rdquo; esse banco para que essas colunas se tornem um novo conjunto de vari√°veis. Vamos passo a passo.\n# Primeiro, vamos excluir as colunas iso2 e iso3, porque elas s√£o a mesma informa√ß√£o redundante\rwho$iso2 \u0026lt;- NULL\rwho$iso3 \u0026lt;- NULL\rwho1 \u0026lt;- pivot_longer(who,\rcols = c(new_sp_m014:newrel_f65),\rnames_to = \u0026quot;tipo_tb\u0026quot;,\rvalues_to = \u0026quot;casos\u0026quot;,\rvalues_drop_na = TRUE)\rwho1\r ## # A tibble: 76,046 x 4\r## country year tipo_tb casos\r## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r## 1 Afghanistan 1997 new_sp_m014 0\r## 2 Afghanistan 1997 new_sp_m1524 10\r## 3 Afghanistan 1997 new_sp_m2534 6\r## 4 Afghanistan 1997 new_sp_m3544 3\r## 5 Afghanistan 1997 new_sp_m4554 5\r## 6 Afghanistan 1997 new_sp_m5564 2\r## 7 Afghanistan 1997 new_sp_m65 0\r## 8 Afghanistan 1997 new_sp_f014 5\r## 9 Afghanistan 1997 new_sp_f1524 38\r## 10 Afghanistan 1997 new_sp_f2534 36\r## # ... with 76,036 more rows\r Nosso primeiro passo √© transformar todas as colunas de novos casos em um par de colunas:\n cols indica quais colunas ser√£o tombadas e quais ser√£o mantidas. Uma coluna names_to recebe as categorias da vari√°vel. Uma coluna values_to recebe os valores das c√©lulas. values_drop_na √© uma op√ß√£o para eliminar c√©lulas vazias.  Essa primeira transforma√ß√£o j√° nos d√° um banco de dados um pouco mais amig√°vel, por√©m, ainda temos vari√°veis \u0026ldquo;presas\u0026rdquo; na coluna tipo_tb. Vamos tentar solt√°-las.\n# primeiro, corrigir uma pequena inconsistencia:\runique(who1$tipo_tb)\r ## [1] \u0026quot;new_sp_m014\u0026quot; \u0026quot;new_sp_m1524\u0026quot; \u0026quot;new_sp_m2534\u0026quot; \u0026quot;new_sp_m3544\u0026quot; \u0026quot;new_sp_m4554\u0026quot;\r## [6] \u0026quot;new_sp_m5564\u0026quot; \u0026quot;new_sp_m65\u0026quot; \u0026quot;new_sp_f014\u0026quot; \u0026quot;new_sp_f1524\u0026quot; \u0026quot;new_sp_f2534\u0026quot;\r## [11] \u0026quot;new_sp_f3544\u0026quot; \u0026quot;new_sp_f4554\u0026quot; \u0026quot;new_sp_f5564\u0026quot; \u0026quot;new_sp_f65\u0026quot; \u0026quot;new_sn_m014\u0026quot; ## [16] \u0026quot;new_sn_m1524\u0026quot; \u0026quot;new_sn_m2534\u0026quot; \u0026quot;new_sn_m3544\u0026quot; \u0026quot;new_sn_m4554\u0026quot; \u0026quot;new_sn_m5564\u0026quot;\r## [21] \u0026quot;new_sn_m65\u0026quot; \u0026quot;new_ep_m014\u0026quot; \u0026quot;new_ep_m1524\u0026quot; \u0026quot;new_ep_m2534\u0026quot; \u0026quot;new_ep_m3544\u0026quot;\r## [26] \u0026quot;new_ep_m4554\u0026quot; \u0026quot;new_ep_m5564\u0026quot; \u0026quot;new_ep_m65\u0026quot; \u0026quot;new_sn_f014\u0026quot; \u0026quot;newrel_m014\u0026quot; ## [31] \u0026quot;newrel_f014\u0026quot; \u0026quot;new_sn_f1524\u0026quot; \u0026quot;new_sn_f2534\u0026quot; \u0026quot;new_sn_f3544\u0026quot; \u0026quot;new_sn_f4554\u0026quot;\r## [36] \u0026quot;new_sn_f5564\u0026quot; \u0026quot;new_sn_f65\u0026quot; \u0026quot;new_ep_f014\u0026quot; \u0026quot;new_ep_f1524\u0026quot; \u0026quot;new_ep_f2534\u0026quot;\r## [41] \u0026quot;new_ep_f3544\u0026quot; \u0026quot;new_ep_f4554\u0026quot; \u0026quot;new_ep_f5564\u0026quot; \u0026quot;new_ep_f65\u0026quot; \u0026quot;newrel_m1524\u0026quot;\r## [46] \u0026quot;newrel_m2534\u0026quot; \u0026quot;newrel_m3544\u0026quot; \u0026quot;newrel_m4554\u0026quot; \u0026quot;newrel_m5564\u0026quot; \u0026quot;newrel_m65\u0026quot; ## [51] \u0026quot;newrel_f1524\u0026quot; \u0026quot;newrel_f2534\u0026quot; \u0026quot;newrel_f3544\u0026quot; \u0026quot;newrel_f4554\u0026quot; \u0026quot;newrel_f5564\u0026quot;\r## [56] \u0026quot;newrel_f65\u0026quot;\r # Notem que newrel deveria ser new_rel\r# Alguns de voc√™s devem conhecer 'gsub'\rwho1$tipo_tb \u0026lt;- gsub(\u0026quot;newrel\u0026quot;, \u0026quot;new_rel\u0026quot;, who1$tipo_tb)\r# Agora, podemos usar outra fun√ß√£o chave do tidyr, 'separate'\rwho2 \u0026lt;- who1 %\u0026gt;% separate(col = tipo_tb,\rinto = c(NA, \u0026quot;tipo_tb\u0026quot;, \u0026quot;sexo_idade\u0026quot;),\rsep = \u0026quot;_\u0026quot;)\rwho2\r ## # A tibble: 76,046 x 5\r## country year tipo_tb sexo_idade casos\r## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r## 1 Afghanistan 1997 sp m014 0\r## 2 Afghanistan 1997 sp m1524 10\r## 3 Afghanistan 1997 sp m2534 6\r## 4 Afghanistan 1997 sp m3544 3\r## 5 Afghanistan 1997 sp m4554 5\r## 6 Afghanistan 1997 sp m5564 2\r## 7 Afghanistan 1997 sp m65 0\r## 8 Afghanistan 1997 sp f014 5\r## 9 Afghanistan 1997 sp f1524 38\r## 10 Afghanistan 1997 sp f2534 36\r## # ... with 76,036 more rows\r # E outra passagem de separate para separar a idade do sexo\rwho3 \u0026lt;- who2 %\u0026gt;% separate(col = sexo_idade,\rinto = c(\u0026quot;sexo\u0026quot;, \u0026quot;idade\u0026quot;),\rsep = 1)\rwho3\r ## # A tibble: 76,046 x 6\r## country year tipo_tb sexo idade casos\r## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r## 1 Afghanistan 1997 sp m 014 0\r## 2 Afghanistan 1997 sp m 1524 10\r## 3 Afghanistan 1997 sp m 2534 6\r## 4 Afghanistan 1997 sp m 3544 3\r## 5 Afghanistan 1997 sp m 4554 5\r## 6 Afghanistan 1997 sp m 5564 2\r## 7 Afghanistan 1997 sp m 65 0\r## 8 Afghanistan 1997 sp f 014 5\r## 9 Afghanistan 1997 sp f 1524 38\r## 10 Afghanistan 1997 sp f 2534 36\r## # ... with 76,036 more rows\r Bem melhor, n√£o acham? Estamos agora com um banco de dados muito mais adequado para uma an√°lise de dados em R. Cada linha √© uma observa√ß√£o, cada coluna √© uma informa√ß√£o sobre ela.\nAlguns de voc√™s podem ter reparado que fizemos um caminho em que nosso banco de dados passou de ter muitas colunas para muitas linhas (ficou mais \u0026ldquo;longo\u0026rdquo;) e depois precisamos separar algumas das colunas que criamos em outras (o que fizemos com separate). Podemos facilmente imaginar situa√ß√µes em que queremos fazer o caminho inverso: transformar um banco do formato longo para o formato com mais colunas e unir colunas separadas em uma nova. Vamos ver um exemplo.\n# Exemplo adaptado de https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population\rpopulacao \u0026lt;- tribble(\r~Rank, ~Country, ~Population,\t~'% of world', ~Day, ~Month, ~Year, ~Source,\r1L, \u0026quot;China\u0026quot;, 1411778724, \u0026quot;17.9%\u0026quot;, \u0026quot;1\u0026quot;, \u0026quot;Nov\u0026quot;, \u0026quot;2020\u0026quot;, \u0026quot;Seventh Census on 2020\u0026quot;,\r2L, \u0026quot;India\u0026quot;, 1377123716, \u0026quot;17.5%\u0026quot;, \u0026quot;19\u0026quot;, \u0026quot;May\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National population clock[3]\u0026quot;,\r3L, \u0026quot;United States\u0026quot;, 331695937, \u0026quot;4.22%\u0026quot;, \u0026quot;19\u0026quot;, \u0026quot;May\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National population clock[4]\u0026quot;,\r4L, \u0026quot;Indonesia\u0026quot;, 271350000, \u0026quot;3.45%\u0026quot;, \u0026quot;31\u0026quot;, \u0026quot;Dec\u0026quot;, \u0026quot;2020\u0026quot;, \u0026quot;National annual estimate[5]\u0026quot;,\r5L, \u0026quot;Pakistan\u0026quot;, 225200000, \u0026quot;2.86%\u0026quot;, \u0026quot;1\u0026quot;, \u0026quot;Jul\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;UN projection[2]\u0026quot;,\r6L, \u0026quot;Brazil\u0026quot;, 213154869, \u0026quot;2.71%\u0026quot;, \u0026quot;19\u0026quot;, \u0026quot;May\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National population clock[6]\u0026quot;,\r7L, \u0026quot;Nigeria\u0026quot;, 211401000, \u0026quot;2.69%\u0026quot;, \u0026quot;1\u0026quot;, \u0026quot;Jul\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;UN projection[2]\u0026quot;,\r8L, \u0026quot;Bangladesh\u0026quot;, 170689832, \u0026quot;2.17%\u0026quot;, \u0026quot;19\u0026quot;, \u0026quot;May\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National population clock[7]\u0026quot;,\r9L, \u0026quot;Russia\u0026quot;, 146171015, \u0026quot;1.86%\u0026quot;, \u0026quot;1\u0026quot;, \u0026quot;Jan\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National annual estimate[8]\u0026quot;,\r10L, \u0026quot;Mexico\u0026quot;, 126014024, \u0026quot;1.60%\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;Mar\u0026quot;, \u0026quot;2020\u0026quot;, \u0026quot;2020 census result[9]\u0026quot;\r)\rpopulacao\r ## # A tibble: 10 x 8\r## Rank Country Population `% of world` Day Month Year Source ## \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 1 China 1411778724 17.9% 1 Nov 2020 Seventh Census o~\r## 2 2 India 1377123716 17.5% 19 May 2021 National populat~\r## 3 3 United Sta~ 331695937 4.22% 19 May 2021 National populat~\r## 4 4 Indonesia 271350000 3.45% 31 Dec 2020 National annual ~\r## 5 5 Pakistan 225200000 2.86% 1 Jul 2021 UN projection[2] ## 6 6 Brazil 213154869 2.71% 19 May 2021 National populat~\r## 7 7 Nigeria 211401000 2.69% 1 Jul 2021 UN projection[2] ## 8 8 Bangladesh 170689832 2.17% 19 May 2021 National populat~\r## 9 9 Russia 146171015 1.86% 1 Jan 2021 National annual ~\r## 10 10 Mexico 126014024 1.60% 2 Mar 2020 2020 census resu~\r Imagine que, por qualquer motivo, voc√™ prefira trabalhar com uma vari√°vel \u0026ldquo;Data\u0026rdquo; ao inv√©s de dia, m√™s e ano. Podemos usar unite:\npopulacao2 \u0026lt;- populacao %\u0026gt;% unite(col = Data, Day, Month, Year, sep = \u0026quot; \u0026quot;)\rpopulacao2\r ## # A tibble: 10 x 6\r## Rank Country Population `% of world` Data Source ## \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 1 China 1411778724 17.9% 1 Nov 2020 Seventh Census on 2020 ## 2 2 India 1377123716 17.5% 19 May 20~ National population cl~\r## 3 3 United Stat~ 331695937 4.22% 19 May 20~ National population cl~\r## 4 4 Indonesia 271350000 3.45% 31 Dec 20~ National annual estima~\r## 5 5 Pakistan 225200000 2.86% 1 Jul 2021 UN projection[2] ## 6 6 Brazil 213154869 2.71% 19 May 20~ National population cl~\r## 7 7 Nigeria 211401000 2.69% 1 Jul 2021 UN projection[2] ## 8 8 Bangladesh 170689832 2.17% 19 May 20~ National population cl~\r## 9 9 Russia 146171015 1.86% 1 Jan 2021 National annual estima~\r## 10 10 Mexico 126014024 1.60% 2 Mar 2020 2020 census result[9]\r O outro problema que precisamos resolver frequentemente, √© separar um par de vari√°veis em diversas colunas, fazendo o caminho inverso que fizemos no caso do dataset da OMS.\nus_rent_income\r ## # A tibble: 104 x 5\r## GEOID NAME variable estimate moe\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 01 Alabama income 24476 136\r## 2 01 Alabama rent 747 3\r## 3 02 Alaska income 32940 508\r## 4 02 Alaska rent 1200 13\r## 5 04 Arizona income 27517 148\r## 6 04 Arizona rent 972 4\r## 7 05 Arkansas income 23789 165\r## 8 05 Arkansas rent 709 5\r## 9 06 California income 29454 109\r## 10 06 California rent 1358 3\r## # ... with 94 more rows\r No exemplo acima, queremos separar em colunas os valores das vari√°veis de renda e valor do aluguel. Esse tipo de opera√ß√£o tem um certo grau de abstra√ß√£o que me deu bastante dor de cabe√ßa para entender inicialmente, ent√£o vamos olhar com carinho para o que queremos ter depois da transforma√ß√£o.\nus_rent_income2 \u0026lt;- tribble(\r~GEOID, ~NAME, ~income_estimate, ~rent_estimate, ~income_moe, ~rent_moe,\r\u0026quot;01\u0026quot;, \u0026quot;Alabama\u0026quot;, 24476, 747, 136, 3,\r\u0026quot;02\u0026quot;, \u0026quot;Alaska\u0026quot;, 32940, 1200, 508, 13\r)\rus_rent_income2\r ## # A tibble: 2 x 6\r## GEOID NAME income_estimate rent_estimate income_moe rent_moe\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 01 Alabama 24476 747 136 3\r## 2 02 Alaska 32940 1200 508 13\r O banco que queremos tem uma cara assim. Ele tem mais colunas novas e menos linhas, j√° que eu tinha no formato tidy uma vari√°vel chamada \u0026ldquo;variable\u0026rdquo; que guardava os valores renda e aluguel e duas colunas que guardavam os valores da estimativa e do moe. Agora, eu vou ter 4 colunas, duas para as estimativas de renda e aluguel e duas para os moes das mesmas vari√°veis. Como especificar isso para o banco todo? Usando pivot_wider.\nus_rent_income %\u0026gt;% pivot_wider(names_from = variable, values_from = c(estimate, moe))\r ## # A tibble: 52 x 6\r## GEOID NAME estimate_income estimate_rent moe_income moe_rent\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 01 Alabama 24476 747 136 3\r## 2 02 Alaska 32940 1200 508 13\r## 3 04 Arizona 27517 972 148 4\r## 4 05 Arkansas 23789 709 165 5\r## 5 06 California 29454 1358 109 3\r## 6 08 Colorado 32401 1125 109 5\r## 7 09 Connecticut 35326 1123 195 5\r## 8 10 Delaware 31560 1076 247 10\r## 9 11 District of Columbia 43198 1424 681 17\r## 10 12 Florida 25952 1077 70 3\r## # ... with 42 more rows\r As fun√ß√µes pivot_ tem diversos outros argumentos e cobrem diversos casos de uso. Vejam este exemplo da documenta√ß√£o de pivot_longer:\nanscombe\r ## x1 x2 x3 x4 y1 y2 y3 y4\r## 1 10 10 10 8 8.04 9.14 7.46 6.58\r## 2 8 8 8 8 6.95 8.14 6.77 5.76\r## 3 13 13 13 8 7.58 8.74 12.74 7.71\r## 4 9 9 9 8 8.81 8.77 7.11 8.84\r## 5 11 11 11 8 8.33 9.26 7.81 8.47\r## 6 14 14 14 8 9.96 8.10 8.84 7.04\r## 7 6 6 6 8 7.24 6.13 6.08 5.25\r## 8 4 4 4 19 4.26 3.10 5.39 12.50\r## 9 12 12 12 8 10.84 9.13 8.15 5.56\r## 10 7 7 7 8 4.82 7.26 6.42 7.91\r## 11 5 5 5 8 5.68 4.74 5.73 6.89\r Podemos transformar esse banco de dados rapidamente usando um dos argumentos de pivot_longer, chamado names_pattern.\nanscombe %\u0026gt;% pivot_longer(everything(),\rnames_to = c(\u0026quot;.value\u0026quot;, \u0026quot;set\u0026quot;),\rnames_pattern = \u0026quot;(.)(.)\u0026quot;)\r ## # A tibble: 44 x 3\r## set x y\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 10 8.04\r## 2 2 10 9.14\r## 3 3 10 7.46\r## 4 4 8 6.58\r## 5 1 8 6.95\r## 6 2 8 8.14\r## 7 3 8 6.77\r## 8 4 8 5.76\r## 9 1 13 7.58\r## 10 2 13 8.74\r## # ... with 34 more rows\r Esse exemplo √© interessante, porque ele se aproveita de uma \u0026ldquo;regular expression\u0026rdquo;, tema da parte do nosso curso em que falaremos sobre manipula√ß√£o de strings com o stringr. Resumidas as contas, as colunas se chamam \u0026ldquo;x1, x2, x3 \u0026hellip;\u0026rdquo; e a string \u0026ldquo;(.)(.)\u0026rdquo; indica que h√° dois \u0026ldquo;grupos\u0026rdquo; formados por um caractere cada. A string \u0026ldquo;.value\u0026rdquo; que vai no argumento de cima √© um atalho da fun√ß√£o para dizer \u0026ldquo;pegue o valor de todas as c√©lulas das vari√°veis selecionadas\u0026rdquo;, aqui, todas. Ou seja, ele indica para a fun√ß√£o que o primeiro caractere \u0026ldquo;x\u0026rdquo; ou \u0026ldquo;y\u0026rdquo; definir√° uma nova vari√°vel e armazenar√° os valores das celulas, enquanto o segundo grupo \u0026ldquo;1\u0026rdquo;, \u0026ldquo;2\u0026rdquo;, \u0026ldquo;3\u0026rdquo; ou \u0026ldquo;4\u0026rdquo; formar√° uma segunda vari√°vel chamada \u0026ldquo;set\u0026rdquo; que cont√©m apenas os nomes das colunas. Deu um n√≥ na cabe√ßa?\nUma √∫ltima preocupa√ß√£o ao utilizar a reformata√ß√£o de dados √© o que ocorre com os valores NA. Vejamos este exemplo:\nacoes \u0026lt;- tibble(\rano = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),\rqdr = c( 1, 2, 3, 4, 2, 3, 4),\rlucro = c(1.88, 0.59, 0.35, NA, 0.92, 0.17, 2.66)\r)\r Existem dois tipos de valor nulo, expl√≠cito se diz de um valor nulo como aquele NA que aparece na vari√°vel lucro. Impl√≠cito √© o valor que ocorre no primeiro quadrimestre de 2016, onde sequer foi adicionada uma linha no banco de dados. Os valores impl√≠citos s√£o muito sacanas, porque eles n√£o s√£o imediatamente vis√≠veis.\nacoes %\u0026gt;% pivot_wider(names_from = ano, values_from = lucro)\r ## # A tibble: 4 x 3\r## qdr `2015` `2016`\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 1.88 NA ## 2 2 0.59 0.92\r## 3 3 0.35 0.17\r## 4 4 NA 2.66\r Ao transformar o banco, o valor impl√≠cito ficou expl√≠cito. Caso voc√™ n√£o esteja interessado neste valor, voc√™ pode passar o values_drop_na durante a transforma√ß√£o de volta ao formato original.\nacoes %\u0026gt;% pivot_wider(names_from = ano, values_from = lucro) %\u0026gt;% pivot_longer(c(`2015`, `2016`),\rnames_to = \u0026quot;ano\u0026quot;,\rvalues_to = \u0026quot;lucro\u0026quot;,\rvalues_drop_na = TRUE)\r ## # A tibble: 6 x 3\r## qdr ano lucro\r## \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 2015 1.88\r## 2 2 2015 0.59\r## 3 2 2016 0.92\r## 4 3 2015 0.35\r## 5 3 2016 0.17\r## 6 4 2016 2.66\r Que faz os valores missing desaparecem.\ncomplete pode ser usada pra tornar valores impl√≠citos, expl√≠citos! A fun√ß√£o toma todas as colunas pedidas e verifica todas as combina√ß√µes poss√≠veis de valores, preenchendo as lacunas com NA. Cuidado ao utilizar complete com valores num√©ricos ou bancos de dados muito grandes, pois o n√∫mero de combina√ß√µes pode ser infinitamente grande e travar sua sess√£o.\nacoes %\u0026gt;% complete(ano, qdr)\r ## # A tibble: 8 x 3\r## ano qdr lucro\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2015 1 1.88\r## 2 2015 2 0.59\r## 3 2015 3 0.35\r## 4 2015 4 NA ## 5 2016 1 NA ## 6 2016 2 0.92\r## 7 2016 3 0.17\r## 8 2016 4 2.66\r Pra encerrar, fill serve para aqueles casos em que um valor missing indica que a √∫ltima observa√ß√£o deve ser repetida. Pesquisadores brasileiros das antigas podem lembrar-se do Censo de 1991, em que o IBGE registrava os arquivos de dom√≠cilio e pessoas com esse sistema. Em ingl√™s, isso se chama LOCF, ou \u0026ldquo;last observation carried forward\u0026rdquo;.\ntreatment \u0026lt;- tribble(\r~ person, ~ treatment, ~response,\r\u0026quot;Derrick Whitmore\u0026quot;, 1, 7,\rNA, 2, 10,\rNA, 3, 9,\r\u0026quot;Katherine Burke\u0026quot;, 1, 4\r)\rtreatment\r ## # A tibble: 4 x 3\r## person treatment response\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Derrick Whitmore 1 7\r## 2 \u0026lt;NA\u0026gt; 2 10\r## 3 \u0026lt;NA\u0026gt; 3 9\r## 4 Katherine Burke 1 4\r treatment %\u0026gt;% fill(person)\r ## # A tibble: 4 x 3\r## person treatment response\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Derrick Whitmore 1 7\r## 2 Derrick Whitmore 2 10\r## 3 Derrick Whitmore 3 9\r## 4 Katherine Burke 1 4\r tidyr tem tamb√©m outras funcionalidades relevantes para modelagem estat√≠stica, mas acho que isso sai um pouco do escopo do curso. Quem sabe a gente n√£o faz um curso posterior s√≥ sobre modelagem no tidyverse?\nRevis√£o readr O pacote readr apresenta uma fam√≠lia de fun√ß√µes para substituir as fun√ß√µes do base relacionadas a importa√ß√£o de arquivos em formato texto, seja delimitado ou largura-fixa. S√£o elas,\n read_delim read_csv read_csv2 read_tsv read_table read_fwf  E assim sucessivamente. Durante o processo de importa√ß√£o, voc√™ pode querer especificar o tipo de coluna com cols ou cols_only, usando o argumento col_types. Ou use uma string do tipo \u0026ldquo;ddcdiDT\u0026rdquo; em que cada letra √© um tipo de vari√°vel.\n col_integer col_double col_factor col_character  Etc. Voc√™ tamb√©m pode querer definir caracter√≠sticas de localiza√ß√£o, como a codifica√ß√£o de caracteres, os separadores de decimal e de milhar e etc. A melhor forma de fazer isso √© definir um locale.\nAh, e voc√™ sempre pode salvar com write_, inclusive salvando/lendo compactado para bzip, gzip ou xzip.\ntibble Tibbles s√£o uma vers√£o do data.frame com algumas regrinhas novas. Vou apenas repet√≠-las aqui de forma resumida.\n tibbles tem um m√©todo print mais bonito e amig√°vel, especialmente para bancos com muitas observa√ß√µes e vari√°veis. elas s√£o estritas com opera√ß√µes de subsetting com [ e $. elas n√£o aceita a reciclagem de argumento de tamanho diferente de 1.  tidyr tidyr √© um pacote de reformata√ß√£o de bancos, criando novas linhas e colunas a partir da reorganiza√ß√£o das vari√°veis e valores existentes. Suas principais opera√ß√µes s√£o:\n pivot_longer para converter colunas em linhas pivot_wider para converter linhas em colunas separate para separar uma coluna em v√°rias com base em caracteres unite para unir diversas colunas em uma com base em caracteres  Ufa. Acabou n√©? Posso ir dormir j√°? Claro, s√≥ fazer uns exerc√≠cios!\nExerc√≠cios  Como voc√™ importaria o banco \u0026ldquo;epa78.csv\u0026rdquo;  file \u0026lt;- readr_example(\u0026quot;epa78.txt\u0026quot;)\r Importe o banco \u0026ldquo;challenge.csv\u0026rdquo; e resolva os problemas com o tipo da coluna.  file \u0026lt;- readr_example(\u0026quot;challenge.csv\u0026quot;)\r Com o banco sala_aula dado a seguir, transforme-o para que ele contenha as vari√°veis nome, avalia√ß√£o e nota.  sala_aula \u0026lt;- tribble(\r~name, ~teste1, ~teste2, ~prova1,\r\u0026quot;Billy\u0026quot;, \u0026quot;\u0026lt;NA\u0026gt;\u0026quot;, \u0026quot;D\u0026quot; , \u0026quot;C\u0026quot;,\r\u0026quot;Suzy\u0026quot;, \u0026quot;F\u0026quot;, \u0026quot;\u0026lt;NA\u0026gt;\u0026quot;, \u0026quot;\u0026lt;NA\u0026gt;\u0026quot;,\r\u0026quot;Lionel\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot; , \u0026quot;B\u0026quot;,\r\u0026quot;Jenny\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;A\u0026quot; , \u0026quot;B\u0026quot;\r)\r Transforme o banco relig_income para que ele contenha as colunas religi√£o, renda e frequ√™ncia.  relig_income\r ## # A tibble: 18 x 11\r## religion `\u0026lt;$10k` `$10-20k` `$20-30k` `$30-40k` `$40-50k` `$50-75k` `$75-100k`\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Agnostic 27 34 60 81 76 137 122\r## 2 Atheist 12 27 37 52 35 70 73\r## 3 Buddhist 27 21 30 34 33 58 62\r## 4 Catholic 418 617 732 670 638 1116 949\r## 5 Don‚Äôt k~ 15 14 15 11 10 35 21\r## 6 Evangel~ 575 869 1064 982 881 1486 949\r## 7 Hindu 1 9 7 9 11 34 47\r## 8 Histori~ 228 244 236 238 197 223 131\r## 9 Jehovah~ 20 27 24 24 21 30 15\r## 10 Jewish 19 19 25 25 30 95 69\r## 11 Mainlin~ 289 495 619 655 651 1107 939\r## 12 Mormon 29 40 48 51 56 112 85\r## 13 Muslim 6 7 9 10 9 23 16\r## 14 Orthodox 13 17 23 32 32 47 38\r## 15 Other C~ 9 7 11 13 13 14 18\r## 16 Other F~ 20 33 40 46 49 63 46\r## 17 Other W~ 5 2 3 4 2 7 3\r## 18 Unaffil~ 217 299 374 365 341 528 407\r## # ... with 3 more variables: $100-150k \u0026lt;dbl\u0026gt;, \u0026gt;150k \u0026lt;dbl\u0026gt;,\r## # Don't know/refused \u0026lt;dbl\u0026gt;\r Transforme o banco billboard para que ele contenha apenas uma coluna \u0026ldquo;semana\u0026rdquo; e uma coluna com a posi√ß√£o da m√∫sica no ranking.  # Dica, voc√™ pode selecionar v√°rias colunas usando o atalho wk1:wk76\rbillboard  ## # A tibble: 317 x 79\r## artist track date.entered wk1 wk2 wk3 wk4 wk5 wk6 wk7 wk8\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;date\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2 Pac Baby D~ 2000-02-26 87 82 72 77 87 94 99 NA\r## 2 2Ge+her The Ha~ 2000-09-02 91 87 92 NA NA NA NA NA\r## 3 3 Doors~ Krypto~ 2000-04-08 81 70 68 67 66 57 54 53\r## 4 3 Doors~ Loser 2000-10-21 76 76 72 69 67 65 55 59\r## 5 504 Boyz Wobble~ 2000-04-15 57 34 25 17 17 31 36 49\r## 6 98^0 Give M~ 2000-08-19 51 39 34 26 26 19 2 2\r## 7 A*Teens Dancin~ 2000-07-08 97 97 96 95 100 NA NA NA\r## 8 Aaliyah I Don'~ 2000-01-29 84 62 51 41 38 35 35 38\r## 9 Aaliyah Try Ag~ 2000-03-18 59 53 38 28 21 18 16 14\r## 10 Adams, ~ Open M~ 2000-08-26 76 76 74 69 68 67 61 58\r## # ... with 307 more rows, and 68 more variables: wk9 \u0026lt;dbl\u0026gt;, wk10 \u0026lt;dbl\u0026gt;,\r## # wk11 \u0026lt;dbl\u0026gt;, wk12 \u0026lt;dbl\u0026gt;, wk13 \u0026lt;dbl\u0026gt;, wk14 \u0026lt;dbl\u0026gt;, wk15 \u0026lt;dbl\u0026gt;, wk16 \u0026lt;dbl\u0026gt;,\r## # wk17 \u0026lt;dbl\u0026gt;, wk18 \u0026lt;dbl\u0026gt;, wk19 \u0026lt;dbl\u0026gt;, wk20 \u0026lt;dbl\u0026gt;, wk21 \u0026lt;dbl\u0026gt;, wk22 \u0026lt;dbl\u0026gt;,\r## # wk23 \u0026lt;dbl\u0026gt;, wk24 \u0026lt;dbl\u0026gt;, wk25 \u0026lt;dbl\u0026gt;, wk26 \u0026lt;dbl\u0026gt;, wk27 \u0026lt;dbl\u0026gt;, wk28 \u0026lt;dbl\u0026gt;,\r## # wk29 \u0026lt;dbl\u0026gt;, wk30 \u0026lt;dbl\u0026gt;, wk31 \u0026lt;dbl\u0026gt;, wk32 \u0026lt;dbl\u0026gt;, wk33 \u0026lt;dbl\u0026gt;, wk34 \u0026lt;dbl\u0026gt;,\r## # wk35 \u0026lt;dbl\u0026gt;, wk36 \u0026lt;dbl\u0026gt;, wk37 \u0026lt;dbl\u0026gt;, wk38 \u0026lt;dbl\u0026gt;, wk39 \u0026lt;dbl\u0026gt;, wk40 \u0026lt;dbl\u0026gt;,\r## # wk41 \u0026lt;dbl\u0026gt;, wk42 \u0026lt;dbl\u0026gt;, wk43 \u0026lt;dbl\u0026gt;, wk44 \u0026lt;dbl\u0026gt;, wk45 \u0026lt;dbl\u0026gt;, wk46 \u0026lt;dbl\u0026gt;,\r## # wk47 \u0026lt;dbl\u0026gt;, wk48 \u0026lt;dbl\u0026gt;, wk49 \u0026lt;dbl\u0026gt;, wk50 \u0026lt;dbl\u0026gt;, wk51 \u0026lt;dbl\u0026gt;, wk52 \u0026lt;dbl\u0026gt;,\r## # wk53 \u0026lt;dbl\u0026gt;, wk54 \u0026lt;dbl\u0026gt;, wk55 \u0026lt;dbl\u0026gt;, wk56 \u0026lt;dbl\u0026gt;, wk57 \u0026lt;dbl\u0026gt;, wk58 \u0026lt;dbl\u0026gt;,\r## # wk59 \u0026lt;dbl\u0026gt;, wk60 \u0026lt;dbl\u0026gt;, wk61 \u0026lt;dbl\u0026gt;, wk62 \u0026lt;dbl\u0026gt;, wk63 \u0026lt;dbl\u0026gt;, wk64 \u0026lt;dbl\u0026gt;,\r## # wk65 \u0026lt;dbl\u0026gt;, wk66 \u0026lt;lgl\u0026gt;, wk67 \u0026lt;lgl\u0026gt;, wk68 \u0026lt;lgl\u0026gt;, wk69 \u0026lt;lgl\u0026gt;, wk70 \u0026lt;lgl\u0026gt;,\r## # wk71 \u0026lt;lgl\u0026gt;, wk72 \u0026lt;lgl\u0026gt;, wk73 \u0026lt;lgl\u0026gt;, wk74 \u0026lt;lgl\u0026gt;, wk75 \u0026lt;lgl\u0026gt;, wk76 \u0026lt;lgl\u0026gt;\r  Experimente fazer o caminho inverso dos exerc√≠cios 3 a 5, devolvendo os datasets ao seu formato original. O que voc√™ observou?\n  O que os argumentos extra e fill em separate fazem? Utilize o exemplo a seguir como guia.\n  tibble(x = c(\u0026quot;a,b,c\u0026quot;, \u0026quot;d,e,f,g\u0026quot;, \u0026quot;h,i,j\u0026quot;)) %\u0026gt;% separate(x, c(\u0026quot;um\u0026quot;, \u0026quot;dois\u0026quot;, \u0026quot;tres\u0026quot;))\r ## Warning: Expected 3 pieces. Additional pieces discarded in 1 rows [2].\r ## # A tibble: 3 x 3\r## um dois tres ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 a b c ## 2 d e f ## 3 h i j\r tibble(x = c(\u0026quot;a,b,c\u0026quot;, \u0026quot;d,e\u0026quot;, \u0026quot;f,g,i\u0026quot;)) %\u0026gt;% separate(x, c(\u0026quot;um\u0026quot;, \u0026quot;dois\u0026quot;, \u0026quot;tres\u0026quot;))\r ## Warning: Expected 3 pieces. Missing pieces filled with `NA` in 1 rows [2].\r ## # A tibble: 3 x 3\r## um dois tres ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 a b c ## 2 d e \u0026lt;NA\u0026gt; ## 3 f g i\r  Tanto unite como separate possuem um argumento remove. Pra que ele serve e quando voc√™ o utilizaria no valor FALSE?\n  Compare o argumento values_fill em pivot_wider e fill em complete. Qual √© a diferen√ßa?\n  Agradecimentos Esse material √© uma adapta√ß√£o livre das vinhetas dos pacotes tidyr, readr e tibble e do cap√≠tulo Tidy Data do R for Data Science, de Wickham \u0026amp; Grolemund.\n","date":1621728000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1621728000,"objectID":"0bad4868b4cebec13d81438fabee26ad","permalink":"https://laddem.github.io/courses/tidyverse/dia1/","publishdate":"2021-05-23T00:00:00Z","relpermalink":"/courses/tidyverse/dia1/","section":"courses","summary":"Um modelo de ci√™ncia de dados Uma forma esquem√°tica, mas √∫til de encarar o processo de an√°lise de dados e de produ√ß√£o de conhecimento a partir de informa√ß√µes secund√°rias √© esta figura:","tags":null,"title":"readr, tibble e tidyr","type":"book"},{"authors":null,"categories":null,"content":"\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\rOpera√ß√µes em vari√°veis e bancos de dados Hoje vamos apresentar dois pacotes com finalidades mais espec√≠ficas para trabalhar com vari√°veis de tipo caractere e fator e um pacote super importante para as opera√ß√µes com bancos de dados.\nO pacote stringr √© uma s√©rie de adapta√ß√µes da biblioteca stringi e serve para a manipula√ß√£o de vari√°veis texto, incluindo fun√ß√µes para detec√ß√£o, modifica√ß√£o, substitui√ß√£o, remo√ß√£o de texto em vari√°veis caractere. Para dominar esse assunto, √© necess√°rio compreender o conceito de ‚Äúregex,‚Äù ou ‚Äúexpress√£o regular,‚Äù que foge um pouco do escopo do curso, mas que ser√° introduzido brevemente.\nO pacote forcats cont√©m uma s√©rie de fun√ß√µes para trabalhar com o tipo factor. S√£o fun√ß√µes que facilitam opera√ß√µes envolvendo esse tipo de vari√°vel, como contagens, troca dos nomes das categorias, agrupamento de categorias, recodifica√ß√£o, plotagem, etc.\nO pacote dplyr √© um dos pilares do tidyverse e ele tem dois pap√©is principais: opera√ß√µes de manipula√ß√£o de banco de dados simples e opera√ß√µes de bancos de dados relacionais. No primeiro tipo s√£o inclu√≠das as opera√ß√µes de cria√ß√£o e modifica√ß√£o de vari√°veis, medidas resumo globais e por grupos, sele√ß√£o de vari√°veis, mudan√ßa da ordem das linhas e colunas, etc. No segundo tipo, s√£o as opera√ß√µes de tipo _join, em que uma vari√°vel chave √© utilizada para combinar registros de dois bancos de dados distintos.\nOs pacotes stringr e forcats s√£o mais diretos, mas o dplyr pode representar um certo n√≠vel de abstra√ß√£o que pode incomodar usu√°rios de longa data do R, portanto, vamos nos esfor√ßar para demonstrar as vantagens de mudar seu workflow para incluir as fun√ß√µes desse pacote atrav√©s de compara√ß√µes com o R base.\ndplyr dplyr para manipula√ß√£o de dados Talvez o pacote mais utilizado de todo o tidyverse, dplyr √© um pacote de manipula√ß√£o de bancos de dados inspirado pela linguagem SQL. A ideia √© concatenar opera√ß√µes de sele√ß√£o de vari√°veis, filtragem de observa√ß√£o, arranjo e ordenamento, deriva√ß√£o de vari√°veis, computa√ß√£o de medidas resumo para o banco todo ou para grupos. As fun√ß√µes b√°sicas e mais utilizadas s√£o, portanto:\n select filter arrange mutate summarize group_by  Para praticar, vamos usar o dataset flights, que cont√©m informa√ß√µes sobre os v√¥os sa√≠dos de Nova Iorque em 2013.\nlibrary(nycflights13)\rlibrary(dplyr)\r ## ## Attaching package: 'dplyr'\r## The following objects are masked from 'package:stats':\r## ## filter, lag\r## The following objects are masked from 'package:base':\r## ## intersect, setdiff, setequal, union\r flights\r ## # A tibble: 336,776 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 517 515 2 830 819\r## 2 2013 1 1 533 529 4 850 830\r## 3 2013 1 1 542 540 2 923 850\r## 4 2013 1 1 544 545 -1 1004 1022\r## 5 2013 1 1 554 600 -6 812 837\r## 6 2013 1 1 554 558 -4 740 728\r## 7 2013 1 1 555 600 -5 913 854\r## 8 2013 1 1 557 600 -3 709 723\r## 9 2013 1 1 557 600 -3 838 846\r## 10 2013 1 1 558 600 -2 753 745\r## # ... with 336,766 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r glimpse(flights)\r ## Rows: 336,776\r## Columns: 19\r## $ year \u0026lt;int\u0026gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2~\r## $ month \u0026lt;int\u0026gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1~\r## $ day \u0026lt;int\u0026gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1~\r## $ dep_time \u0026lt;int\u0026gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, ~\r## $ sched_dep_time \u0026lt;int\u0026gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, ~\r## $ dep_delay \u0026lt;dbl\u0026gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1~\r## $ arr_time \u0026lt;int\u0026gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849,~\r## $ sched_arr_time \u0026lt;int\u0026gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851,~\r## $ arr_delay \u0026lt;dbl\u0026gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -1~\r## $ carrier \u0026lt;chr\u0026gt; \u0026quot;UA\u0026quot;, \u0026quot;UA\u0026quot;, \u0026quot;AA\u0026quot;, \u0026quot;B6\u0026quot;, \u0026quot;DL\u0026quot;, \u0026quot;UA\u0026quot;, \u0026quot;B6\u0026quot;, \u0026quot;EV\u0026quot;, \u0026quot;B6\u0026quot;, \u0026quot;~\r## $ flight \u0026lt;int\u0026gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 4~\r## $ tailnum \u0026lt;chr\u0026gt; \u0026quot;N14228\u0026quot;, \u0026quot;N24211\u0026quot;, \u0026quot;N619AA\u0026quot;, \u0026quot;N804JB\u0026quot;, \u0026quot;N668DN\u0026quot;, \u0026quot;N394~\r## $ origin \u0026lt;chr\u0026gt; \u0026quot;EWR\u0026quot;, \u0026quot;LGA\u0026quot;, \u0026quot;JFK\u0026quot;, \u0026quot;JFK\u0026quot;, \u0026quot;LGA\u0026quot;, \u0026quot;EWR\u0026quot;, \u0026quot;EWR\u0026quot;, \u0026quot;LGA\u0026quot;,~\r## $ dest \u0026lt;chr\u0026gt; \u0026quot;IAH\u0026quot;, \u0026quot;IAH\u0026quot;, \u0026quot;MIA\u0026quot;, \u0026quot;BQN\u0026quot;, \u0026quot;ATL\u0026quot;, \u0026quot;ORD\u0026quot;, \u0026quot;FLL\u0026quot;, \u0026quot;IAD\u0026quot;,~\r## $ air_time \u0026lt;dbl\u0026gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 1~\r## $ distance \u0026lt;dbl\u0026gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, ~\r## $ hour \u0026lt;dbl\u0026gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6~\r## $ minute \u0026lt;dbl\u0026gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0~\r## $ time_hour \u0026lt;dttm\u0026gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 0~\r Podemos filtrar nossas linhas: filter\n# Voos de primeiro de janeiro\rflights %\u0026gt;% filter(month == 1, day == 1)\r ## # A tibble: 842 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 517 515 2 830 819\r## 2 2013 1 1 533 529 4 850 830\r## 3 2013 1 1 542 540 2 923 850\r## 4 2013 1 1 544 545 -1 1004 1022\r## 5 2013 1 1 554 600 -6 812 837\r## 6 2013 1 1 554 558 -4 740 728\r## 7 2013 1 1 555 600 -5 913 854\r## 8 2013 1 1 557 600 -3 709 723\r## 9 2013 1 1 557 600 -3 838 846\r## 10 2013 1 1 558 600 -2 753 745\r## # ... with 832 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos a partir de junho\rflights %\u0026gt;% filter(month \u0026gt; 6)\r ## # A tibble: 170,618 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 10 1 447 500 -13 614 648\r## 2 2013 10 1 522 517 5 735 757\r## 3 2013 10 1 536 545 -9 809 855\r## 4 2013 10 1 539 545 -6 801 827\r## 5 2013 10 1 539 545 -6 917 933\r## 6 2013 10 1 544 550 -6 912 932\r## 7 2013 10 1 549 600 -11 653 716\r## 8 2013 10 1 550 600 -10 648 700\r## 9 2013 10 1 550 600 -10 649 659\r## 10 2013 10 1 551 600 -9 727 730\r## # ... with 170,608 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos sa√≠dos do aeroporto JFK\rflights %\u0026gt;% filter(origin == \u0026quot;JFK\u0026quot;)\r ## # A tibble: 111,279 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 542 540 2 923 850\r## 2 2013 1 1 544 545 -1 1004 1022\r## 3 2013 1 1 557 600 -3 838 846\r## 4 2013 1 1 558 600 -2 849 851\r## 5 2013 1 1 558 600 -2 853 856\r## 6 2013 1 1 558 600 -2 924 917\r## 7 2013 1 1 559 559 0 702 706\r## 8 2013 1 1 606 610 -4 837 845\r## 9 2013 1 1 611 600 11 945 931\r## 10 2013 1 1 613 610 3 925 921\r## # ... with 111,269 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos com destino ao aeroporto de Albuquerque\rflights %\u0026gt;% filter(dest == \u0026quot;ABQ\u0026quot;)\r ## # A tibble: 254 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 10 1 1955 2001 -6 2213 2248\r## 2 2013 10 2 2010 2001 9 2230 2248\r## 3 2013 10 3 1955 2001 -6 2232 2248\r## 4 2013 10 4 2017 2001 16 2304 2248\r## 5 2013 10 5 1959 1959 0 2226 2246\r## 6 2013 10 6 1959 2001 -2 2234 2248\r## 7 2013 10 7 2002 2001 1 2233 2248\r## 8 2013 10 8 1957 2001 -4 2216 2248\r## 9 2013 10 9 1957 2001 -4 2220 2248\r## 10 2013 10 10 2011 2001 10 2235 2248\r## # ... with 244 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos com atraso de at√© 10 minutos\rflights %\u0026gt;% filter(dep_delay \u0026lt;= 10)\r ## # A tibble: 245,687 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 517 515 2 830 819\r## 2 2013 1 1 533 529 4 850 830\r## 3 2013 1 1 542 540 2 923 850\r## 4 2013 1 1 544 545 -1 1004 1022\r## 5 2013 1 1 554 600 -6 812 837\r## 6 2013 1 1 554 558 -4 740 728\r## 7 2013 1 1 555 600 -5 913 854\r## 8 2013 1 1 557 600 -3 709 723\r## 9 2013 1 1 557 600 -3 838 846\r## 10 2013 1 1 558 600 -2 753 745\r## # ... with 245,677 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos com atraso de cerca de 10 minutos\rflights %\u0026gt;% filter(near(dep_delay, 10, tol = 2))\r ## # A tibble: 8,677 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 611 600 11 945 931\r## 2 2013 1 1 709 700 9 852 832\r## 3 2013 1 1 826 817 9 1145 1158\r## 4 2013 1 1 851 840 11 1215 1206\r## 5 2013 1 1 1011 1001 10 1133 1128\r## 6 2013 1 1 1208 1158 10 1540 1502\r## 7 2013 1 1 1240 1229 11 1451 1428\r## 8 2013 1 1 1310 1300 10 1559 1554\r## 9 2013 1 1 1330 1321 9 1613 1536\r## 10 2013 1 1 1511 1500 11 1753 1742\r## # ... with 8,667 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos que ocorreram entre abril e maio\rflights %\u0026gt;% filter(between(month, 4, 5))\r ## # A tibble: 57,126 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 4 1 454 500 -6 636 640\r## 2 2013 4 1 509 515 -6 743 814\r## 3 2013 4 1 526 530 -4 812 827\r## 4 2013 4 1 534 540 -6 833 850\r## 5 2013 4 1 542 545 -3 914 920\r## 6 2013 4 1 543 545 -2 921 927\r## 7 2013 4 1 551 600 -9 748 659\r## 8 2013 4 1 552 600 -8 641 701\r## 9 2013 4 1 553 600 -7 725 735\r## 10 2013 4 1 554 600 -6 752 805\r## # ... with 57,116 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r Podemos combinar v√°rias condi√ß√µes usando operadores l√≥gicos\n# Voos at√© 15 de abril ou at√© 15 de maio\rflights %\u0026gt;% filter(\rbetween(month, 4, 5), # mesmo que usar \u0026amp;\rbetween(day, 1, 15)\r)\r ## # A tibble: 28,176 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 4 1 454 500 -6 636 640\r## 2 2013 4 1 509 515 -6 743 814\r## 3 2013 4 1 526 530 -4 812 827\r## 4 2013 4 1 534 540 -6 833 850\r## 5 2013 4 1 542 545 -3 914 920\r## 6 2013 4 1 543 545 -2 921 927\r## 7 2013 4 1 551 600 -9 748 659\r## 8 2013 4 1 552 600 -8 641 701\r## 9 2013 4 1 553 600 -7 725 735\r## 10 2013 4 1 554 600 -6 752 805\r## # ... with 28,166 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos entre 15 de abril e 15 de maio\rflights %\u0026gt;% filter(\rmonth == 4 \u0026amp; between(day, 15, 30) | # OU\rmonth == 5 \u0026amp; between(day, 1, 15)\r)\r ## # A tibble: 29,101 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 4 15 2 2359 3 341 339\r## 2 2013 4 15 453 500 -7 639 640\r## 3 2013 4 15 511 515 -4 741 802\r## 4 2013 4 15 527 530 -3 806 813\r## 5 2013 4 15 527 529 -2 750 743\r## 6 2013 4 15 537 540 -3 846 840\r## 7 2013 4 15 542 545 -3 931 927\r## 8 2013 4 15 551 600 -9 728 758\r## 9 2013 4 15 552 600 -8 835 850\r## 10 2013 4 15 552 600 -8 648 701\r## # ... with 29,091 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos em todas os primeiros 7 dias de cada m√™s, exceto em janeiro e dezembro\rflights %\u0026gt;% filter(\rbetween(day, 1, 7),\r!month %in% c(1, 12)\r)\r ## # A tibble: 64,365 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 10 1 447 500 -13 614 648\r## 2 2013 10 1 522 517 5 735 757\r## 3 2013 10 1 536 545 -9 809 855\r## 4 2013 10 1 539 545 -6 801 827\r## 5 2013 10 1 539 545 -6 917 933\r## 6 2013 10 1 544 550 -6 912 932\r## 7 2013 10 1 549 600 -11 653 716\r## 8 2013 10 1 550 600 -10 648 700\r## 9 2013 10 1 550 600 -10 649 659\r## 10 2013 10 1 551 600 -9 727 730\r## # ... with 64,355 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos saidos de JFK, excluindo aqueles para os quais n√£o tem informa√ß√µes de hor√°rio de sa√≠da\rflights %\u0026gt;% filter(\rorigin == \u0026quot;JFK\u0026quot;, !is.na(dep_time)\r)\r ## # A tibble: 109,416 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 542 540 2 923 850\r## 2 2013 1 1 544 545 -1 1004 1022\r## 3 2013 1 1 557 600 -3 838 846\r## 4 2013 1 1 558 600 -2 849 851\r## 5 2013 1 1 558 600 -2 853 856\r## 6 2013 1 1 558 600 -2 924 917\r## 7 2013 1 1 559 559 0 702 706\r## 8 2013 1 1 606 610 -4 837 845\r## 9 2013 1 1 611 600 11 945 931\r## 10 2013 1 1 613 610 3 925 921\r## # ... with 109,406 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Voos com mais de 30 minutos de atraso em janeiro ou dezembro\rflights %\u0026gt;% filter(\rdep_delay \u0026gt; 30, xor(month == 1, month == 12)\r)\r ## # A tibble: 8,221 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 732 645 47 1011 941\r## 2 2013 1 1 749 710 39 939 850\r## 3 2013 1 1 811 630 101 1047 830\r## 4 2013 1 1 826 715 71 1136 1045\r## 5 2013 1 1 848 1835 853 1001 1950\r## 6 2013 1 1 903 820 43 1045 955\r## 7 2013 1 1 909 810 59 1331 1315\r## 8 2013 1 1 953 921 32 1320 1241\r## 9 2013 1 1 957 733 144 1056 853\r## 10 2013 1 1 1025 951 34 1258 1302\r## # ... with 8,211 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r E assim sucessivamente.\nDa mesma forma, temos select para selecionar as vari√°veis do banco. As duas grandes novidades s√£o que voc√™ n√£o precisa utilizar aspas na sele√ß√£o de vari√°veis e que select introduz v√°rias helper functions para facilitar a sele√ß√£o de vari√°veis parecidas.\n# Selecionar as colunas ano, mes, dia, horario de saida e horario de chegada\rflights %\u0026gt;% select(year, month, day, dep_time, arr_time)\r ## # A tibble: 336,776 x 5\r## year month day dep_time arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 517 830\r## 2 2013 1 1 533 850\r## 3 2013 1 1 542 923\r## 4 2013 1 1 544 1004\r## 5 2013 1 1 554 812\r## 6 2013 1 1 554 740\r## 7 2013 1 1 555 913\r## 8 2013 1 1 557 709\r## 9 2013 1 1 557 838\r## 10 2013 1 1 558 753\r## # ... with 336,766 more rows\r # Utilizando helpers\rflights %\u0026gt;% select(year:dep_time, arr_time)\r ## # A tibble: 336,776 x 5\r## year month day dep_time arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 517 830\r## 2 2013 1 1 533 850\r## 3 2013 1 1 542 923\r## 4 2013 1 1 544 1004\r## 5 2013 1 1 554 812\r## 6 2013 1 1 554 740\r## 7 2013 1 1 555 913\r## 8 2013 1 1 557 709\r## 9 2013 1 1 557 838\r## 10 2013 1 1 558 753\r## # ... with 336,766 more rows\r # Mais helpers\rflights %\u0026gt;% select(year:day, starts_with(\u0026quot;dep\u0026quot;), starts_with(\u0026quot;arr\u0026quot;))\r ## # A tibble: 336,776 x 7\r## year month day dep_time dep_delay arr_time arr_delay\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2013 1 1 517 2 830 11\r## 2 2013 1 1 533 4 850 20\r## 3 2013 1 1 542 2 923 33\r## 4 2013 1 1 544 -1 1004 -18\r## 5 2013 1 1 554 -6 812 -25\r## 6 2013 1 1 554 -4 740 12\r## 7 2013 1 1 555 -5 913 19\r## 8 2013 1 1 557 -3 709 -14\r## 9 2013 1 1 557 -3 838 -8\r## 10 2013 1 1 558 -2 753 8\r## # ... with 336,766 more rows\r flights %\u0026gt;% select(year:day, ends_with(\u0026quot;time\u0026quot;))\r ## # A tibble: 336,776 x 8\r## year month day dep_time sched_dep_time arr_time sched_arr_time air_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2013 1 1 517 515 830 819 227\r## 2 2013 1 1 533 529 850 830 227\r## 3 2013 1 1 542 540 923 850 160\r## 4 2013 1 1 544 545 1004 1022 183\r## 5 2013 1 1 554 600 812 837 116\r## 6 2013 1 1 554 558 740 728 150\r## 7 2013 1 1 555 600 913 854 158\r## 8 2013 1 1 557 600 709 723 53\r## 9 2013 1 1 557 600 838 846 140\r## 10 2013 1 1 558 600 753 745 138\r## # ... with 336,766 more rows\r flights %\u0026gt;% select(year:day, c(ends_with(\u0026quot;time\u0026quot;)) \u0026amp; !contains(\u0026quot;sched\u0026quot;))\r ## # A tibble: 336,776 x 6\r## year month day dep_time arr_time air_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2013 1 1 517 830 227\r## 2 2013 1 1 533 850 227\r## 3 2013 1 1 542 923 160\r## 4 2013 1 1 544 1004 183\r## 5 2013 1 1 554 812 116\r## 6 2013 1 1 554 740 150\r## 7 2013 1 1 555 913 158\r## 8 2013 1 1 557 709 53\r## 9 2013 1 1 557 838 140\r## 10 2013 1 1 558 753 138\r## # ... with 336,766 more rows\r # Voc√™ pode mudar o nome das colunas durante um call para select\rflights %\u0026gt;% select(ano = year, mes = month, dia = day)\r ## # A tibble: 336,776 x 3\r## ano mes dia\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1\r## 2 2013 1 1\r## 3 2013 1 1\r## 4 2013 1 1\r## 5 2013 1 1\r## 6 2013 1 1\r## 7 2013 1 1\r## 8 2013 1 1\r## 9 2013 1 1\r## 10 2013 1 1\r## # ... with 336,766 more rows\r # Ou voc√™ pode usar rename para mudar os nomes sem selecionar vari√°veis\rflights %\u0026gt;% rename(ano = year, mes = month, dia = day)\r ## # A tibble: 336,776 x 19\r## ano mes dia dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 517 515 2 830 819\r## 2 2013 1 1 533 529 4 850 830\r## 3 2013 1 1 542 540 2 923 850\r## 4 2013 1 1 544 545 -1 1004 1022\r## 5 2013 1 1 554 600 -6 812 837\r## 6 2013 1 1 554 558 -4 740 728\r## 7 2013 1 1 555 600 -5 913 854\r## 8 2013 1 1 557 600 -3 709 723\r## 9 2013 1 1 557 600 -3 838 846\r## 10 2013 1 1 558 600 -2 753 745\r## # ... with 336,766 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r S√£o realmente muitas possibilidades, vejam a documenta√ß√£o e os exemplos em ?select.\nUtilizando arrange podemos facilmente organizar nosso banco a partir de vari√°veis de interesse:\n# Selecionar algumas vari√°veis e ver organizar de acordar com os mais adiantados\rflights %\u0026gt;% select(year:day,matches(\u0026quot;^dep|^arr\u0026quot;)) %\u0026gt;% arrange(dep_delay, arr_delay)\r ## # A tibble: 336,776 x 7\r## year month day dep_time dep_delay arr_time arr_delay\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2013 12 7 2040 -43 40 48\r## 2 2013 2 3 2022 -33 2240 -58\r## 3 2013 11 10 1408 -32 1549 -10\r## 4 2013 1 11 1900 -30 2233 -10\r## 5 2013 1 29 1703 -27 1947 -10\r## 6 2013 8 9 729 -26 1002 7\r## 7 2013 3 30 2030 -25 2213 -37\r## 8 2013 10 23 1907 -25 2143 0\r## 9 2013 5 5 934 -24 1225 -44\r## 10 2013 9 18 1631 -24 1812 -33\r## # ... with 336,766 more rows\r # Ou os mais atrasados\rflights %\u0026gt;% select(year:day,matches(\u0026quot;^dep|^arr\u0026quot;)) %\u0026gt;% arrange(-dep_delay, -arr_delay)\r ## # A tibble: 336,776 x 7\r## year month day dep_time dep_delay arr_time arr_delay\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2013 1 9 641 1301 1242 1272\r## 2 2013 6 15 1432 1137 1607 1127\r## 3 2013 1 10 1121 1126 1239 1109\r## 4 2013 9 20 1139 1014 1457 1007\r## 5 2013 7 22 845 1005 1044 989\r## 6 2013 4 10 1100 960 1342 931\r## 7 2013 3 17 2321 911 135 915\r## 8 2013 6 27 959 899 1236 850\r## 9 2013 7 22 2257 898 121 895\r## 10 2013 12 5 756 896 1058 878\r## # ... with 336,766 more rows\r √â basicamente isso, voc√™ pode especificar uma ou muitas colunas para organizar, decidir se a ordem √© ascendente ou descendente e pronto.\nUtilizando mutate, voc√™ cria vari√°veis derivadas das originais. Como tibble, essa fun√ß√£o avalia seus argumentos de maneira pregui√ßosa e sequencial, o que permite voc√™ criar vari√°veis derivadas umas das outras muito facilmente.\nflights %\u0026gt;% select(sched_dep_time, dep_time, sched_arr_time, arr_time) %\u0026gt;% mutate(atraso_decolagem = dep_time - sched_dep_time,\ratraso_pouso = arr_time - sched_arr_time,\ratraso_dec_horas = atraso_decolagem / 60,\ratraso_pouso_horas = atraso_pouso / 60)\r ## # A tibble: 336,776 x 8\r## sched_dep_time dep_time sched_arr_time arr_time atraso_decolagem atraso_pouso\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 515 517 819 830 2 11\r## 2 529 533 830 850 4 20\r## 3 540 542 850 923 2 73\r## 4 545 544 1022 1004 -1 -18\r## 5 600 554 837 812 -46 -25\r## 6 558 554 728 740 -4 12\r## 7 600 555 854 913 -45 59\r## 8 600 557 723 709 -43 -14\r## 9 600 557 846 838 -43 -8\r## 10 600 558 745 753 -42 8\r## # ... with 336,766 more rows, and 2 more variables: atraso_dec_horas \u0026lt;dbl\u0026gt;,\r## # atraso_pouso_horas \u0026lt;dbl\u0026gt;\r # Transmute √© um atalho para quando voc√™ quer apenas as vari√°veis resultado e n√£o est√° interessado nas intermedi√°rias.\rflights %\u0026gt;% transmute(atraso_decolagem = dep_time - sched_dep_time,\ratraso_pouso = arr_time - sched_arr_time,\ratraso_dec_horas = atraso_decolagem / 60,\ratraso_pouso_horas = atraso_pouso / 60)\r ## # A tibble: 336,776 x 4\r## atraso_decolagem atraso_pouso atraso_dec_horas atraso_pouso_horas\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2 11 0.0333 0.183\r## 2 4 20 0.0667 0.333\r## 3 2 73 0.0333 1.22 ## 4 -1 -18 -0.0167 -0.3 ## 5 -46 -25 -0.767 -0.417\r## 6 -4 12 -0.0667 0.2 ## 7 -45 59 -0.75 0.983\r## 8 -43 -14 -0.717 -0.233\r## 9 -43 -8 -0.717 -0.133\r## 10 -42 8 -0.7 0.133\r## # ... with 336,766 more rows\r Usando o pipe, √© fazer diversas opera√ß√µes de transforma√ß√£o de vari√°veis simult√¢neamente em um √∫nico call sem a necessidade de repetir o nome do objeto e $ a cada refer√™ncia. mutate √© uma fun√ß√£o extremamente flex√≠vel, voc√™ pode chamar qualquer fun√ß√£o que retorne um vetor de tamanho 1 ou de tamanho do n√∫mero de linhas do banco l√° dentro para criar uma vari√°vel.\ndesabafo \u0026lt;- function(x) {\ry \u0026lt;- floor(x / 60)\rdplyr::case_when(\r# Condi√ß√µes ~ Resultados\ry \u0026lt; 0 ~ \u0026quot;Opa, vou chegar cedo!\u0026quot;,\ry \u0026lt; 1 ~ \u0026quot;Atraso de menos de 1 hora √© toler√°vel\u0026quot;,\ry \u0026gt;= 1 ~ paste0(\u0026quot;Atraso de mais de \u0026quot;, y, \u0026quot; horas √© f***.\u0026quot;),\rTRUE ~ \u0026quot;Ahn?\u0026quot; # Condi√ß√£o guarda-chuva\r)\r}\rflights %\u0026gt;% select(dep_delay) %\u0026gt;% mutate(desabafo = desabafo(dep_delay)) %\u0026gt;% sample_n(10)\r ## # A tibble: 10 x 2\r## dep_delay desabafo ## \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; ## 1 0 Atraso de menos de 1 hora √© toler√°vel\r## 2 -3 Opa, vou chegar cedo! ## 3 88 Atraso de mais de 1 horas √© f***. ## 4 -3 Opa, vou chegar cedo! ## 5 3 Atraso de menos de 1 hora √© toler√°vel\r## 6 15 Atraso de menos de 1 hora √© toler√°vel\r## 7 -3 Opa, vou chegar cedo! ## 8 -9 Opa, vou chegar cedo! ## 9 5 Atraso de menos de 1 hora √© toler√°vel\r## 10 2 Atraso de menos de 1 hora √© toler√°vel\r Utilizando summarize voc√™ tira medidas resumo das suas colunas de interesse:\nflights %\u0026gt;% summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),\ratraso_decolagem_desvpad = sd(dep_delay, na.rm = T),\ratraso_pouso_medio = mean(arr_delay, na.rm = T),\ratraso_pouso_desvpad = sd(arr_delay, na.rm = T),\rn_voos = n())\r ## # A tibble: 1 x 5\r## atraso_decolagem_~ atraso_decolagem_~ atraso_pouso_me~ atraso_pouso_de~ n_voos\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt;\r## 1 12.6 40.2 6.90 44.6 336776\r Parece uma bobagem, mas quando voc√™ junta isso com a √∫ltima fun√ß√£o, group_by, √© poss√≠vel obter diversas estat√≠sticas de interesse muito rapidamente e para v√°rios dom√≠nios:\n# Por m√™s\rflights %\u0026gt;% group_by(month) %\u0026gt;% summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),\ratraso_decolagem_desvpad = sd(dep_delay, na.rm = T),\ratraso_pouso_medio = mean(arr_delay, na.rm = T),\ratraso_pouso_desvpad = sd(arr_delay, na.rm = T),\rn_voos = n())\r ## # A tibble: 12 x 6\r## month atraso_decolagem_~ atraso_decolagem_~ atraso_pouso_me~ atraso_pouso_de~\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 10.0 36.4 6.13 40.4\r## 2 2 10.8 36.3 5.61 39.5\r## 3 3 13.2 40.1 5.81 44.1\r## 4 4 13.9 43.0 11.2 47.5\r## 5 5 13.0 39.4 3.52 44.2\r## 6 6 20.8 51.5 16.5 56.1\r## 7 7 21.7 51.6 16.7 57.1\r## 8 8 12.6 37.7 6.04 42.6\r## 9 9 6.72 35.6 -4.02 39.7\r## 10 10 6.24 29.7 -0.167 32.6\r## 11 11 5.44 27.6 0.461 31.4\r## 12 12 16.6 41.9 14.9 46.1\r## # ... with 1 more variable: n_voos \u0026lt;int\u0026gt;\r # Por m√™s e aeroporto de origem\rflights %\u0026gt;% group_by(month, origin) %\u0026gt;% summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),\ratraso_decolagem_desvpad = sd(dep_delay, na.rm = T),\ratraso_pouso_medio = mean(arr_delay, na.rm = T),\ratraso_pouso_desvpad = sd(arr_delay, na.rm = T),\rn_voos = n())\r ## `summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\r## # A tibble: 36 x 7\r## # Groups: month [12]\r## month origin atraso_decolagem_medio atraso_decolagem_desvp~ atraso_pouso_med~\r## \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 EWR 14.9 40.8 12.8 ## 2 1 JFK 8.62 36.0 1.37\r## 3 1 LGA 5.64 29.7 3.38\r## 4 2 EWR 13.1 37.2 8.78\r## 5 2 JFK 11.8 37.4 4.39\r## 6 2 LGA 6.96 33.4 3.15\r## 7 3 EWR 18.1 44.1 10.6 ## 8 3 JFK 10.7 35.3 2.58\r## 9 3 LGA 10.2 39.7 3.74\r## 10 4 EWR 17.4 43.9 14.1 ## # ... with 26 more rows, and 2 more variables: atraso_pouso_desvpad \u0026lt;dbl\u0026gt;,\r## # n_voos \u0026lt;int\u0026gt;\r Uma vez que voc√™ se familiariza com a gram√°tica do dplyr, o processo de an√°lise explorat√≥ria se torna bastante trivial e at√© certo ponto, prazeiroso. Mas o que eu realmente gosto √© que ele tamb√©m se torna visualmente √≥bvio para o leitor, com cada chamado podendo ser lido como uma declara√ß√£o:\n Utilizando o banco de dados flights, agrupe as observa√ß√µes por m√™s e aeroporto de origem, ent√£o, calcule as m√©dias e desvios padr√£o dos atrasos no pouso e na decolagem e o n√∫mero de v√¥os para cada grupo.\n Voc√™ tamb√©m pode rapidamente introduzir ou retirar passos em cada chamado deste utilizando o pipe, por exemplo:\nflights %\u0026gt;% group_by(month, origin) %\u0026gt;% summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),\ratraso_decolagem_desvpad = sd(dep_delay, na.rm = T),\ratraso_pouso_medio = mean(arr_delay, na.rm = T),\ratraso_pouso_desvpad = sd(arr_delay, na.rm = T),\rn_voos = n()) %\u0026gt;% arrange(-atraso_decolagem_medio)\r ## `summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\r## # A tibble: 36 x 7\r## # Groups: month [12]\r## month origin atraso_decolagem_medio atraso_decolagem_desvp~ atraso_pouso_med~\r## \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 7 JFK 23.8 53.3 20.2 ## 2 6 EWR 22.5 50.8 16.9 ## 3 7 EWR 22.0 49.5 15.5 ## 4 12 EWR 21.0 45.7 19.6 ## 5 6 JFK 20.5 50.2 17.6 ## 6 6 LGA 19.3 53.6 14.8 ## 7 7 LGA 19.0 52.0 14.2 ## 8 3 EWR 18.1 44.1 10.6 ## 9 4 EWR 17.4 43.9 14.1 ## 10 5 EWR 15.4 39.0 5.38\r## # ... with 26 more rows, and 2 more variables: atraso_pouso_desvpad \u0026lt;dbl\u0026gt;,\r## # n_voos \u0026lt;int\u0026gt;\r E a leitura fica:\n Utilizando o banco de dados flights, agrupe as observa√ß√µes por m√™s e aeroporto de origem, ent√£o, calcule as m√©dias e desvios padr√£o dos atrasos no pouso e na decolagem e o n√∫mero de v√¥os para cada grupo, ent√£o, ordene os resultados pelo maior atraso.\n De quebra, voc√™ ainda leva para casa um dado no formato ‚Äútabela,‚Äù f√°cil de exportar para outros softwares para embelezamento e publica√ß√£o. Veja:\nresumo \u0026lt;- flights %\u0026gt;% group_by(month, origin) %\u0026gt;% summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),\ratraso_decolagem_desvpad = sd(dep_delay, na.rm = T),\ratraso_pouso_medio = mean(arr_delay, na.rm = T),\ratraso_pouso_desvpad = sd(arr_delay, na.rm = T),\rn_voos = n()) %\u0026gt;% arrange(-atraso_decolagem_medio)\r ## `summarise()` has grouped output by 'month'. You can override using the `.groups` argument.\r print(resumo, n = Inf)\r ## # A tibble: 36 x 7\r## # Groups: month [12]\r## month origin atraso_decolagem_medio atraso_decolagem_desvp~ atraso_pouso_med~\r## \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 7 JFK 23.8 53.3 20.2 ## 2 6 EWR 22.5 50.8 16.9 ## 3 7 EWR 22.0 49.5 15.5 ## 4 12 EWR 21.0 45.7 19.6 ## 5 6 JFK 20.5 50.2 17.6 ## 6 6 LGA 19.3 53.6 14.8 ## 7 7 LGA 19.0 52.0 14.2 ## 8 3 EWR 18.1 44.1 10.6 ## 9 4 EWR 17.4 43.9 14.1 ## 10 5 EWR 15.4 39.0 5.38 ## 11 1 EWR 14.9 40.8 12.8 ## 12 12 JFK 14.8 39.1 12.7 ## 13 12 LGA 13.6 39.8 12.0 ## 14 8 EWR 13.5 37.6 6.71 ## 15 2 EWR 13.1 37.2 8.78 ## 16 8 JFK 12.9 36.3 5.91 ## 17 5 JFK 12.5 38.5 2.12 ## 18 4 JFK 12.2 41.2 7.01 ## 19 2 JFK 11.8 37.4 4.39 ## 20 4 LGA 11.5 43.4 12.0 ## 21 8 LGA 11.2 39.2 5.41 ## 22 3 JFK 10.7 35.3 2.58 ## 23 5 LGA 10.6 40.6 2.80 ## 24 3 LGA 10.2 39.7 3.74 ## 25 10 EWR 8.64 32.7 2.60 ## 26 1 JFK 8.62 36.0 1.37 ## 27 9 EWR 7.29 35.0 -4.73 ## 28 2 LGA 6.96 33.4 3.15 ## 29 11 EWR 6.72 28.8 0.672\r## 30 9 JFK 6.64 32.5 -4.46 ## 31 9 LGA 6.21 39.0 -2.83 ## 32 1 LGA 5.64 29.7 3.38 ## 33 10 LGA 5.31 30.1 0.186\r## 34 11 LGA 4.77 26.6 1.55 ## 35 11 JFK 4.68 27.1 -0.873\r## 36 10 JFK 4.59 25.2 -3.59 ## # ... with 2 more variables: atraso_pouso_desvpad \u0026lt;dbl\u0026gt;, n_voos \u0026lt;int\u0026gt;\r Lembrem-se que √© necess√°rio atribuir \u0026lt;- os resultados das opera√ß√µes para que elas sejam salvas. Em geral, meu workflow √© assim:\n# Come√ßo com o banco\rflights\r ## # A tibble: 336,776 x 19\r## year month day dep_time sched_dep_time dep_delay arr_time sched_arr_time\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 517 515 2 830 819\r## 2 2013 1 1 533 529 4 850 830\r## 3 2013 1 1 542 540 2 923 850\r## 4 2013 1 1 544 545 -1 1004 1022\r## 5 2013 1 1 554 600 -6 812 837\r## 6 2013 1 1 554 558 -4 740 728\r## 7 2013 1 1 555 600 -5 913 854\r## 8 2013 1 1 557 600 -3 709 723\r## 9 2013 1 1 557 600 -3 838 846\r## 10 2013 1 1 558 600 -2 753 745\r## # ... with 336,766 more rows, and 11 more variables: arr_delay \u0026lt;dbl\u0026gt;,\r## # carrier \u0026lt;chr\u0026gt;, flight \u0026lt;int\u0026gt;, tailnum \u0026lt;chr\u0026gt;, origin \u0026lt;chr\u0026gt;, dest \u0026lt;chr\u0026gt;,\r## # air_time \u0026lt;dbl\u0026gt;, distance \u0026lt;dbl\u0026gt;, hour \u0026lt;dbl\u0026gt;, minute \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r # Seleciono algumas vari√°veis\rflights %\u0026gt;% select(month, dep_delay, arr_delay)\r ## # A tibble: 336,776 x 3\r## month dep_delay arr_delay\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 2 11\r## 2 1 4 20\r## 3 1 2 33\r## 4 1 -1 -18\r## 5 1 -6 -25\r## 6 1 -4 12\r## 7 1 -5 19\r## 8 1 -3 -14\r## 9 1 -3 -8\r## 10 1 -2 8\r## # ... with 336,766 more rows\r # Recorto algumas observa√ß√µes\rflights %\u0026gt;% select(month, dep_delay, arr_delay) %\u0026gt;% filter(between(month, 1, 6))\r ## # A tibble: 166,158 x 3\r## month dep_delay arr_delay\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 2 11\r## 2 1 4 20\r## 3 1 2 33\r## 4 1 -1 -18\r## 5 1 -6 -25\r## 6 1 -4 12\r## 7 1 -5 19\r## 8 1 -3 -14\r## 9 1 -3 -8\r## 10 1 -2 8\r## # ... with 166,148 more rows\r # Escolho os dominios e calculo as medidas resumo\rflights %\u0026gt;% select(month, dep_delay, arr_delay) %\u0026gt;% filter(between(month, 1, 6)) %\u0026gt;% group_by(month) %\u0026gt;% summarise(atraso_dec_medio = mean(dep_delay, na.rm = T),\ratraso_pou_medio = mean(arr_delay, na.rm = T))\r ## # A tibble: 6 x 3\r## month atraso_dec_medio atraso_pou_medio\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 10.0 6.13\r## 2 2 10.8 5.61\r## 3 3 13.2 5.81\r## 4 4 13.9 11.2 ## 5 5 13.0 3.52\r## 6 6 20.8 16.5\r # Acho bom organizar pelos atrasos maiores\rflights %\u0026gt;% select(month, dep_delay, arr_delay) %\u0026gt;% filter(between(month, 1, 6)) %\u0026gt;% group_by(month) %\u0026gt;% summarise(atraso_dec_medio = mean(dep_delay, na.rm = T),\ratraso_pou_medio = mean(arr_delay, na.rm = T)) %\u0026gt;% arrange(-atraso_dec_medio, -atraso_pou_medio)\r ## # A tibble: 6 x 3\r## month atraso_dec_medio atraso_pou_medio\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 6 20.8 16.5 ## 2 4 13.9 11.2 ## 3 3 13.2 5.81\r## 4 5 13.0 3.52\r## 5 2 10.8 5.61\r## 6 1 10.0 6.13\r # Estou satisfeito, salvo meu resultado em outro objeto\ratrasos \u0026lt;- flights %\u0026gt;% select(month, dep_delay, arr_delay) %\u0026gt;% filter(between(month, 1, 6)) %\u0026gt;% group_by(month) %\u0026gt;% summarise(atraso_dec_medio = mean(dep_delay, na.rm = T),\ratraso_pou_medio = mean(arr_delay, na.rm = T)) %\u0026gt;% arrange(-atraso_dec_medio, -atraso_pou_medio)\ratrasos\r ## # A tibble: 6 x 3\r## month atraso_dec_medio atraso_pou_medio\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 6 20.8 16.5 ## 2 4 13.9 11.2 ## 3 3 13.2 5.81\r## 4 5 13.0 3.52\r## 5 2 10.8 5.61\r## 6 1 10.0 6.13\r Desta forma, consigo construir interativamente meus c√°lculos, verificando a cada passo se estou obtendo o resultado esperado. Visto de outra perspectiva, se encontro um c√≥digo programado desta forma que n√£o funciona, posso ir apagando cada %\u0026gt;% para identificar onde o problema ocorreu.\nEspero que tenha ficado claro que o assunto n√£o se encerra por aqui. Existem diversas outras fun√ß√µes √∫teis no pacote, como count, if_else, case_when, top_n, bind_rows, bind_cols, as novas fun√ß√µes across e c_across e muitas, muitas outras. Nos livros voc√™s encontram v√°rios outros exemplos e fun√ß√µes para facilitar o processo de an√°lise de dados, mas nossa expectativa √© que essa apresenta√ß√£o seja um ponto de partida para voc√™s se aprofundarem no seu pr√≥prio ritmo.\ndplyr para bancos de dados relacionais Nesta se√ß√£o, o nosso problema n√£o √© mais a an√°lise de dados presentes em um banco, mas o problema de relacionar informa√ß√µes sobre uma mesma unidade de an√°lise que est√£o presentes em v√°rios bancos de dados distintos.\nO banco nycflights13 cont√©m v√°rias tabelas que se relacionam, e elas funcionam como um excelente exemplo de banco de dados relacionais.\nNote que al√©m do banco de dados dos v√¥os, temos informa√ß√µes sobre clima, avi√µes e companhias a√©reas. Para n√≥s, pode ser relevante reunir informa√ß√µes de diferentes fontes em um mesmo banco de dados, algo que √© poss√≠vel atrav√©s de joins. Por uma quest√£o de tempo, n√£o vamos entrar muito a fundo no assunto, mas vamos introduzir dois conceitos chave e partir pros exemplos.\n  chaves s√£o as vari√°veis que identificam cada observa√ß√£o em um banco de dados de forma √∫nica. Uma chave √© dita ‚Äúprim√°ria‚Äù quando identifica uma observa√ß√£o na sua pr√≥pria tabela e ‚Äúexterna‚Äù quando ela identifica uma observa√ß√£o em outra tabela. Assim, qualquer opera√ß√£o de join √© uma forma de relacionar uma chave prim√°ria e uma chave externa. Essa jun√ß√£o de chaves √© uma rela√ß√£o, e as rela√ß√µes podem ser 1 para 1, 1 para muitos ou muitos para 1.\n  joins s√£o tipos de opera√ß√£o no qual se opta por priorizar um grupo de observa√ß√µes em detrimento de outras. Podemos v√™-los didaticamente a partir de duas figuras:\n  A primeira figura √© interessante porque nos d√° uma ideia de quais observa√ß√µes ser√£o mantidas e quais ser√£o descartadas, podemos imagin√°-la como uma abstra√ß√£o da nossa escolha.\n Quero todas as informa√ß√µes sobre os v√¥os e os aeroportos, e as duas s√£o igualmente importantes (inner_join, x = flights, y = airports).\n  Quero todas as observa√ß√µes do banco v√¥os e as informa√ß√µes dispon√≠veis sobre a aeronave (left_join, x = flights, y = planes).\n  Quero todas as informa√ß√µes tanto sobre os v√¥os quanto sobre o clima em cada dia (full_join, x = flights, y = weather).\n  Quero as informa√ß√µes dos v√¥os realizados pelas companhias a√©reas - minha prioridade s√£o as cias. √°reas (right_join, x = flights, y = carriers).\n A segunda figura √© interessante porque elas mostra a mec√¢nica de um join: cada observa√ß√£o tem a sua chave marcada com a observa√ß√£o correspondente no outro banco. Se as chaves s√£o iguais, a opera√ß√£o √© realizada, se as chaves n√£o s√£o iguais, a opera√ß√£o n√£o √© realizada. Dependendo do tipo de join, uma, as duas ou nenhuma das observa√ß√µes √© descartada do banco resultante.\n Antes de come√ßar a trabalhar com bancos relacionais, √© uma boa ideia dar uma explorada nas chaves, vendo suas contagens, se h√° erros de digita√ß√£o, etc. Por uma quest√£o de tempo, vamos pular essa fase.\n Se as nossas chaves forem perfeitinhas, e inclusive tiverem o mesmo nome nas duas tabelas, basta invocar o tipo de join desejado.\n# Vamos dar uma enxugada no flights para poder ver o efeito dos joins com maior facilidade.\rflights2 \u0026lt;- flights %\u0026gt;% select(year:day, hour, origin, dest, tailnum, carrier)\rflights2\r ## # A tibble: 336,776 x 8\r## year month day hour origin dest tailnum carrier\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 2013 1 1 5 EWR IAH N14228 UA ## 2 2013 1 1 5 LGA IAH N24211 UA ## 3 2013 1 1 5 JFK MIA N619AA AA ## 4 2013 1 1 5 JFK BQN N804JB B6 ## 5 2013 1 1 6 LGA ATL N668DN DL ## 6 2013 1 1 5 EWR ORD N39463 UA ## 7 2013 1 1 6 EWR FLL N516JB B6 ## 8 2013 1 1 6 LGA IAD N829AS EV ## 9 2013 1 1 6 JFK MCO N593JB B6 ## 10 2013 1 1 6 LGA ORD N3ALAA AA ## # ... with 336,766 more rows\r # Chaves perfeitas, mesmo nome nos dois bancos = natural join\rflights2 %\u0026gt;% left_join(weather) # Moleza\r ## Joining, by = c(\u0026quot;year\u0026quot;, \u0026quot;month\u0026quot;, \u0026quot;day\u0026quot;, \u0026quot;hour\u0026quot;, \u0026quot;origin\u0026quot;)\r## # A tibble: 336,776 x 18\r## year month day hour origin dest tailnum carrier temp dewp humid\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2013 1 1 5 EWR IAH N14228 UA 39.0 28.0 64.4\r## 2 2013 1 1 5 LGA IAH N24211 UA 39.9 25.0 54.8\r## 3 2013 1 1 5 JFK MIA N619AA AA 39.0 27.0 61.6\r## 4 2013 1 1 5 JFK BQN N804JB B6 39.0 27.0 61.6\r## 5 2013 1 1 6 LGA ATL N668DN DL 39.9 25.0 54.8\r## 6 2013 1 1 5 EWR ORD N39463 UA 39.0 28.0 64.4\r## 7 2013 1 1 6 EWR FLL N516JB B6 37.9 28.0 67.2\r## 8 2013 1 1 6 LGA IAD N829AS EV 39.9 25.0 54.8\r## 9 2013 1 1 6 JFK MCO N593JB B6 37.9 27.0 64.3\r## 10 2013 1 1 6 LGA ORD N3ALAA AA 39.9 25.0 54.8\r## # ... with 336,766 more rows, and 7 more variables: wind_dir \u0026lt;dbl\u0026gt;,\r## # wind_speed \u0026lt;dbl\u0026gt;, wind_gust \u0026lt;dbl\u0026gt;, precip \u0026lt;dbl\u0026gt;, pressure \u0026lt;dbl\u0026gt;,\r## # visib \u0026lt;dbl\u0026gt;, time_hour \u0026lt;dttm\u0026gt;\r flights2 %\u0026gt;% left_join(airlines) # Moleza\r ## Joining, by = \u0026quot;carrier\u0026quot;\r## # A tibble: 336,776 x 9\r## year month day hour origin dest tailnum carrier name ## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 2013 1 1 5 EWR IAH N14228 UA United Air Lines Inc. ## 2 2013 1 1 5 LGA IAH N24211 UA United Air Lines Inc. ## 3 2013 1 1 5 JFK MIA N619AA AA American Airlines Inc. ## 4 2013 1 1 5 JFK BQN N804JB B6 JetBlue Airways ## 5 2013 1 1 6 LGA ATL N668DN DL Delta Air Lines Inc. ## 6 2013 1 1 5 EWR ORD N39463 UA United Air Lines Inc. ## 7 2013 1 1 6 EWR FLL N516JB B6 JetBlue Airways ## 8 2013 1 1 6 LGA IAD N829AS EV ExpressJet Airlines Inc.\r## 9 2013 1 1 6 JFK MCO N593JB B6 JetBlue Airways ## 10 2013 1 1 6 LGA ORD N3ALAA AA American Airlines Inc. ## # ... with 336,766 more rows\r # Chaves perfeitas, mas h√° vari√°veis nos dois bancos com o mesmo nome e que n√£o s√£o chaves\r# √â necess√°rio especificar qual a chave\rflights2 %\u0026gt;% left_join(planes, by = \u0026quot;tailnum\u0026quot;)\r ## # A tibble: 336,776 x 16\r## year.x month day hour origin dest tailnum carrier year.y type ## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; ## 1 2013 1 1 5 EWR IAH N14228 UA 1999 Fixed wing mult~\r## 2 2013 1 1 5 LGA IAH N24211 UA 1998 Fixed wing mult~\r## 3 2013 1 1 5 JFK MIA N619AA AA 1990 Fixed wing mult~\r## 4 2013 1 1 5 JFK BQN N804JB B6 2012 Fixed wing mult~\r## 5 2013 1 1 6 LGA ATL N668DN DL 1991 Fixed wing mult~\r## 6 2013 1 1 5 EWR ORD N39463 UA 2012 Fixed wing mult~\r## 7 2013 1 1 6 EWR FLL N516JB B6 2000 Fixed wing mult~\r## 8 2013 1 1 6 LGA IAD N829AS EV 1998 Fixed wing mult~\r## 9 2013 1 1 6 JFK MCO N593JB B6 2004 Fixed wing mult~\r## 10 2013 1 1 6 LGA ORD N3ALAA AA NA \u0026lt;NA\u0026gt; ## # ... with 336,766 more rows, and 6 more variables: manufacturer \u0026lt;chr\u0026gt;,\r## # model \u0026lt;chr\u0026gt;, engines \u0026lt;int\u0026gt;, seats \u0026lt;int\u0026gt;, speed \u0026lt;int\u0026gt;, engine \u0026lt;chr\u0026gt;\r Veja que tanto flights2 quanto planes tem uma vari√°vel chamada year, mas elas significados diferentes. Em flights2 √© o ano do v√¥o, enquanto em planes √© o ano em que a aeronave entra em servi√ßo. Na hora que fazemos o join, uma recebe o sufixo ‚Äúx‚Äù e a outra ‚Äúy‚Äù para a indicar a diferen√ßa. Voc√™ pode especificar o sufixo desejado para evitar confus√£o:\nflights2 %\u0026gt;% left_join(planes, by = \u0026quot;tailnum\u0026quot;, suffix = c(\u0026quot;_flight\u0026quot;, \u0026quot;_entered_service\u0026quot;))\r ## # A tibble: 336,776 x 16\r## year_flight month day hour origin dest tailnum carrier year_entered_serv~\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r## 1 2013 1 1 5 EWR IAH N14228 UA 1999\r## 2 2013 1 1 5 LGA IAH N24211 UA 1998\r## 3 2013 1 1 5 JFK MIA N619AA AA 1990\r## 4 2013 1 1 5 JFK BQN N804JB B6 2012\r## 5 2013 1 1 6 LGA ATL N668DN DL 1991\r## 6 2013 1 1 5 EWR ORD N39463 UA 2012\r## 7 2013 1 1 6 EWR FLL N516JB B6 2000\r## 8 2013 1 1 6 LGA IAD N829AS EV 1998\r## 9 2013 1 1 6 JFK MCO N593JB B6 2004\r## 10 2013 1 1 6 LGA ORD N3ALAA AA NA\r## # ... with 336,766 more rows, and 7 more variables: type \u0026lt;chr\u0026gt;,\r## # manufacturer \u0026lt;chr\u0026gt;, model \u0026lt;chr\u0026gt;, engines \u0026lt;int\u0026gt;, seats \u0026lt;int\u0026gt;, speed \u0026lt;int\u0026gt;,\r## # engine \u0026lt;chr\u0026gt;\r Um aviso: cuidado com os produtos cartesianos. N√£o h√° um bom exemplo aqui no caso do flights porque o banco j√° est√° limpinho, mas se voc√™ especificar chaves com uma rela√ß√£o ‚Äúmuitos para muitos,‚Äù ele vai registrar no banco novo uma linha para cada combina√ß√£o poss√≠vel de vari√°veis. Em bancos maiores, isso geralmente estoura sua mem√≥ria e trava o R. Veja este pequeno exemplo de brinquedo.\nx \u0026lt;- tribble(\r~key, ~val_x,\r1, \u0026quot;x1\u0026quot;,\r2, \u0026quot;x2\u0026quot;,\r2, \u0026quot;x3\u0026quot;,\r3, \u0026quot;x4\u0026quot;\r)\ry \u0026lt;- tribble(\r~key, ~val_y,\r1, \u0026quot;y1\u0026quot;,\r2, \u0026quot;y2\u0026quot;,\r2, \u0026quot;y3\u0026quot;,\r3, \u0026quot;y4\u0026quot;\r)\rleft_join(x, y, by = \u0026quot;key\u0026quot;)\r ## # A tibble: 6 x 3\r## key val_x val_y\r## \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 1 x1 y1 ## 2 2 x2 y2 ## 3 2 x2 y3 ## 4 2 x3 y2 ## 5 2 x3 y3 ## 6 3 x4 y4\r Veja que no resultado foi criada uma linha para cada combina√ß√£o de val_x e val_y que tem a mesma chave repetida. Podem at√© existir situa√ß√µes em que isso seja o que voc√™ quer mesmo, mas na minha experi√™ncia at√© o momento isso √© problema com as chaves duplicadas e √© sinal de que h√° algo errado.\nMas pera√≠, se voc√™ falou que tem 4 tipos de join, porque s√≥ d√° exemplo de left_join?\nNa pr√°tica, opera√ß√µes relacionais s√£o feitas de forma intencional: escolhemos bancos de dados de acordo com o valor que atribu√≠mos a informa√ß√£o presente nele e pin√ßamos informa√ß√µes relacionadas de outros lugares para adicionar aquilo que √© nosso foco. Por isso, na maioria dos casos, o left_join √© o mais usual, porque preserva todas as informa√ß√µes do meu banco x e adiciona apenas as informa√ß√µes do banco y que combinaram com sucesso. Isso garante que eu n√£o vou perder nenhuma informa√ß√£o do meu banco principal.\nPra encerrar essa parte, mais exemplos de joins.\n# Minhas chaves tem nomes diferentes, ent√£o uso um vetor do tipo c(\u0026quot;chave_x\u0026quot; = \u0026quot;chave_y\u0026quot;)\rflights2 %\u0026gt;% left_join(airports, c(\u0026quot;dest\u0026quot; = \u0026quot;faa\u0026quot;))\r ## # A tibble: 336,776 x 15\r## year month day hour origin dest tailnum carrier name lat lon alt\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2013 1 1 5 EWR IAH N14228 UA Georg~ 30.0 -95.3 97\r## 2 2013 1 1 5 LGA IAH N24211 UA Georg~ 30.0 -95.3 97\r## 3 2013 1 1 5 JFK MIA N619AA AA Miami~ 25.8 -80.3 8\r## 4 2013 1 1 5 JFK BQN N804JB B6 \u0026lt;NA\u0026gt; NA NA NA\r## 5 2013 1 1 6 LGA ATL N668DN DL Harts~ 33.6 -84.4 1026\r## 6 2013 1 1 5 EWR ORD N39463 UA Chica~ 42.0 -87.9 668\r## 7 2013 1 1 6 EWR FLL N516JB B6 Fort ~ 26.1 -80.2 9\r## 8 2013 1 1 6 LGA IAD N829AS EV Washi~ 38.9 -77.5 313\r## 9 2013 1 1 6 JFK MCO N593JB B6 Orlan~ 28.4 -81.3 96\r## 10 2013 1 1 6 LGA ORD N3ALAA AA Chica~ 42.0 -87.9 668\r## # ... with 336,766 more rows, and 3 more variables: tz \u0026lt;dbl\u0026gt;, dst \u0026lt;chr\u0026gt;,\r## # tzone \u0026lt;chr\u0026gt;\r # Mesma coisa, s√≥ que agora juntando as informa√ß√µes da origem ao inv√©s do destino\rflights2 %\u0026gt;% left_join(airports, c(\u0026quot;origin\u0026quot; = \u0026quot;faa\u0026quot;))\r ## # A tibble: 336,776 x 15\r## year month day hour origin dest tailnum carrier name lat lon alt\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2013 1 1 5 EWR IAH N14228 UA Newar~ 40.7 -74.2 18\r## 2 2013 1 1 5 LGA IAH N24211 UA La Gu~ 40.8 -73.9 22\r## 3 2013 1 1 5 JFK MIA N619AA AA John ~ 40.6 -73.8 13\r## 4 2013 1 1 5 JFK BQN N804JB B6 John ~ 40.6 -73.8 13\r## 5 2013 1 1 6 LGA ATL N668DN DL La Gu~ 40.8 -73.9 22\r## 6 2013 1 1 5 EWR ORD N39463 UA Newar~ 40.7 -74.2 18\r## 7 2013 1 1 6 EWR FLL N516JB B6 Newar~ 40.7 -74.2 18\r## 8 2013 1 1 6 LGA IAD N829AS EV La Gu~ 40.8 -73.9 22\r## 9 2013 1 1 6 JFK MCO N593JB B6 John ~ 40.6 -73.8 13\r## 10 2013 1 1 6 LGA ORD N3ALAA AA La Gu~ 40.8 -73.9 22\r## # ... with 336,766 more rows, and 3 more variables: tz \u0026lt;dbl\u0026gt;, dst \u0026lt;chr\u0026gt;,\r## # tzone \u0026lt;chr\u0026gt;\r O assunto, obviamente, n√£o p√°ra por a√≠. Nos livros voc√™s encontrar√£o mais exemplos e fun√ß√µes, como √© o caso do semi_join e do anti_join e das opera√ß√µes ‚Äúset,‚Äù intersect, union e setdiff, mas isso fica pra voc√™s explorarem por conta pr√≥pria e virem tirar as d√∫vidas depois!\nstringr stringr cont√©m uma fam√≠lia de fun√ß√µes, todas come√ßadas em str_, cuja principal preocupa√ß√£o √© a consist√™ncia. As fun√ß√µes do base para strings s√£o muito √∫teis, por√©m, seus argumentos est√£o numa ordem um pouco estranha, algumas fun√ß√µes s√£o vetorizadas e outras n√£o. Quando voc√™ se acostuma, at√© que n√£o √© t√£o ruim, mas voltando para o assunto discutido ontem de tornar o seu c√≥digo mais leg√≠vel, √© interessante ter a simplicidade oferecida.\nBasic√£o da string Como este curso j√° √© pra praticantes de R, vou pular algumas coisas muito b√°sicas de string, vamos ao que interessa.\nDeterminados caracteres tem um significado especial dentro das strings. Quem j√° tentou copiar e colar um caminho de arquivo do Windows pro R sabe disso. Ent√£o, nesses casos, √© precisar ‚Äúescapar‚Äù caracteres. Por exemplo, se voc√™ quiser escrever aspas, voc√™ usar a contrabarra \\ para ‚Äúescapar‚Äù um caractere.\naspa_simples \u0026lt;- '\\'' # ou \u0026quot;'\u0026quot;\raspa_dupla \u0026lt;- \u0026quot;\\\u0026quot;\u0026quot; # ou '\u0026quot;'\r A regra do escape √© simples, ent√£o se voc√™ quiser colocar uma contrabarra \\\nx \u0026lt;- c(\u0026quot;\\\\\u0026quot;, \u0026quot;\\\u0026quot;\u0026quot;)\rx\r ## [1] \u0026quot;\\\\\u0026quot; \u0026quot;\\\u0026quot;\u0026quot;\r writeLines(x)\r ## \\\r## \u0026quot;\r Outros caracteres especiais √∫teis: \u0026quot;\\n\u0026quot; para pular uma linha, \\t para Tab. Voc√™ pode ver os outros na ajuda das aspas \u0026quot;, basta digitar no console ?\u0026quot;'\u0026quot; ou ?'\u0026quot;'.\nOutra coisa que d√° pra fazer, se voc√™ precisar incluir um caractere distinto, √© usar unicode:\nx \u0026lt;- \u0026quot;\\u00b5\u0026quot;\rx\r ## [1] \u0026quot;¬µ\u0026quot;\r Ok, mas e o pacote stringr? Bem, ele tem o intuito de facilitar e dar consist√™ncia, ent√£o, todas as fun√ß√µes do pacote come√ßam com as iniciais str_ justamente para serem utilizadas com o autocompletar do RStudio, que pode ser acessada com os atalhos Ctrl + Espa√ßo ou Tab. Vamos ver agora alguns exemplos de fun√ß√µes do pacote.\nComprimento da string em caracteres:\nlibrary(stringr)\r# No RStudio, basta digitar 'str_' e apertar Tab ou Ctrl + Espa√ßo\rx \u0026lt;- \u0026quot;Ministro Sinistro\u0026quot;\rstr_length(x)\r ## [1] 17\r x \u0026lt;- c(\u0026quot;Ministro Sinistro\u0026quot;, \u0026quot;Abelha Gulosa\u0026quot;, \u0026quot;p\u0026quot;)\rstr_length(x)\r ## [1] 17 13 1\r Concatena√ß√£o de strings:\nstr_c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;z\u0026quot;)\r ## [1] \u0026quot;xyz\u0026quot;\r Use o argumento sep para definir caracteres que aparecer√£o entre as strings originais:\nstr_c(\u0026quot;x\u0026quot;, \u0026quot;y\u0026quot;, \u0026quot;z\u0026quot;, sep = \u0026quot; + \u0026quot;)\r ## [1] \u0026quot;x + y + z\u0026quot;\r Voc√™ pode trabalhar com strings que cont√©m NAs:\nx \u0026lt;- c(\u0026quot;abc\u0026quot;, NA)\rstr_c(\u0026quot;|-\u0026quot;, x, \u0026quot;-|\u0026quot;)\r ## [1] \u0026quot;|-abc-|\u0026quot; NA\r str_c(\u0026quot;|-\u0026quot;, str_replace_na(x), \u0026quot;-|\u0026quot;)\r ## [1] \u0026quot;|-abc-|\u0026quot; \u0026quot;|-NA-|\u0026quot;\r str_c √© uma fun√ß√£o vetorizada e automaticamente recicla seus argumentos pra ter o tamanho do maior:\n# Eu na gradua√ß√£o\rstr_c(\u0026quot;Profe, me d√° mais \u0026quot;, c(\u0026quot;1\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;3\u0026quot;), \u0026quot; semanas pra entregar, por favor!\u0026quot;)\r ## [1] \u0026quot;Profe, me d√° mais 1 semanas pra entregar, por favor!\u0026quot;\r## [2] \u0026quot;Profe, me d√° mais 2 semanas pra entregar, por favor!\u0026quot;\r## [3] \u0026quot;Profe, me d√° mais 3 semanas pra entregar, por favor!\u0026quot;\r # Eu de manh√£\rstr_c(\u0026quot;S√≥ mais \u0026quot;, c(\u0026quot;5\u0026quot;, \u0026quot;10\u0026quot;, \u0026quot;20\u0026quot;, \u0026quot;30\u0026quot;), \u0026quot; minutinhos e eu acordo!\u0026quot;)\r ## [1] \u0026quot;S√≥ mais 5 minutinhos e eu acordo!\u0026quot; \u0026quot;S√≥ mais 10 minutinhos e eu acordo!\u0026quot;\r## [3] \u0026quot;S√≥ mais 20 minutinhos e eu acordo!\u0026quot; \u0026quot;S√≥ mais 30 minutinhos e eu acordo!\u0026quot;\r Se algum dos objetos passados para str_c tiver tamanho 0, ele √© descartado. √ötil para usar com testes l√≥gicos.\nnome \u0026lt;- \u0026quot;Vinicius\u0026quot;\rsobrenome \u0026lt;- \u0026quot;Maia\u0026quot;\rtem_nome_do_meio \u0026lt;- FALSE\rstr_c(\r\u0026quot;Meu nome √© \u0026quot;, nome, \u0026quot; \u0026quot;,\r# isso aqui retorna um vetor tamanho 0\rif (tem_nome_do_meio) \u0026quot; de Souza\u0026quot;, sobrenome,\r\u0026quot;.\u0026quot;\r)\r ## [1] \u0026quot;Meu nome √© Vinicius Maia.\u0026quot;\r Conhecedores de paste reconhecer√£o o argumento collapse, que serve para transformar vetores de strings em uma √∫nica string.\nstr_c(c(\u0026quot;Nat√°lia\u0026quot;, \u0026quot;Martins\u0026quot;, \u0026quot;Arruda\u0026quot;), collapse = \u0026quot; \u0026quot;)\r ## [1] \u0026quot;Nat√°lia Martins Arruda\u0026quot;\r De forma similar, conhecedores de substring dever√£o imediatamente reconhecer essa:\nx \u0026lt;- c(\u0026quot;Ma√ß√£\u0026quot;, \u0026quot;Banana\u0026quot;, \u0026quot;Abacaxi\u0026quot;)\rstr_sub(x, 1, 3)\r ## [1] \u0026quot;Ma√ß\u0026quot; \u0026quot;Ban\u0026quot; \u0026quot;Aba\u0026quot;\r str_sub(x, -3, -1)\r ## [1] \u0026quot;a√ß√£\u0026quot; \u0026quot;ana\u0026quot; \u0026quot;axi\u0026quot;\r str_sub n√£o vai dar erro se a string for muito curta:\nstr_sub(\u0026quot;a\u0026quot;, 1, 5)\r ## [1] \u0026quot;a\u0026quot;\r D√° pra usar a forma str_sub(x) \u0026lt;- para modificar partes de strings\nstr_sub(x, 1, 1) \u0026lt;- str_to_lower(str_sub(x, 1, 1))\rx\r ## [1] \u0026quot;ma√ß√£\u0026quot; \u0026quot;banana\u0026quot; \u0026quot;abacaxi\u0026quot;\r Note o uso de str_to_lower para mudar para min√∫sculas. O contr√°rio √© str_to_upper, tamb√©m h√° uma para t√≠tulos, str_to_title, e para a primeira letra de uma frase, str_to_sentence.\nx \u0026lt;- \u0026quot;Ministro Sinistro\u0026quot;\rstr_to_lower(x)\r ## [1] \u0026quot;ministro sinistro\u0026quot;\r str_to_upper(x)\r ## [1] \u0026quot;MINISTRO SINISTRO\u0026quot;\r str_to_sentence(x)\r ## [1] \u0026quot;Ministro sinistro\u0026quot;\r str_to_title(x)\r ## [1] \u0026quot;Ministro Sinistro\u0026quot;\r Como vimos no readr, algumas quest√µes relacionadas a strings dependem da l√≠ngua, ou, na linguagem do pacote, s√£o ‚Äúlocale dependent.‚Äù Por isso nas fun√ß√µes onde isso √© relevante, o argumento se chama locale. Isso n√£o √© super relevante para quem trabalha com o ingl√™s ou as l√≠nguas do oeste europeu, considerando que a maioria das l√≠nguas tem ra√≠zes similares, mas pode ser muito importante para outros idiomas. Vejamos este exemplo com a mudan√ßa da ordem das strings.\nx \u0026lt;- c(\u0026quot;abacaxi\u0026quot;, \u0026quot;escarola\u0026quot;, \u0026quot;banana\u0026quot;)\rstr_sort(x, locale = \u0026quot;en\u0026quot;) # Ingl√™s\r ## [1] \u0026quot;abacaxi\u0026quot; \u0026quot;banana\u0026quot; \u0026quot;escarola\u0026quot;\r str_sort(x, locale = \u0026quot;haw\u0026quot;) # Havaiano\r ## [1] \u0026quot;abacaxi\u0026quot; \u0026quot;escarola\u0026quot; \u0026quot;banana\u0026quot;\r √â justamente para esses casos que str_sort e str_order oferecem a alternativa de voc√™ especificar o locale.\nTrabalhando com padr√µes e ‚Äúexpress√µes regulares‚Äù Express√µes regulares s√£o quase uma linguagem de programa√ß√£o em si, aqui, vamos dar uma passada muito r√°pida e ver alguns exemplos simples. S√£o uma ferramenta muito √∫til, mas talvez n√£o do interesse de todos.\nBasicamente, a ideia √© fazer uma pesquisa na string, em busca de um padr√£o espec√≠fico. Pode ser uma palavra, um espa√ßo em branco, uma quebra de linha. Pode ficar muito complexo ou ser bem b√°sico. O nosso objetivo aqui √© que todos tenham a capacidade de trabalhar com padr√µes simples para corrigir inconsist√™ncias em bancos de dados, como no exemplo da aula anterior das colunas do dataset da OMS.\nPara visualizar padr√µes, vamos usar duas helper functions, str_view e str_view_all.\nx \u0026lt;- c(\u0026quot;mam√£o\u0026quot;, \u0026quot;banana\u0026quot;, \u0026quot;ananas\u0026quot;)\rstr_view(x, \u0026quot;an\u0026quot;)\r \r{\"x\":{\"html\":\"\\n mam√£o\\n banana\\n ananas\\n\"},\"evals\":[],\"jsHooks\":[]}\rO resultado sai na aba ‚ÄúViewer‚Äù do seu RStudio.\nO primeiro padr√£o que podemos usar √© o ., que identifica qualquer caractere. As vezes na documenta√ß√£o esse tipo de padr√£o gen√©rico √© chamado de ‚Äúwildcard.‚Äù\nstr_view(x, \u0026quot;.a.\u0026quot;)\r \r{\"x\":{\"html\":\"\\n mam√£o\\n banana\\n ananas\\n\"},\"evals\":[],\"jsHooks\":[]}\rA forma de ler essa opera√ß√£o √©: ‚ÄúIdentifique qualquer conjunto de caracteres que tenha uma letra a no meio deles.‚Äù\nSe voc√™ quiser identificar um . numa string, voc√™ precisa usar o escape \\. Por√©m, a barra tamb√©m √© um escape! Ent√£o, ao escrever express√µes regulares, precisamos usar \\\\. Veja:\ndot \u0026lt;- \u0026quot;.\u0026quot;\rcat(dot)\r ## .\r # erro\rdot \u0026lt;- \u0026quot;\\.\u0026quot;\r ## Error: '\\.' √© uma seq√º√™ncia de escape n√£o reconhecida na cadeia de caracteres come√ßando com \u0026quot;\u0026quot;\\.\u0026quot;\r # agora sim\rdot \u0026lt;- \u0026quot;\\\\.\u0026quot;\rcat(dot)\r ## \\.\r Agora em um exemplo:\nx \u0026lt;- c(\u0026quot;Praia.\u0026quot;, \u0026quot;Agora.\u0026quot;, \u0026quot;Ou.\u0026quot;, \u0026quot;Me.\u0026quot;, \u0026quot;Rebelo.\u0026quot;)\rstr_view(x, \u0026quot;a\\\\.\u0026quot;)\r \r{\"x\":{\"html\":\"\\n Praia.\\n Agora.\\n Ou.\\n Me.\\n Rebelo.\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;u\\\\.\u0026quot;)\r \r{\"x\":{\"html\":\"\\n Praia.\\n Agora.\\n Ou.\\n Me.\\n Rebelo.\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;o\\\\.\u0026quot;)\r \r{\"x\":{\"html\":\"\\n Praia.\\n Agora.\\n Ou.\\n Me.\\n Rebelo.\\n\"},\"evals\":[],\"jsHooks\":[]}\rT√°, mas se a contrabarra √© utilizada para denotar uma express√£o regular tipo o ., como eu fa√ßo para pesquisar uma contrabarra?\nx \u0026lt;- \u0026quot;Jake Peralta √© o melhor detetive\\\\g√™nio\u0026quot;\rcat(x)\r ## Jake Peralta √© o melhor detetive\\g√™nio\r A solu√ß√£o √© escapar o escape do escape, sacou?\nstr_view(x, \u0026quot;\\\\\\\\\u0026quot;)\r \r{\"x\":{\"html\":\"\\n Jake Peralta √© o melhor detetive\\\\g√™nio\\n\"},\"evals\":[],\"jsHooks\":[]}\r√â enrolado mesmo‚Ä¶\nPara n√£o estender muito o assunto, vamos ver v√°rios exemplos de caracteres especiais a ser usados em express√µes regulares.\n^ encontra o in√≠cio de uma string\nx \u0026lt;- c(\u0026quot;ma√ß√£\u0026quot;, \u0026quot;banana\u0026quot;, \u0026quot;mam√£o\u0026quot;)\rstr_view(x, \u0026quot;^m\u0026quot;)\r \r{\"x\":{\"html\":\"\\n ma√ß√£\\n banana\\n mam√£o\\n\"},\"evals\":[],\"jsHooks\":[]}\r$ encontra o final\nstr_view(x, \u0026quot;a$\u0026quot;)\r \r{\"x\":{\"html\":\"\\n ma√ß√£\\n banana\\n mam√£o\\n\"},\"evals\":[],\"jsHooks\":[]}\rPara for√ßar a express√£o a achar apenas a palavra completa, use os dois\nx \u0026lt;- c(\u0026quot;vitamina de banana\u0026quot;, \u0026quot;sundae de banana\u0026quot;, \u0026quot;banana\u0026quot;)\rstr_view(x, \u0026quot;banana\u0026quot;)\r \r{\"x\":{\"html\":\"\\n vitamina de banana\\n sundae de banana\\n banana\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;^banana$\u0026quot;)\r \r{\"x\":{\"html\":\"\\n vitamina de banana\\n sundae de banana\\n banana\\n\"},\"evals\":[],\"jsHooks\":[]}\rUse classes de caracteres para encontrar gen√©ricos\nQualquer digito:\nx \u0026lt;- \u0026quot;15 de Maio de 2021.\u0026quot;\rstr_view(x, \u0026quot;\\\\d\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15 de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rQualquer espa√ßo em branco:\nstr_view(x, \u0026quot;\\\\s\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rQualquer caractere de um grupo: [abc]\nstr_view(x, \u0026quot;[M]\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15 de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;[eM]\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15 de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;[deM]\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15 de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rQualquer caractere menos esses: [^abc]\nstr_view(x, \u0026quot;[^15]\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;[^15 de]\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15 de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;[^15 de Maio de ]\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15 de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rUsar uma classe pra evitar digitar 5 milh√µes de contrabarras\nstr_view(x, \u0026quot;[.]\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15 de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(\u0026quot;a*c\u0026quot;, \u0026quot;[*]\u0026quot;)\r \r{\"x\":{\"html\":\"\\n a*c\\n\"},\"evals\":[],\"jsHooks\":[]}\rVoc√™ pode misturar strings com classes tamb√©m\nx \u0026lt;- c(\u0026quot;15 de Maio de 2021.\u0026quot;, \u0026quot;16 de Maio de 2021.\u0026quot;)\rstr_view(x, \u0026quot;1[56] de Maio\u0026quot;)\r \r{\"x\":{\"html\":\"\\n 15 de Maio de 2021.\\n 16 de Maio de 2021.\\n\"},\"evals\":[],\"jsHooks\":[]}\rInfelizmente, alguns caracteres tem significado especial dentro das classes, e voc√™ tem que usar contrabarras para fugir deles: ] \\ ^ e -.\nVoc√™ pode lidar com repeti√ß√µes\nx \u0026lt;- c(\u0026quot;Mariele\u0026quot;, \u0026quot;Marielle\u0026quot;, \u0026quot;Mariellle\u0026quot;, \u0026quot;Marie\u0026quot;)\rstr_view(x, \u0026quot;Mariell?e\u0026quot;) # l aparece 0 ou 1 vez\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel+e\u0026quot;) # l aparece 1 ou + vezes\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel*\u0026quot;) # l aparece 0 ou + vezes\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel{0}\u0026quot;) # l aparece exatamente 0 vezes\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel{1}\u0026quot;) # l aparece exatamente 1 vez\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel{2}\u0026quot;) # l aparece exatamente 2 vezes\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel{3}\u0026quot;) # l aparece exatamente 3 vezes\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel{1,}\u0026quot;) # l aparece exatamente 1 vez ou mais\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel{2,}\u0026quot;) # l aparece exatamente 2 vezes ou mais\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel{1,2}\u0026quot;) # l aparece de 1 a 2 vezes\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rstr_view(x, \u0026quot;Mariel{2,3}\u0026quot;) # l aparece de 2 a 3 vezes\r \r{\"x\":{\"html\":\"\\n Mariele\\n Marielle\\n Mariellle\\n Marie\\n\"},\"evals\":[],\"jsHooks\":[]}\rEsse assunto √© enorme, e ainda estamos s√≥ na superf√≠cie. H√° grupos, lookarounds, e muitos outros detalhes envolvendo express√µes regulares, e voc√™s podem consultar os livros de refer√™ncia para mergulhar mais fundo. Mas vamos parar por aqui para nos concentrar no que interessa.\nEm geral, temos um banco de dados com strings problem√°ticas, tipo erros de digita√ß√£o, inconsist√™ncias etc. O primeiro passo, em geral, √© detectar os problemas.\nx \u0026lt;- c(\u0026quot;S√£o Paulo\u0026quot;, \u0026quot;SAO PAULO\u0026quot;, \u0026quot;Sao Paulo\u0026quot;, \u0026quot;sp\u0026quot;, \u0026quot;SP\u0026quot;, \u0026quot;Sp\u0026quot;)\rstr_detect(x, \u0026quot;√£\u0026quot;)\r ## [1] TRUE FALSE FALSE FALSE FALSE FALSE\r str_detect(x, \u0026quot;[Ss][Pp]\u0026quot;)\r ## [1] FALSE FALSE FALSE TRUE TRUE TRUE\r str_detect(x, \u0026quot;[Ss][Aa][Oo]\u0026quot;)\r ## [1] FALSE TRUE TRUE FALSE FALSE FALSE\r Voc√™ pode se utilizar do fato da resposta ser um vetor l√≥gico para descobrir quantos problemas voc√™ tem\n# Contagens\rstr_detect(x, \u0026quot;√£\u0026quot;) %\u0026gt;% sum()\r ## [1] 1\r str_detect(x, \u0026quot;[Ss][Pp]\u0026quot;) %\u0026gt;% sum()\r ## [1] 3\r str_detect(x, \u0026quot;[Ss][Aa][Oo]\u0026quot;) %\u0026gt;% sum()\r ## [1] 2\r # Propor√ß√µes\rstr_detect(x, \u0026quot;√£\u0026quot;) %\u0026gt;% mean()\r ## [1] 0.1666667\r str_detect(x, \u0026quot;[Ss][Pp]\u0026quot;) %\u0026gt;% mean()\r ## [1] 0.5\r str_detect(x, \u0026quot;[Ss][Aa][Oo]\u0026quot;) %\u0026gt;% mean()\r ## [1] 0.3333333\r Depois de detectar seus problemas, voc√™ pode querer extrair uma parte dos seus casos: use str_subset\nstr_subset(x, \u0026quot;[Ss][Pp]\u0026quot;)\r ## [1] \u0026quot;sp\u0026quot; \u0026quot;SP\u0026quot; \u0026quot;Sp\u0026quot;\r Em geral, no entanto, voc√™ vai estar trabalhando num data frame. Ent√£o use dplyr::filter e str_detect.\ndf \u0026lt;- tibble::tibble(\rnome = c(\u0026quot;Marcos\u0026quot;, \u0026quot;rog√©rio\u0026quot;, \u0026quot;cebolinha\u0026quot;, \u0026quot;Bei√ßola\u0026quot;, \u0026quot;nadir\u0026quot;, \u0026quot;Monica\u0026quot;),\ruf = x,\rdtnsc = c(\u0026quot;15 de Maio de 1980\u0026quot;, \u0026quot;1 de Jan de 2001\u0026quot;, \u0026quot;6 de Ago de 1993\u0026quot;, \u0026quot;20 de Abril de 1964\u0026quot;, \u0026quot;24 de Nov de 1975\u0026quot;, \u0026quot;14 de Dezembro de 1997\u0026quot;)\r)\rdf %\u0026gt;% dplyr::filter(str_detect(uf, \u0026quot;[Ss][Pp]\u0026quot;))\r ## # A tibble: 3 x 3\r## nome uf dtnsc ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 Bei√ßola sp 20 de Abril de 1964 ## 2 nadir SP 24 de Nov de 1975 ## 3 Monica Sp 14 de Dezembro de 1997\r Voc√™ pode contar quantos matches voc√™ tem str_count\nstr_count(x, \u0026quot;o\u0026quot;)\r ## [1] 2 0 2 0 0 0\r str_count(x, \u0026quot;[Oo]\u0026quot;)\r ## [1] 2 2 2 0 0 0\r # e usar num data frame\rdf %\u0026gt;% dplyr::mutate(vogais = str_count(uf, \u0026quot;[aeiou]\u0026quot;),\rconsoantes = str_count(uf, \u0026quot;[^aeiou]\u0026quot;))\r ## # A tibble: 6 x 5\r## nome uf dtnsc vogais consoantes\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 Marcos S√£o Paulo 15 de Maio de 1980 4 5\r## 2 rog√©rio SAO PAULO 1 de Jan de 2001 0 9\r## 3 cebolinha Sao Paulo 6 de Ago de 1993 5 4\r## 4 Bei√ßola sp 20 de Abril de 1964 0 2\r## 5 nadir SP 24 de Nov de 1975 0 2\r## 6 Monica Sp 14 de Dezembro de 1997 0 2\r Voc√™ pode extrair str_extract as informa√ß√µes que voc√™ quer\nstr_extract(df$dtnsc, \u0026quot;\\\\d+\u0026quot;)\r ## [1] \u0026quot;15\u0026quot; \u0026quot;1\u0026quot; \u0026quot;6\u0026quot; \u0026quot;20\u0026quot; \u0026quot;24\u0026quot; \u0026quot;14\u0026quot;\r str_extract(df$dtnsc, \u0026quot;\\\\d+$\u0026quot;)\r ## [1] \u0026quot;1980\u0026quot; \u0026quot;2001\u0026quot; \u0026quot;1993\u0026quot; \u0026quot;1964\u0026quot; \u0026quot;1975\u0026quot; \u0026quot;1997\u0026quot;\r str_extract(df$dtnsc, \u0026quot;\\\\D+\u0026quot;)\r ## [1] \u0026quot; de Maio de \u0026quot; \u0026quot; de Jan de \u0026quot; \u0026quot; de Ago de \u0026quot; \u0026quot; de Abril de \u0026quot; ## [5] \u0026quot; de Nov de \u0026quot; \u0026quot; de Dezembro de \u0026quot;\r # Na tibble\rdf %\u0026gt;% dplyr::mutate(\rdia = str_extract(dtnsc, \u0026quot;\\\\d+\u0026quot;),\rmes = str_extract(df$dtnsc, \u0026quot;\\\\D+\u0026quot;),\rano = str_extract(dtnsc, \u0026quot;\\\\d+$\u0026quot;))\r ## # A tibble: 6 x 6\r## nome uf dtnsc dia mes ano ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 Marcos S√£o Paulo 15 de Maio de 1980 15 \u0026quot; de Maio de \u0026quot; 1980 ## 2 rog√©rio SAO PAULO 1 de Jan de 2001 1 \u0026quot; de Jan de \u0026quot; 2001 ## 3 cebolinha Sao Paulo 6 de Ago de 1993 6 \u0026quot; de Ago de \u0026quot; 1993 ## 4 Bei√ßola sp 20 de Abril de 1964 20 \u0026quot; de Abril de \u0026quot; 1964 ## 5 nadir SP 24 de Nov de 1975 24 \u0026quot; de Nov de \u0026quot; 1975 ## 6 Monica Sp 14 de Dezembro de 1997 14 \u0026quot; de Dezembro de \u0026quot; 1997\r # Melhor ainda\rdf %\u0026gt;% tidyr::extract(\rdtnsc, c(\u0026quot;dia\u0026quot;, \u0026quot;mes\u0026quot;, \u0026quot;ano\u0026quot;), regex = \u0026quot;(\\\\d+) de (\\\\D+) de (\\\\d+$)\u0026quot;\r)\r ## # A tibble: 6 x 5\r## nome uf dia mes ano ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 Marcos S√£o Paulo 15 Maio 1980 ## 2 rog√©rio SAO PAULO 1 Jan 2001 ## 3 cebolinha Sao Paulo 6 Ago 1993 ## 4 Bei√ßola sp 20 Abril 1964 ## 5 nadir SP 24 Nov 1975 ## 6 Monica Sp 14 Dezembro 1997\r Similar a ideia de extra√ß√£o, podemos substituir com str_replace\nstr_replace(x, \u0026quot;[Ss][Pp]\u0026quot;, \u0026quot;S√£o Paulo\u0026quot;)\r ## [1] \u0026quot;S√£o Paulo\u0026quot; \u0026quot;SAO PAULO\u0026quot; \u0026quot;Sao Paulo\u0026quot; \u0026quot;S√£o Paulo\u0026quot; \u0026quot;S√£o Paulo\u0026quot; \u0026quot;S√£o Paulo\u0026quot;\r str_replace(x, \u0026quot;SAO PAULO\u0026quot;, \u0026quot;S√£o Paulo\u0026quot;)\r ## [1] \u0026quot;S√£o Paulo\u0026quot; \u0026quot;S√£o Paulo\u0026quot; \u0026quot;Sao Paulo\u0026quot; \u0026quot;sp\u0026quot; \u0026quot;SP\u0026quot; \u0026quot;Sp\u0026quot;\r str_replace(x, \u0026quot;a\u0026quot;, \u0026quot;√£\u0026quot;)\r ## [1] \u0026quot;S√£o P√£ulo\u0026quot; \u0026quot;SAO PAULO\u0026quot; \u0026quot;S√£o Paulo\u0026quot; \u0026quot;sp\u0026quot; \u0026quot;SP\u0026quot; \u0026quot;Sp\u0026quot;\r Tanto str_extract quanto str_replace substituem apenas a primeira marca, se voc√™ quiser substituir todas, utilize str_..._all\nstr_extract_all(x, \u0026quot;a\u0026quot;, simplify = TRUE)\r ## [,1] [,2]\r## [1,] \u0026quot;a\u0026quot; \u0026quot;\u0026quot; ## [2,] \u0026quot;\u0026quot; \u0026quot;\u0026quot; ## [3,] \u0026quot;a\u0026quot; \u0026quot;a\u0026quot; ## [4,] \u0026quot;\u0026quot; \u0026quot;\u0026quot; ## [5,] \u0026quot;\u0026quot; \u0026quot;\u0026quot; ## [6,] \u0026quot;\u0026quot; \u0026quot;\u0026quot;\r str_replace_all(x, \u0026quot;a\u0026quot;, \u0026quot;√£\u0026quot;)\r ## [1] \u0026quot;S√£o P√£ulo\u0026quot; \u0026quot;SAO PAULO\u0026quot; \u0026quot;S√£o P√£ulo\u0026quot; \u0026quot;sp\u0026quot; \u0026quot;SP\u0026quot; \u0026quot;Sp\u0026quot;\r O assunto n√£o acaba, mas vamos parar por aqui. Novamente, recomendo consultarem os materiais para quem quiser ir mais a fundo nisso. √â bem capaz de no andar da carruagem aparecerem outros exemplos nos quais a manipula√ß√£o de strings pode ser importante.\nforcats Esse √© um pacotinho muito que facilita bastante a vida de quem trabalha com vari√°vel categ√≥rica, ou, no R, os factors. Ele consiste em uma s√©rie de ‚Äúhelper functions‚Äù baseadas em fun√ß√µes do base e do stats que trabalham com os componentes de um factor, ou seja, seus levels e seus values.\nImagino que todos aqui est√£o familiarizados com fatores e com a sua cria√ß√£o, ent√£o vamos direto ao que interessa. Educa√ß√£o √© um vetor de caracteres que vem com os n√≠veis educacionais de um popula√ß√£o.\neducacao \u0026lt;- c(\u0026quot;Superior\u0026quot;, \u0026quot;Fundamental\u0026quot;, \u0026quot;M√©dio\u0026quot;, \u0026quot;Superior\u0026quot;, \u0026quot;Fundamental\u0026quot;, \u0026quot;M√©dio\u0026quot;,\r\u0026quot;Superior\u0026quot;, \u0026quot;Fundamental\u0026quot;, \u0026quot;M√©dio\u0026quot;, \u0026quot;Superior\u0026quot;, \u0026quot;Fundamental\u0026quot;, \u0026quot;M√©dio\u0026quot;)\rx \u0026lt;- factor(educacao, levels = c(\u0026quot;Fundamental\u0026quot;, \u0026quot;M√©dio\u0026quot;, \u0026quot;Superior\u0026quot;))\rx\r ## [1] Superior Fundamental M√©dio Superior Fundamental M√©dio ## [7] Superior Fundamental M√©dio Superior Fundamental M√©dio ## Levels: Fundamental M√©dio Superior\r levels(x)\r ## [1] \u0026quot;Fundamental\u0026quot; \u0026quot;M√©dio\u0026quot; \u0026quot;Superior\u0026quot;\r relevel(x, \u0026quot;Superior\u0026quot;)\r ## [1] Superior Fundamental M√©dio Superior Fundamental M√©dio ## [7] Superior Fundamental M√©dio Superior Fundamental M√©dio ## Levels: Superior Fundamental M√©dio\r Em geral, diversas tarefas envolvendo fatores no base n√£o s√£o muito simples. Por exemplo, se eu quiser modificar os nomes dos n√≠veis de um fator depois dele j√° estar criado, modificar a ordem dos n√≠veis, ou agrupar diversos n√≠veis em um s√≥. forcats vem justamente oferecer solu√ß√µes nesse sentido. Normalmente, estamos trabalhando com bancos de dados, e n√£o com um vetor solit√°rio, por isso, vamos usar o gss_cat, uma amostra do General Social Survey aplicado pelo NORC e pela Universidade de Chicago, que vem no pacote forcats.\nlibrary(forcats)\rgss_cat\r ## # A tibble: 21,483 x 9\r## year marital age race rincome partyid relig denom tvhours\r## \u0026lt;int\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 2000 Never ma~ 26 White $8000 to ~ Ind,near r~ Protesta~ Souther~ 12\r## 2 2000 Divorced 48 White $8000 to ~ Not str re~ Protesta~ Baptist~ NA\r## 3 2000 Widowed 67 White Not appli~ Independent Protesta~ No deno~ 2\r## 4 2000 Never ma~ 39 White Not appli~ Ind,near r~ Orthodox~ Not app~ 4\r## 5 2000 Divorced 25 White Not appli~ Not str de~ None Not app~ 1\r## 6 2000 Married 25 White $20000 - ~ Strong dem~ Protesta~ Souther~ NA\r## 7 2000 Never ma~ 36 White $25000 or~ Not str re~ Christian Not app~ 3\r## 8 2000 Divorced 44 White $7000 to ~ Ind,near d~ Protesta~ Luthera~ NA\r## 9 2000 Married 44 White $25000 or~ Not str de~ Protesta~ Other 0\r## 10 2000 Married 47 White $25000 or~ Strong rep~ Protesta~ Souther~ 3\r## # ... with 21,473 more rows\r Contagens\nUma das primeiras coisas que interessa ao lidar com fatores, √© obter suas contagens, o que √© algo muito simples utilizando a gram√°tica do dplyr.\n# Fun√ß√£o count\rgss_cat %\u0026gt;% count(race)\r ## # A tibble: 3 x 2\r## race n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 Other 1959\r## 2 Black 3129\r## 3 White 16395\r # Incluindo n√≠veis com contagem = 0.\rgss_cat %\u0026gt;% count(race, .drop = FALSE)\r ## # A tibble: 4 x 2\r## race n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 Other 1959\r## 2 Black 3129\r## 3 White 16395\r## 4 Not applicable 0\r # Visualiza√ß√£o com ggplot\rlibrary(ggplot2)\rgss_cat %\u0026gt;% ggplot(aes(race)) + geom_bar()\r # Incluindo n√≠veis com contagem = 0.\rgss_cat %\u0026gt;% ggplot(aes(race)) + geom_bar() + scale_x_discrete(drop = FALSE)\r Note o uso do argumento drop nos dois casos, para indicar que casos com 0 observa√ß√µes n√£o devem ser removidos do resultado.\nModificando a ordem A segunda tarefa comum quando trabalhamos com fatores √© modificar a ordem em que eles aparecem. N√£o √© tanto o caso quando trabalhamos com fatores ordenados, mas diversos tipos de vari√°veis categ√≥ricas n√£o possuem uma ordem l√≥gica pre-definida e, mesmo assim, nos interessa apresent√°-los de acordo com uma determinada hierarquia visual, seja porque eles s√£o os mais frequentes ou porque queremos destacar algum elemento em particular. forcats implementa diversas estrat√©gias de reordenamento de fatores. Vamos v√™-las brevemente.\nDigamos que eu queira saber o tempo m√©dio de televis√£o assistida por membros das diversas religi√µes. Eu poderia produzir um sum√°rio e depois plotar isso num gr√°fico.\nrelig_summary \u0026lt;- gss_cat %\u0026gt;%\rgroup_by(relig) %\u0026gt;%\rsummarise(\rage = mean(age, na.rm = TRUE),\rtvhours = mean(tvhours, na.rm = TRUE),\rn = n()\r)\rrelig_summary %\u0026gt;% ggplot(aes(tvhours, relig)) + geom_point()\r O display est√° t√©cnicamente correto, mas a forma desorganizada dos n√≠veis no eixo Y dificulta a nossa capacidade de fazer compara√ß√µes. Talvez fosse mais interessante ordenar este resultado por ordem decrescente do n√∫mero de horas de tv. Mas, como fazer isso de forma direta, sem precisar realizar diversas computa√ß√µes?\n# Direto no plot\rrelig_summary %\u0026gt;% ggplot(aes(tvhours, fct_reorder(relig, tvhours))) + geom_point()\r # Antes de passar o data.frame para a plotagem\rrelig_summary %\u0026gt;% mutate(relig = fct_reorder(relig, tvhours)) %\u0026gt;% ggplot(aes(tvhours, relig)) + geom_point()\r Note como posso aplicar a transforma√ß√£o diretamente na vari√°vel durante o processo de plotagem, ou antes, e uma invoca√ß√£o de mutate. Na minha opini√£o, o segundo jeito √© o mais adequado, por duas raz√µes: √© mais f√°cil de digitar, inserir e retirar do c√≥digo e √© mais f√°cil para um leitor identificar que uma transforma√ß√£o foi feita na vari√°vel plotada.\nOutro exemplo: que tal exarminarmos a rela√ß√£o entre a idade e a renda declarada? Primeiro, √© preciso construir um sum√°rio, parecido com o primeiro:\nrincome_summary \u0026lt;- gss_cat %\u0026gt;%\rgroup_by(rincome) %\u0026gt;%\rsummarise(\rage = mean(age, na.rm = TRUE),\rtvhours = mean(tvhours, na.rm = TRUE),\rn = n()\r)\rrincome_summary %\u0026gt;% mutate(rincome = fct_reorder(rincome, age)) %\u0026gt;% ggplot(aes(age, rincome)) + geom_point()\r Aqui, o reordenamento das vari√°veis de acordo com a idade n√£o faz muito sentido, porque os n√≠veis de renda tem uma ordem pr√≥pria. Nesse caso, n√£o √© recomendado utilizar fct_reorder.\nrincome_summary %\u0026gt;% ggplot(aes(age, rincome)) + geom_point()\r S√≥ que ao plotar, notamos um problema: a categoria ‚ÄúNot applicable‚Äù ficou primeiro e isso desorganiza visualmente nosso gr√°fico. Sem problema! Utilizamos fct_relevel para modificar a ordem de uma vari√°vel arbitrariamente. O padr√£o √© colocar pro come√ßo (Parecido com o comportamento de stats::relevel), mas voc√™ pode especificar outra posi√ß√£o.\nrincome_summary %\u0026gt;% mutate(rincome = fct_relevel(rincome, \u0026quot;Not applicable\u0026quot;)) %\u0026gt;% ggplot(aes(age, rincome)) + geom_point()\r Notem como nos exemplos acima, o uso do %\u0026gt;% nos permite alterar partes do nosso c√≥digo de maneira interativa para chegar no resultado desejado.\nOutro tipo de mudan√ßa de ordem interessante ocorre quando temos uma terceira ‚Äúdimens√£o‚Äù no nosso gr√°fico. Em geral, utilizamos cores, formas ou linhas quebradas para diferenciar entre categorias e gostar√≠amos que a nossa legenda acompanhasse a tend√™ncia do gr√°fico. Compare:\nby_age \u0026lt;- gss_cat %\u0026gt;%\rfilter(!is.na(age)) %\u0026gt;%\rcount(age, marital) %\u0026gt;%\rgroup_by(age) %\u0026gt;%\rmutate(prop = n / sum(n))\r# Sem altera√ß√£o na ordem\rby_age %\u0026gt;% ggplot(aes(age, prop, colour = marital)) +\rgeom_line(na.rm = TRUE)\r # Com altera√ß√£o na ordem\rggplot(by_age, aes(age, prop, colour = fct_reorder2(marital, age, prop))) +\rgeom_line() +\rlabs(colour = \u0026quot;marital\u0026quot;)\r No caso de fct_reorder2, √© melhor fazer a altera√ß√£o de ordem dentro da fun√ß√£o gr√°fica, pois dentro uma invoca√ß√£o de mutate, ela n√£o funcionou durante meus testes.\nPor √∫ltimo, podemos querer ordenar um gr√°fico de barras de acordo com a frequ√™ncia das categorias, o que podemos fazer com fct_infreq e fct_rev (opcional).\ngss_cat %\u0026gt;%\rmutate(marital = marital %\u0026gt;% fct_infreq()) %\u0026gt;%\rggplot(aes(marital)) +\rgeom_bar()\r # OU\rgss_cat %\u0026gt;%\rmutate(marital = marital %\u0026gt;% fct_infreq() %\u0026gt;% fct_rev()) %\u0026gt;%\rggplot(aes(marital)) +\rgeom_bar()\r Notem o uso do pipe na hora de modificar a vari√°vel ‚Äúmarital.‚Äù\nModificando os n√≠veis O outro tipo de opera√ß√£o bastante comum √© a altera√ß√£o nos n√≠ves do fator. Em geral, queremos que os nossos n√≠veis sejam representativos das nossas categorias de an√°lise, sejam de f√°cil leitura e entendimento e contenham um n√∫mero significativo de observa√ß√µes. Por essa raz√£o, frequentemente precisamos alterar os r√≥tulos, agrupar categorias, etc.\nVejamos o exemplo da vari√°vel partyid, que registra a identifica√ß√£o do entrevistado com os partidos pol√≠ticos dos EUA.\ngss_cat %\u0026gt;% count(partyid)\r ## # A tibble: 10 x 2\r## partyid n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 No answer 154\r## 2 Don't know 1\r## 3 Other party 393\r## 4 Strong republican 2314\r## 5 Not str republican 3032\r## 6 Ind,near rep 1791\r## 7 Independent 4119\r## 8 Ind,near dem 2499\r## 9 Not str democrat 3690\r## 10 Strong democrat 3490\r Vamos supor que, por qualquer motivo, essa forma de representa√ß√£o das categorias n√£o nos satisfaz. Vejamos algumas das ferramentas que podemos utilizar para modificar esse fator.\nPodemos, simplesmente, reescrever essas categorias de forma mais completa:\ngss_cat %\u0026gt;% mutate(partyid = fct_recode(partyid,\r\u0026quot;Republicano, forte\u0026quot; = \u0026quot;Strong republican\u0026quot;,\r\u0026quot;Republicano, fraco\u0026quot; = \u0026quot;Not str republican\u0026quot;,\r\u0026quot;Independente, pr√≥x. repub.\u0026quot; = \u0026quot;Ind,near rep\u0026quot;,\r\u0026quot;Independente, pr√≥x. democ.\u0026quot; = \u0026quot;Ind,near dem\u0026quot;,\r\u0026quot;Independente\u0026quot; = \u0026quot;Independent\u0026quot;,\r\u0026quot;Democrata, forte\u0026quot; = \u0026quot;Strong democrat\u0026quot;,\r\u0026quot;Democrata, fraco\u0026quot; = \u0026quot;Not str democrat\u0026quot;,\r\u0026quot;Outro partido\u0026quot; = \u0026quot;Other party\u0026quot;,\r\u0026quot;N√£o sei\u0026quot; = \u0026quot;Don't know\u0026quot;,\r\u0026quot;Sem resposta\u0026quot; = \u0026quot;No answer\u0026quot;\r)) %\u0026gt;% count(partyid)\r ## # A tibble: 10 x 2\r## partyid n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 Sem resposta 154\r## 2 N√£o sei 1\r## 3 Outro partido 393\r## 4 Republicano, forte 2314\r## 5 Republicano, fraco 3032\r## 6 Independente, pr√≥x. repub. 1791\r## 7 Independente 4119\r## 8 Independente, pr√≥x. democ. 2499\r## 9 Democrata, fraco 3690\r## 10 Democrata, forte 3490\r A fun√ß√£o utilizada √© fct_recode e ela √© a mais gen√©rica e flex√≠vel de todas, por√©m, exige que cada n√≠vel seja modificado individualmente. Dentro dela, √© poss√≠vel agrupar v√°rios n√≠veis associando v√°rios n√≠veis antigos a um mesmo n√≠vel novo. Veja o exemplo:\ngss_cat %\u0026gt;% mutate(partyid = fct_recode(partyid,\r\u0026quot;Republicano, forte\u0026quot; = \u0026quot;Strong republican\u0026quot;,\r\u0026quot;Republicano, fraco\u0026quot; = \u0026quot;Not str republican\u0026quot;,\r\u0026quot;Independente, pr√≥x. repub.\u0026quot; = \u0026quot;Ind,near rep\u0026quot;,\r\u0026quot;Independente, pr√≥x. democ.\u0026quot; = \u0026quot;Ind,near dem\u0026quot;,\r\u0026quot;Independente\u0026quot; = \u0026quot;Independent\u0026quot;,\r\u0026quot;Democrata, forte\u0026quot; = \u0026quot;Strong democrat\u0026quot;,\r\u0026quot;Democrata, fraco\u0026quot; = \u0026quot;Not str democrat\u0026quot;,\r# Note o nome\r\u0026quot;Outro\u0026quot; = \u0026quot;Other party\u0026quot;,\r\u0026quot;Outro\u0026quot; = \u0026quot;Don't know\u0026quot;,\r\u0026quot;Outro\u0026quot; = \u0026quot;No answer\u0026quot;\r)) %\u0026gt;% count(partyid)\r ## # A tibble: 8 x 2\r## partyid n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 Outro 548\r## 2 Republicano, forte 2314\r## 3 Republicano, fraco 3032\r## 4 Independente, pr√≥x. repub. 1791\r## 5 Independente 4119\r## 6 Independente, pr√≥x. democ. 2499\r## 7 Democrata, fraco 3690\r## 8 Democrata, forte 3490\r Se voc√™ quiser recategorizar um fator que tem muitos n√≠veis para um menor, com poucos n√≠veis, utilize fct_collapse:\ngss_cat %\u0026gt;%\rmutate(partyid = fct_collapse(partyid,\rOutro = c(\u0026quot;No answer\u0026quot;, \u0026quot;Don't know\u0026quot;, \u0026quot;Other party\u0026quot;),\rRepublicano = c(\u0026quot;Strong republican\u0026quot;, \u0026quot;Not str republican\u0026quot;),\rIndependente = c(\u0026quot;Ind,near rep\u0026quot;, \u0026quot;Independent\u0026quot;, \u0026quot;Ind,near dem\u0026quot;),\rDemocrata = c(\u0026quot;Not str democrat\u0026quot;, \u0026quot;Strong democrat\u0026quot;)\r)) %\u0026gt;%\rcount(partyid)\r ## # A tibble: 4 x 2\r## partyid n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 Outro 548\r## 2 Republicano 5346\r## 3 Independente 8409\r## 4 Democrata 7180\r Repare que do lado esquerdo, nos valores novos, n√£o foi necess√°rio usar aspas. √â preciso cuidado com essa caracter√≠stica dos verbos do tidyverse. Ela se chama ‚Äútidy evaluation‚Äù e est√° um pouco fora do escopo do curso. Basicamente, se rolar d√∫vida ou der erros, se for usar acentos ou algum caractere diferente, use aspas.\ngss_cat %\u0026gt;%\rmutate(partyid = fct_collapse(partyid,\r\u0026quot;Outro\u0026quot; = c(\u0026quot;No answer\u0026quot;, \u0026quot;Don't know\u0026quot;, \u0026quot;Other party\u0026quot;),\r\u0026quot;Republicano\u0026quot; = c(\u0026quot;Strong republican\u0026quot;, \u0026quot;Not str republican\u0026quot;),\r\u0026quot;Independente\u0026quot; = c(\u0026quot;Ind,near rep\u0026quot;, \u0026quot;Independent\u0026quot;, \u0026quot;Ind,near dem\u0026quot;),\r\u0026quot;Democrata\u0026quot; = c(\u0026quot;Not str democrat\u0026quot;, \u0026quot;Strong democrat\u0026quot;)\r)) %\u0026gt;%\rcount(partyid)\r ## # A tibble: 4 x 2\r## partyid n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 Outro 548\r## 2 Republicano 5346\r## 3 Independente 8409\r## 4 Democrata 7180\r Outro tipo de mudan√ßa importante no n√∫mero de n√≠veis √© agrupar os n√≠veis menos frequentes, por exemplo, para produzir uma visualiza√ß√£o que d√™ maior destaque aos n√≠veis mais frequentes. Esse √© o trabalho de fct_lump.\ngss_cat %\u0026gt;% mutate(relig = fct_lump(relig, n = 5)) %\u0026gt;% count(relig)\r ## # A tibble: 6 x 2\r## relig n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 Christian 689\r## 2 None 3523\r## 3 Jewish 388\r## 4 Catholic 5124\r## 5 Protestant 10846\r## 6 Other 913\r Note que usando o argumento n eu indico quantos n√≠veis eu quero. No caso, escolhi os 5 n√≠veis mais frequentes e todos os outros s√£o autom√°ticamente agrupados na categoria ‚ÄúOther.‚Äù Posso mudar esse nome tamb√©m:\ngss_cat %\u0026gt;% mutate(relig = fct_lump(relig, n = 5, other_level = \u0026quot;Outros\u0026quot;)) %\u0026gt;% count(relig)\r ## # A tibble: 6 x 2\r## relig n\r## \u0026lt;fct\u0026gt; \u0026lt;int\u0026gt;\r## 1 Christian 689\r## 2 None 3523\r## 3 Jewish 388\r## 4 Catholic 5124\r## 5 Protestant 10846\r## 6 Outros 913\r Exerc√≠cios   Encontre os v√¥os que:\n Atrasaram mais de duas horas Com destino a Houston (IAH ou HOU) Operados pela United, American ou Delta Decolaram entre julho e setembro Chegaram com mais de duas horas de atraso, mas n√£o decolaram com atraso Atrasaram mais de uma hora para decolar, mas recuperaram mais de 30 minutos durante o voo Decolaram entre a meia-noite e 6 da manh√£ (inclusive)    Reordene suas colunas para encontrar os voos mais r√°pidos (maior velocidade de voo).\n  Teste v√°rias maneiras diferentes de selecionar as vari√°veis dep_time, dep_delay, arr_time e arr_delay usando as v√°rias helper functions de select.\n  As vari√°veis dep_time e sched_dep_time est√£o num formato incorreto (veja ?flights). Converta-as com mutate para um valor em minutos passados desde a meia-noite. Dica: utilize %/% e %%.\n  O que o c√≥digo abaixo est√° fazendo? Porque mesmo ap√≥s o c√≥digo abaixo continuam existindo diferen√ßas entre os valores das vari√°veis air_time e travel_time?\n  flights %\u0026gt;% select(air_time, dep_time, arr_time, dep_delay, arr_delay) %\u0026gt;% mutate(dep_hour = dep_time %/% 100,\rdep_min = dep_time %% 100,\rdep_time2 = dep_hour * 60 + dep_min,\rarr_hour = arr_time %/% 100,\rarr_min = arr_time %% 100,\rarr_time2 = arr_hour * 60 + arr_min,\rtravel_time = arr_time2 - dep_time2) %\u0026gt;% select(-dep_hour, -dep_min, -arr_hour, -arr_min)\r ## # A tibble: 336,776 x 8\r## air_time dep_time arr_time dep_delay arr_delay dep_time2 arr_time2\r## \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 227 517 830 2 11 317 510\r## 2 227 533 850 4 20 333 530\r## 3 160 542 923 2 33 342 563\r## 4 183 544 1004 -1 -18 344 604\r## 5 116 554 812 -6 -25 354 492\r## 6 150 554 740 -4 12 354 460\r## 7 158 555 913 -5 19 355 553\r## 8 53 557 709 -3 -14 357 429\r## 9 140 557 838 -3 -8 357 518\r## 10 138 558 753 -2 8 358 473\r## # ... with 336,766 more rows, and 1 more variable: travel_time \u0026lt;dbl\u0026gt;\r Use o stringr para concatenar as seguintes strings em uma frase  x \u0026lt;- \u0026quot;.\u0026quot;\ry \u0026lt;- \u0026quot;feliz\u0026quot;\rw \u0026lt;- \u0026quot;acordei\u0026quot;\rz \u0026lt;- \u0026quot;hoje\u0026quot;\r Corrija as inconsist√™ncias nas colunas pa√≠s, primeiro_nome, segundo_nome e crie uma nova coluna nomes contendo as duas anteriores. No final, ordene o banco em ordem alfab√©tica.  df \u0026lt;- tibble::tribble(\r~pais, ~primeiro_nome, ~segundo_nome,\r# -------|----------------|-------------|\r\u0026quot;BRASIL\u0026quot;, \u0026quot;ISABELA\u0026quot;, \u0026quot;MARTINS\u0026quot;,\r\u0026quot;Brasil\u0026quot;, \u0026quot;Eduardo\u0026quot;, \u0026quot;cabellos\u0026quot;,\r\u0026quot;brasil\u0026quot;, \u0026quot;m√°rcia\u0026quot;, \u0026quot;pinto\u0026quot;,\r\u0026quot;bRaSiL\u0026quot;, \u0026quot;rog√©rio\u0026quot;, \u0026quot;Marinho\u0026quot;,\r)\r Transforme a string c(\u0026quot;Seu nome\u0026quot;, \u0026quot;Seu sobrenome da m√£e\u0026quot;, \u0026quot;Seu sobrenome do pai\u0026quot;) na string \u0026quot;SEU SOBRENOME DO PAI, sua inicial do nome. sua inicial da m√£e.\u0026quot;, como numa cita√ß√£o. Veja o exemplo abaixo:  # Transforme\rc(\u0026quot;Vin√≠cius\u0026quot;, \u0026quot;de Souza\u0026quot;, \u0026quot;Maia\u0026quot;)\r ## [1] \u0026quot;Vin√≠cius\u0026quot; \u0026quot;de Souza\u0026quot; \u0026quot;Maia\u0026quot;\r # Resultado\r\u0026quot;MAIA, V. S.\u0026quot;\r ## [1] \u0026quot;MAIA, V. S.\u0026quot;\r DESAFIO: Nos microdados da √°rea de sa√∫de, √© comum que a vari√°vel idade esteja registrada da seguinte forma: ‚Äú150,‚Äù ‚Äú219,‚Äù ‚Äú312,‚Äù ‚Äú471.‚Äù Esses c√≥digos indicam primeiro qual a unidade de medida da idade e segundo o valor desta unidade, 1 = horas, 2 = dias, 3 = meses, 4 = anos. Proponha um c√≥digo usando stringr para transformar o vetor abaixo em um valor num√©rico.  # N√£o precisa se preocupar com essa parte\rx \u0026lt;- as.character(round(c(\rrunif(25, 100, 124),\rrunif(25, 201, 230),\rrunif(25, 301, 312),\rrunif(25, 401, 499)\r)))\r# Como voc√™ transformaria esse vetor em n√∫mero?\rx\r ## [1] \u0026quot;116\u0026quot; \u0026quot;117\u0026quot; \u0026quot;119\u0026quot; \u0026quot;124\u0026quot; \u0026quot;116\u0026quot; \u0026quot;123\u0026quot; \u0026quot;109\u0026quot; \u0026quot;104\u0026quot; \u0026quot;114\u0026quot; \u0026quot;107\u0026quot; \u0026quot;115\u0026quot; \u0026quot;118\u0026quot;\r## [13] \u0026quot;103\u0026quot; \u0026quot;120\u0026quot; \u0026quot;107\u0026quot; \u0026quot;106\u0026quot; \u0026quot;119\u0026quot; \u0026quot;102\u0026quot; \u0026quot;122\u0026quot; \u0026quot;109\u0026quot; \u0026quot;105\u0026quot; \u0026quot;112\u0026quot; \u0026quot;120\u0026quot; \u0026quot;105\u0026quot;\r## [25] \u0026quot;110\u0026quot; \u0026quot;217\u0026quot; \u0026quot;217\u0026quot; \u0026quot;205\u0026quot; \u0026quot;223\u0026quot; \u0026quot;221\u0026quot; \u0026quot;202\u0026quot; \u0026quot;226\u0026quot; \u0026quot;211\u0026quot; \u0026quot;226\u0026quot; \u0026quot;227\u0026quot; \u0026quot;225\u0026quot;\r## [37] \u0026quot;219\u0026quot; \u0026quot;227\u0026quot; \u0026quot;205\u0026quot; \u0026quot;228\u0026quot; \u0026quot;230\u0026quot; \u0026quot;204\u0026quot; \u0026quot;202\u0026quot; \u0026quot;216\u0026quot; \u0026quot;229\u0026quot; \u0026quot;211\u0026quot; \u0026quot;214\u0026quot; \u0026quot;230\u0026quot;\r## [49] \u0026quot;213\u0026quot; \u0026quot;219\u0026quot; \u0026quot;309\u0026quot; \u0026quot;311\u0026quot; \u0026quot;309\u0026quot; \u0026quot;307\u0026quot; \u0026quot;308\u0026quot; \u0026quot;309\u0026quot; \u0026quot;309\u0026quot; \u0026quot;306\u0026quot; \u0026quot;306\u0026quot; \u0026quot;308\u0026quot;\r## [61] \u0026quot;307\u0026quot; \u0026quot;312\u0026quot; \u0026quot;311\u0026quot; \u0026quot;302\u0026quot; \u0026quot;305\u0026quot; \u0026quot;301\u0026quot; \u0026quot;303\u0026quot; \u0026quot;306\u0026quot; \u0026quot;309\u0026quot; \u0026quot;309\u0026quot; \u0026quot;302\u0026quot; \u0026quot;306\u0026quot;\r## [73] \u0026quot;308\u0026quot; \u0026quot;304\u0026quot; \u0026quot;311\u0026quot; \u0026quot;482\u0026quot; \u0026quot;443\u0026quot; \u0026quot;403\u0026quot; \u0026quot;416\u0026quot; \u0026quot;499\u0026quot; \u0026quot;454\u0026quot; \u0026quot;409\u0026quot; \u0026quot;425\u0026quot; \u0026quot;406\u0026quot;\r## [85] \u0026quot;498\u0026quot; \u0026quot;426\u0026quot; \u0026quot;465\u0026quot; \u0026quot;418\u0026quot; \u0026quot;485\u0026quot; \u0026quot;428\u0026quot; \u0026quot;464\u0026quot; \u0026quot;419\u0026quot; \u0026quot;422\u0026quot; \u0026quot;472\u0026quot; \u0026quot;434\u0026quot; \u0026quot;493\u0026quot;\r## [97] \u0026quot;411\u0026quot; \u0026quot;405\u0026quot; \u0026quot;459\u0026quot; \u0026quot;478\u0026quot;\r  Explore as contagens da vari√°vel rincome em gss_cat, ela ficaria bem representada num gr√°fico? De qual tipo?\n  Qual a religi√£o mais comum em gss_cat? Qual o partido (partyid) mais popular?\n  A que religi√£o se refere a vari√°vel denom? Voc√™ pode descobrir isso fazendo uma tabela de contagens?\n  Como voc√™ poderia diminuir o n√∫mero de categorias da vari√°vel rincome do banco gss_cat?\n  ","date":1621728000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1621728000,"objectID":"fa0304036676bc16efc6e61759597fd7","permalink":"https://laddem.github.io/courses/tidyverse/dia2/","publishdate":"2021-05-23T00:00:00Z","relpermalink":"/courses/tidyverse/dia2/","section":"courses","summary":"Opera√ß√µes em vari√°veis e bancos de dados Hoje vamos apresentar dois pacotes com finalidades mais espec√≠ficas para trabalhar com vari√°veis de tipo caractere e fator e um pacote super importante para as opera√ß√µes com bancos de dados.","tags":null,"title":"stringr, forcats e dplyr","type":"book"},{"authors":null,"categories":null,"content":"O pacote ggplot2 e a \u0026ldquo;gram√°tica dos gr√°ficos\u0026rdquo; Ainda me lembro da primeira vez que li o terceiro cap√≠tulo de R for Data Science em que o conceito de visualiza√ß√£o de dados √© apresentado junto com a ideia de data.frame e o c√≥digo utilizado para gerar o gr√°fico. Acho que se o termo sobrecarga infromacional n√£o existisse, eu teria inventado ele na hora.\nAnedotas a parte, n√£o √© culpa do autor. O livro pressup√µe um certo conhecimento pr√©vio que eu n√£o tinha quando o li pela primeira vez. Imagino que a maioria de voc√™s j√° viu gr√°ficos na vida e at√© construiu um ou dois deles usando esse ou outros softwares estat√≠sticos. O que talvez nem todos tenham claro na mente √© que os gr√°ficos s√£o uma codifica√ß√£o num sistema de coordenadas das informa√ß√µes presentes em um banco de dados atrav√©s de escalas. Vamos destrinchar um pouco melhor isso:\nSuponha que voc√™ tenha o banco de dados mpg, presente na biblioteca ggplot2.\nlibrary(ggplot2)\rmpg\r ## # A tibble: 234 x 11\r## manufacturer model displ year cyl trans drv cty hwy fl class\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 audi a4 1.8 1999 4 auto(l~ f 18 29 p comp~\r## 2 audi a4 1.8 1999 4 manual~ f 21 29 p comp~\r## 3 audi a4 2 2008 4 manual~ f 20 31 p comp~\r## 4 audi a4 2 2008 4 auto(a~ f 21 30 p comp~\r## 5 audi a4 2.8 1999 6 auto(l~ f 16 26 p comp~\r## 6 audi a4 2.8 1999 6 manual~ f 18 26 p comp~\r## 7 audi a4 3.1 2008 6 auto(a~ f 18 27 p comp~\r## 8 audi a4 quat~ 1.8 1999 4 manual~ 4 18 26 p comp~\r## 9 audi a4 quat~ 1.8 1999 4 auto(l~ 4 16 25 p comp~\r## 10 audi a4 quat~ 2 2008 4 manual~ 4 20 28 p comp~\r## # ... with 224 more rows\r De posse desse banco, voc√™ gostaria de construir um gr√°fico relacionando a efici√™ncia do combust√≠vel de um carro (hwy) com o seu peso (displ). S√°bio e malandro no ggplot2, voc√™ escreve o c√≥digo a seguir:\nggplot(mpg, aes(displ,hwy, color = class)) +\rgeom_point()\r Mas fica a d√∫vida: que escolhas foram feitas no momento de traduzir a minha inten√ß√£o de produzir um diagrama de dispers√£o (scatterplot) do peso com o consumo de gasolina para a representa√ß√£o gr√°fica diante de n√≥s? Que unidades de medidas est√£o dispostas nos eixos X e Y? Qual o sistema de coordenadas no qual isto foi representado? Quem define os limites de in√≠cio e fim de cada eixo? Como cada ponto recebeu a sua cor? Essas perguntas podem parecer √≥bvias ou tontas, dependendo da perspectiva e da experi√™ncia do usu√°rio, mas elas s√£o centrais para entender como construir e modificar gr√°ficos no ggplot2.\nO pacote √© inspirado pela Gram√°tica dos Gr√°ficos, e procura decompor o processo de produ√ß√£o de gr√°ficos em uma sequ√™ncia de camadas que v√£o se sobrepondo at√© chegar no objeto desejado.\n a camada dos dados e do mapeamento est√©tico (que vari√°veis v√£o em quais eixos/escalas) a camada dos objetos geom√©tricos (pontos, linhas, barras, etc.) a camada das escalas (natural? logar√≠tmica? escala de cores?) a camada das facetas (mini gr√°ficos separados por alguma caracter√≠stica) a camada das transforma√ß√µes estat√≠sticas (distribui√ß√µes de probabilidade, contagens, propor√ß√µes, etc.) o sistema de coordenadas (cartesiano? polar?)  Obviamente, nem todo gr√°fico possui essa complexidade, e na verdade, a maioria dos gr√°ficos que fazemos se encaixa num pequeno subgrupo de todas essas especifica√ß√µes, ent√£o porque toda essa complexidade?\nPorque n√£o? Em primeiro lugar, se voc√™ est√° produzindo visualiza√ß√µes simples que cumprem seu prop√≥sito, voc√™ n√£o precisa se preocupar com quase nada disso, os padr√µes do ggplot2, via de regra, se encaixam perfeitamente na maioria dos problemas e, em segundo lugar, se voc√™ sentir a necessidade de ir mais fundo e produzir visualiza√ß√µes mais complexas, as mesmas ferramentas que voc√™ j√° conhece est√£o a sua disposi√ß√£o.\nTr√™s gr√°ficos para entender a mec√¢nica do ggplot2 Scatterplots Voltemos para o nosso gr√°fico original, vamos decomp√¥-lo em suas camadas como se estiv√©ssemos construindo ele passo-a-passo:\n# Primeiro, a camada dos dados e mapeamentos est√©ticos\rggplot(\r# Dados\rdata = mpg,\r# Que vari√°vel vai em que eixo\rmapping = aes(x = displ, y = hwy)\r)\r Examinando a sa√≠da, vemos que ggplot desenhou um canvas com nossas vari√°veis, mas ainda nenhum objeto geom√©trico. Tudo bem, adicionamos (+) uma camada de objetos geom√©tricos, no caso, pontos.\n# Objetos geom√©tricos come√ßam com \u0026quot;geom_\u0026quot;\rggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + # adicionamos\rgeom_point()\r Agora, nosso gr√°fico j√° tem uma cara de diagrama de dispers√£o. Mas ainda n√£o tem as cores das classes de autom√≥vel. Tudo bem, voltamos para a primeira camada e informamos que queremos um terceiro mapeamento est√©tico.\n# A cor √© mapeada a vari√°vel class\rggplot(data = mpg, mapping = aes(\rx = displ, y = hwy,\rcolor = class) # novo mapeamento est√©tico\r) + # adicionamos\rgeom_point()\r Ok, chegamos no gr√°fico original. Mas como podem entender melhor as outras camadas? Vamos pensar, por exemplo, que talvez queiramos trabalhar a vari√°vel hwy numa escala logar√≠tmica. Poder√≠amos transformar a vari√°vel original, claro, mas o ggplot2 nos permite especificar as transforma√ß√µes diretamente nas escalas do gr√°fico!\nggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +\rgeom_point() + # adicionando uma nova \u0026quot;camada\u0026quot;\rscale_y_continuous(trans = \u0026quot;log\u0026quot;)\r Mas voc√™, leitor, n√£o ficou satisfeito. Voc√™ queria era transformar a vari√°vel displ em ra√≠z quadrada. Tudo bem:\nggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +\rgeom_point() +\rscale_x_continuous(trans = \u0026quot;sqrt\u0026quot;) # especificamos a transforma√ß√£o na escala de x\r Outro leitor n√£o estava interessado nas escalas dos eixos x ou y, que s√£o cont√≠nuas nesse caso, mas sim na sele√ß√£o de cores utilizadas para representar a escala das cores. Por ser um leitor conhecedor das formas de defici√™ncia visual crom√°tica, ele optou pelas paletas de cores do Colorbrewer:\nggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +\rgeom_point() +\rscale_color_brewer(palette = \u0026quot;Set1\u0026quot;) # transforma√ß√£o da escala de cores\r Um ge√≥grafo entrou na conversa e disse que o sistema cartesiano de coordenadas estava iludindo os leitores a pensar que a rela√ß√£o entre peso e consumo de combust√≠vel estava distorcida pelas diferen√ßas entre as unidades de medida das vari√°veis, produzida pelo sistema cartesiano de coordenadas, ent√£o ele sugeriu que us√°ssemos um sistema de coordenadas fixas:\nggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +\rgeom_point() +\rscale_color_brewer(palette = \u0026quot;Set1\u0026quot;) +\rcoord_fixed()\r Ficou horr√≠vel, esse ge√≥grafo n√£o sabe nada. Como recompensa pela sua ignor√¢ncia, agora ele ocupa um cargo no primeiro escal√£o do Minist√©rio da Sa√∫de.\nOutro pesquisador estava interessado em visualizar as rela√ß√µes entre consumo, peso e classe, mas levando em considera√ß√£o o fabricante do ve√≠culo, ent√£o, ele sugeriu que constru√≠ssemos um gr√°fico para cada. Voc√™, que √© pregui√ßoso, usou a capacidade do ggplot2 de dividir gr√°ficos atrav√©s da introdu√ß√£o de uma camada de facets.\nggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +\rgeom_point() +\rscale_color_brewer(palette = \u0026quot;Set1\u0026quot;) + # adicionamos mais uma camada\rfacet_wrap(~manufacturer) # de facetas\r Agora, muito satisfeitos com o resultado do nosso trabalho, resolvemos incluir o gr√°fico numa publica√ß√£o, mas do jeito que est√°, n√£o d√°. Ent√£o adicionamos mais algumas camadas para torn√°-lo apresent√°vel.\nggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +\rgeom_point() +\rscale_color_brewer(palette = \u0026quot;Set1\u0026quot;) + facet_wrap(~manufacturer) +\r# Colocamos os nomes nos eixos\rlabs(title = \u0026quot;Rela√ß√£o entre peso e economia de combust√≠vel de autom√≥veis\u0026quot;,\rsubtitle = \u0026quot;Separado por categoria e fabricante\u0026quot;,\rx = \u0026quot;Peso do ve√≠culo em toneladas\u0026quot;,\ry = \u0026quot;Consumo em milhas por gal√£o de 3,5l\u0026quot;,\rcolor = \u0026quot;Categoria\u0026quot;,\rcaption = \u0026quot;Fonte: Ag√™ncia de Prote√ß√£o Ambiental Estadunidense.\u0026quot;) +\r# Escolhemos um tema bonito\rtheme_light() +\r# Mudamos a posi√ß√£o da legenda, pra ficar mais jeitozinho\rtheme(legend.position = \u0026quot;bottom\u0026quot;)\r Pronto. Mam√£e vai ficar orgulhosa.\nBrincadeiras a parte, entendendo um pouco melhor a gram√°tica do gr√°fico, podemos construir nossas visualiza√ß√µes passo a passo, at√© chegar no resultado desejado.\nLineplots O segundo exemplo que quero mostrar pra voc√™s √© a constru√ß√£o de gr√°ficos com linhas. Eles s√£o interessantes porque d√£o bastante dor de cabe√ßa pra quem est√° come√ßando. Vamos continuar brincando com o mpg.\nAgora que eu fiz meu diagrama de dispers√£o, estou interessado em come√ßar um processo de modelagem, mas primeiro quero ter uma no√ß√£o visual da rela√ß√£o entre as vari√°veis.\nggplot(mpg, aes(displ, hwy)) +\rgeom_point() +\rgeom_smooth()\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r geom_smooth ajusta um modelo aos dados e desenha a linha com os valores preditos. Agora que temos dois objetos geom√©tricos, talvez seja interessante ver o que acontece se eu colocar as cores das classes.\nggplot(mpg, aes(displ, hwy, color = class)) +\rgeom_point() +\rgeom_smooth(se = FALSE)\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r Veja que ele fez o poss√≠vel para aplicar as escalas nos dois objetos geom√©tricos. Eu pedi para geom_smooth tirar os intervalos de confian√ßa para melhorar a visibilidade. Mas e seu eu quisesse ver a cor dos pontos, mas manter a linha de tend√™ncia geral? Voc√™ pode especificar mapeamentos est√©ticos gerais (na primeira camada) ou mapeamentos est√©ticos locais (dentro de cada camada geom√©trica).\nggplot(mpg, aes(displ, hwy)) + # mapeamentos gerais, se aplicam a todos os objetos\rgeom_point(aes(color = class)) + # mapeamento local, s√≥ se aplica aqui\rgeom_smooth(se = FALSE)\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r Ok, mas e se eu quisesse um modelo linear ao inv√©s de um \u0026ldquo;Smoother de Loess\u0026rdquo;?\nggplot(mpg, aes(displ, hwy)) + geom_point(aes(color = class)) +\rgeom_smooth(method = lm)\r ## `geom_smooth()` using formula 'y ~ x'\r N√£o vou entrar muito nos argumentos de cada objeto geom√©trico e fun√ß√£o, voc√™s podem aprender isso na pr√°tica olhando a documenta√ß√£o das fun√ß√µes que s√£o do interesse de voc√™s. ?geom_smooth para ver todas as possibilidades. Uma dica boa √© usar geom_smooth para verificar intera√ß√µes entre vari√°veis num√©ricas e fatores.\nggplot(mpg, aes(displ, hwy, color = factor(cyl))) + geom_point() +\rgeom_smooth(method = lm)\r ## `geom_smooth()` using formula 'y ~ x'\r Ok, mas e se temos um gr√°fico de linhas mais tradicional, tipo uma s√©rie hist√≥rica?\neconomics\r ## # A tibble: 574 x 6\r## date pce pop psavert uempmed unemploy\r## \u0026lt;date\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1967-07-01 507. 198712 12.6 4.5 2944\r## 2 1967-08-01 510. 198911 12.6 4.7 2945\r## 3 1967-09-01 516. 199113 11.9 4.6 2958\r## 4 1967-10-01 512. 199311 12.9 4.9 3143\r## 5 1967-11-01 517. 199498 12.8 4.7 3066\r## 6 1967-12-01 525. 199657 11.8 4.8 3018\r## 7 1968-01-01 531. 199808 11.7 5.1 2878\r## 8 1968-02-01 534. 199920 12.3 4.5 3001\r## 9 1968-03-01 544. 200056 11.7 4.1 2877\r## 10 1968-04-01 544 200208 12.3 4.6 2709\r## # ... with 564 more rows\r Podemos criar um gr√°fico de linhas tendo como base a data (date) e alguma das vari√°veis registradas, como a taxa de desemprego.\nggplot(economics, aes(x = date, y = uempmed)) +\rgeom_line()\r Ou o consumo em bilh√µes de d√≥lares\nggplot(economics, aes(x = date, y = pce)) +\rgeom_line()\r Ou a popula√ß√£o\nggplot(economics, aes(x = date, y = pop)) +\rgeom_line()\r Ok, mas eu quero comparar visualmente o que ocorre com uma vari√°vel quando a outra muda. Podemos recorrer ao que aprendemos sobre mapeamentos est√©ticos globais e locais.\nggplot(economics, aes(x = date)) +\rgeom_line(aes(y = uempmed)) +\rgeom_line(aes(y = pce)) +\rgeom_line(aes(y = pop))\r Ficou meio ruim, porque as vari√°vel tem grandezas distintas. Podemos tentar resolver esse problema aplicando transforma√ß√µes na vari√°vel idade, mas meio que pra qualquer lugar onde caminhos, batemos numa parede ou noutra. Esse tipo de solu√ß√£o √© muito frequente entre pessoas que vem do base pro ggplot2, porque no base estamos acostumado a ideia de adicionar mais objetos geom√©tricos ao nosso gr√°fico original adicionando invoca√ß√µes √† fun√ß√µes como lines ou text. Por√©m, a solu√ß√£o preferida no tidyverse √© aplicar uma transforma√ß√£o no banco original de tal forma que as nossas vari√°veis num√©ricas caiam todas num par que especifica o nome da vari√°vel | e o valor dela.\nlibrary(tidyr)\reconomics %\u0026gt;% pivot_longer(cols = -date,\rnames_to = \u0026quot;variavel\u0026quot;,\rvalues_to = \u0026quot;valor\u0026quot;)\r ## # A tibble: 2,870 x 3\r## date variavel valor\r## \u0026lt;date\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1967-07-01 pce 507. ## 2 1967-07-01 pop 198712 ## 3 1967-07-01 psavert 12.6\r## 4 1967-07-01 uempmed 4.5\r## 5 1967-07-01 unemploy 2944 ## 6 1967-08-01 pce 510. ## 7 1967-08-01 pop 198911 ## 8 1967-08-01 psavert 12.6\r## 9 1967-08-01 uempmed 4.7\r## 10 1967-08-01 unemploy 2945 ## # ... with 2,860 more rows\r Talvez n√£o fique imediatamente claro para todos porque eu optei por esta solu√ß√£o, mas talvez essa pr√≥xima figura fale mais que mil palavras.\neconomics %\u0026gt;% pivot_longer(cols = -date,\rnames_to = \u0026quot;variavel\u0026quot;,\rvalues_to = \u0026quot;valor\u0026quot;) %\u0026gt;% ggplot(aes(date, valor)) +\rgeom_line() +\rfacet_wrap(~variavel, scales = \u0026quot;free_y\u0026quot;, ncol = 1)\r A √™nfase em usar tidy data no tidyverse decorre do fato de que todos os pacotes s√£o programados para usar a forma de organiza√ß√£o do banco como uma alavanca para facilitar a an√°lise de dados. Vejam esta outra pipeline.\n# Como vamos fazer algumas transforma√ß√µes nos dados, vamos carregar o dplyr aqui\rlibrary(dplyr)\r ## ## Attaching package: 'dplyr'\r ## The following objects are masked from 'package:stats':\r## ## filter, lag\r ## The following objects are masked from 'package:base':\r## ## intersect, setdiff, setequal, union\r economics %\u0026gt;% pivot_longer(cols = -date,\rnames_to = \u0026quot;variavel\u0026quot;,\rvalues_to = \u0026quot;valor\u0026quot;) %\u0026gt;% filter(variavel %in% c(\u0026quot;psavert\u0026quot;, \u0026quot;uempmed\u0026quot;)) %\u0026gt;% ggplot(aes(date, valor, color = variavel, shape = variavel)) +\rgeom_line()\r E agora vejam um dos erros mais comuns de quem est√° come√ßando:\neconomics %\u0026gt;% pivot_longer(cols = -date,\rnames_to = \u0026quot;variavel\u0026quot;,\rvalues_to = \u0026quot;valor\u0026quot;) %\u0026gt;% filter(variavel %in% c(\u0026quot;psavert\u0026quot;, \u0026quot;uempmed\u0026quot;)) %\u0026gt;% ggplot(aes(date, valor)) +\rgeom_line()\r Ao n√£o especificar uma separa√ß√£o entre grupos, o ggplot2 n√£o interpreta meus dados! Ele simplesmente conecta as observa√ß√µes mais ou menos na ordem em que elas aparecem no eixo x. Para resolver esse problema, precisamos especificar grupos! Seja indiretamente, atrav√©s de uma escala de cores, formas ou tipos de linha, seja diretamente atrav√©s da est√©tica groups.\neconomics %\u0026gt;% pivot_longer(cols = -date,\rnames_to = \u0026quot;variavel\u0026quot;,\rvalues_to = \u0026quot;valor\u0026quot;) %\u0026gt;% filter(variavel %in% c(\u0026quot;psavert\u0026quot;, \u0026quot;uempmed\u0026quot;)) %\u0026gt;% ggplot(aes(date, valor, group = variavel)) +\rgeom_line()\r economics %\u0026gt;% pivot_longer(cols = -date,\rnames_to = \u0026quot;variavel\u0026quot;,\rvalues_to = \u0026quot;valor\u0026quot;) %\u0026gt;% filter(variavel %in% c(\u0026quot;psavert\u0026quot;, \u0026quot;uempmed\u0026quot;)) %\u0026gt;% ggplot(aes(date, valor, color = variavel, linetype = variavel)) +\rgeom_line()\r Legal n√©?\nBarcharts Para terminar e ilustrar alguns exemplos de transforma√ß√£o estat√≠stica, vamos fazer alguns gr√°ficos de barras usando o diamonds, um banco de dados para fazer a alegria das piores pessoas na hist√≥ria da humanidade.\ndiamonds\r ## # A tibble: 53,940 x 10\r## carat cut color clarity depth table price x y z\r## \u0026lt;dbl\u0026gt; \u0026lt;ord\u0026gt; \u0026lt;ord\u0026gt; \u0026lt;ord\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 0.23 Ideal E SI2 61.5 55 326 3.95 3.98 2.43\r## 2 0.21 Premium E SI1 59.8 61 326 3.89 3.84 2.31\r## 3 0.23 Good E VS1 56.9 65 327 4.05 4.07 2.31\r## 4 0.29 Premium I VS2 62.4 58 334 4.2 4.23 2.63\r## 5 0.31 Good J SI2 63.3 58 335 4.34 4.35 2.75\r## 6 0.24 Very Good J VVS2 62.8 57 336 3.94 3.96 2.48\r## 7 0.24 Very Good I VVS1 62.3 57 336 3.95 3.98 2.47\r## 8 0.26 Very Good H SI1 61.9 55 337 4.07 4.11 2.53\r## 9 0.22 Fair E VS2 65.1 61 337 3.87 3.78 2.49\r## 10 0.23 Very Good H VS1 59.4 61 338 4 4.05 2.39\r## # ... with 53,930 more rows\r Que tal um gr√°fico b√°sico, do n√∫mero de diamantes de acordo com a qualidade de seu corte (cut). Olhando a ajuda do ?geom_bar voc√™ vai na certeza de que voc√™ entendeu a aula e escreve o seguinte c√≥digo:\nggplot(diamonds, aes(x = cut, color = cut)) +\rgeom_bar()\r E agora, voc√™ fica olhando pro seu computador com cara de tacho. O que aconteceu? Bom, no caso de geoms com duas dimens√µes, podem existir casos em que voc√™ quer dar mapeamentos est√©ticos distintos para as bordas e para o conte√∫do deles. Por isso, existem as est√©ticas color e fill. Voc√™ pode pensar nelas como a casca do p√£o e o recheio.\nggplot(diamonds, aes(x = cut, fill = cut)) +\rgeom_bar()\r Mas, voc√™ ainda n√£o est√° satisfeito. Pela sua ampla experi√™ncia com uma das ind√∫strias mais sangrentas e retr√≥gadas do planeta voc√™ entende que a qualidade do corte n√£o √© o suficiente para determinar o valor de um diamante, ent√£o voc√™ quer ver a distribui√ß√£o tamb√©m pelo n√≠vel de transpar√™ncia do diamante, codificado na vari√°vel clarity.\nggplot(diamonds, aes(x = cut, fill = clarity)) +\rgeom_bar()\r Esse √© um primeiro passo interessante, e se tivessemos apenas duas ou tr√™s categorias, a gente poderia parar por a√≠. Mas no geral, para facilitar compara√ß√µes, queremos poder controlar o posicionamento das barras. Isso √© poss√≠vel ajustando o argumento position dos geoms onde isso √© necess√°rio.\n# O padr√£o\rggplot(diamonds, aes(x = cut, fill = clarity)) +\rgeom_bar(position = \u0026quot;stack\u0026quot;)\r # O certo\rggplot(diamonds, aes(x = cut, fill = clarity)) +\rgeom_bar(position = \u0026quot;dodge\u0026quot;)\r # Empilhadas a 100%, para facilitar compara√ß√µes entre categorias\rggplot(diamonds, aes(x = cut, fill = clarity)) +\rgeom_bar(position = \u0026quot;fill\u0026quot;)\r Pode parecer jocoso, mas em 99% dos casos, o correto √© voc√™ usar barras lado-a-lado, assim voc√™ visualmente pode comparar as categorias simplesmente comparando a altura das barras. Da pr√≥xima vez que voc√™ pensar em construir um gr√°fico de pizza, desista e fa√ßa um gr√°fico de barras com position = \u0026quot;dodge\u0026quot;. Seus leitores v√£o agradecer.\nEsse exemplo tamb√©m √© legal para gente olhar um pouco para a parte de transforma√ß√µes estat√≠sticas nas vari√°veis:\ndiamonds2 \u0026lt;- diamonds %\u0026gt;% count(cut) %\u0026gt;% mutate(prop = n/sum(n))\rdiamonds2 %\u0026gt;% ggplot() +\rgeom_bar(aes(x = cut, y = prop), stat = \u0026quot;identity\u0026quot;)\r Por padr√£o, geom_bar j√° faz o primeiro passo e utiliza as contagens (stat_count) para produzir o gr√°fico de barras, mas eu posso mudar esse comportamento atrav√©s do argumento stat. Eu tamb√©m posso querer mostrar propr√ß√µes ao inv√©s de contagens de outra forma mais sucinta.\nggplot(diamonds, aes(x = cut, # ao fazer isso, eu mudo o padr√£o de contagens para propor√ß√µes.\ry = stat(prop), # preciso especificar o grupo, se n√£o todas as barras v√£o a 100%.\rgroup = 1)) +\rgeom_bar()\r Voc√™ pode construir seus gr√°ficos a partir de transforma√ß√µes estat√≠sticas ao inv√©s de objetos geom√©tricos:\nggplot(data = diamonds) + stat_summary(\rmapping = aes(x = cut, y = depth),\rfun.min = min,\rfun.max = max,\rfun = median\r)\r As transforma√ß√µes estat√≠sticas come√ßam sempre com stat_ e cada uma tem um objeto geom√©trico padr√£o, que voc√™ pode mudar com o argumento geom.\nggplot(data = diamonds) + stat_summary(\rmapping = aes(x = cut, y = depth),\rfun.min = min,\rfun.max = max,\r# N√£o d√° pra mostrar a mediana com barras de erro, sorry\r#fun = median,\rgeom = \u0026quot;errorbar\u0026quot;\r)\r E era basicamente isso que eu tinha a dizer sobre como construir gr√°ficos no ggplot2! Abaixo, uma se√ß√£o com alguns detalhes para quem tiver interesse nessa parte de embelezamento dos gr√°ficos.\nPerfumaria Essa se√ß√£o pretende introduzir um pouco uma parte de customiza√ß√£o dos gr√°ficos. Frequentemente, as publica√ß√µes de regras mais estritas sobre formatos, fontes, temas, etc. As op√ß√µes padr√£o do ggplot2 podem n√£o se acomodar, ent√£o, cabe a n√≥s ajeitar essa reta final.\nT√≠tulos e r√≥tulos A melhor maneira de ajustar t√≠tulos e r√≥tulos √© atrav√©s de labs, porque voc√™ resolve tudo em uma s√≥ invoca√ß√£o. Mas tamb√©m h√° uma fun√ß√£o ggtitle. Com ela, √© poss√≠vel setar apenas t√≠tulo e subt√≠tulo.\nggplot(mpg, aes(displ, hwy, color = class)) +\rgeom_point() +\rggtitle(\u0026quot;T√≠tulo do gr√°fico\u0026quot;, \u0026quot;Subt√≠tulo do gr√°fico\u0026quot;)\r A maioria das op√ß√µes de customiza√ß√£o mais fina est√° na camada theme. Internamente, cada elemento do gr√°fico √© controlado por uma fun√ß√£o element_, por exemplo, element_text desenha textos e recebe argumentos relativos a isso, como fam√≠lia da fonte, tamanho, cor, etc.\nAli, voc√™ tem um controle mais direto sobre a constru√ß√£o do gr√°fico. No que diz respeito aos r√≥tulos, podemos mudar a fonte do t√≠tulo.\nggplot(mpg, aes(displ, hwy, color = class)) +\rgeom_point() +\rggtitle(\u0026quot;T√≠tulo do gr√°fico\u0026quot;, \u0026quot;Subt√≠tulo do gr√°fico\u0026quot;) +\r# Family √© meio complicado de mudar, mas voc√™ pode escolher serif, sans ou mono\rtheme(plot.title = element_text(family = \u0026quot;serif\u0026quot;, face = \u0026quot;bold\u0026quot;, colour = \u0026quot;red\u0026quot;),\rplot.subtitle = element_text(family = \u0026quot;mono\u0026quot;, face = \u0026quot;italic\u0026quot;, color = \u0026quot;forestgreen\u0026quot;))\r Usando uma s√≠ntaxe similar e os argumentos da fun√ß√£o element_text, voc√™ pode mudar qual outro elemento textual do gr√°fico.\nEixos Continuando o nosso frankenstein, podemos fazer altera√ß√µes nos eixos, como remover peda√ßos de um eixo, modificar sua forma, seu √¢ngulo e ajustar sua posi√ß√£o.\nggplot(mpg, aes(displ, hwy, color = class)) +\rgeom_point() +\rggtitle(\u0026quot;T√≠tulo do gr√°fico\u0026quot;, \u0026quot;Subt√≠tulo do gr√°fico\u0026quot;) +\r# Family √© meio complicado de mudar, mas voc√™ pode escolher serif, sans ou mono\rtheme(plot.title = element_text(family = \u0026quot;serif\u0026quot;, face = \u0026quot;bold\u0026quot;, colour = \u0026quot;red\u0026quot;),\rplot.subtitle = element_text(family = \u0026quot;mono\u0026quot;, face = \u0026quot;italic\u0026quot;, color = \u0026quot;forestgreen\u0026quot;),\r# voc√™ pode remover peda√ßos inteiros do gr√°fico com \u0026quot;element_blank()\u0026quot;\raxis.ticks.y = element_blank(),\raxis.text.y = element_blank(),\raxis.title.y = element_blank(),\r# voc√™ pode mudar a orienta√ß√£o, angulo, posi√ß√£o e at√© formato de elementos\raxis.title = element_text(angle = 90, hjust = 1),\raxis.text.x = element_text(angle = 45, vjust = 1),\raxis.ticks.x = element_line(\rcolour = \u0026quot;royalblue3\u0026quot;,\rarrow = grid::arrow(angle = 45, length = unit(0.5, \u0026quot;cm\u0026quot;), ends = \u0026quot;first\u0026quot;, type = \u0026quot;closed\u0026quot;))\r)\r Realmente, o c√©u √© o limite e voc√™ pode deixar o seu gr√°fico t√£o horr√≠vel quanto voc√™ quiser.\nLegendas Legendas no ggplot2 s√£o controladas em alguns lugares diferentes. Elas s√£o tratadas como guias (guides) no sentido de que s√£o guias para o leitor. Vamos pegar outra vari√°vel de cores, para poder brincar com diferentes tipos de legenda.\nggplot(mpg, aes(displ, hwy, color = cyl)) +\rgeom_point()\r Por padr√£o, ele entende cilindros como num√©rico e faz uma barra de cores cont√≠nua. Mas eu quero uma legenda!\n# Jeito 1 - Simples e r√°pido\rggplot(mpg, aes(displ, hwy, color = cyl)) +\rgeom_point() +\rguides(color = \u0026quot;legend\u0026quot;)\r # Jeito 2 - Posso mudar detalhes!\rggplot(mpg, aes(displ, hwy, color = cyl)) +\rgeom_point() +\rguides(color = guide_legend(title = \u0026quot;Cilindrossss\u0026quot;,\rtitle.position = \u0026quot;right\u0026quot;,\rlabel.position = \u0026quot;bottom\u0026quot;,\rdirection = \u0026quot;horizontal\u0026quot;))\r # Jeito 3 - Mexendo diretamente nas escalas\rggplot(mpg, aes(displ, hwy, color = cyl)) +\rgeom_point() +\r# Minha escala de cores preferida\rscale_color_viridis_c(guide = \u0026quot;legend\u0026quot;, option = \u0026quot;B\u0026quot;)\r # Jeito 3 - de novo, mas agora usando a especifica√ß√£o mais completa do guia\rggplot(mpg, aes(displ, hwy, color = cyl)) +\rgeom_point() +\r# Minha escala de cores preferida\rscale_color_viridis_c(\rguide = guide_legend(title = \u0026quot;Cilindrossss\u0026quot;,\rtitle.position = \u0026quot;right\u0026quot;,\rlabel.position = \u0026quot;bottom\u0026quot;,\rdirection = \u0026quot;horizontal\u0026quot;), option = \u0026quot;B\u0026quot;)\r Em qualquer lugar onde voc√™ possa especificar guides, voc√™ pode passar o valor FALSE para remover a legenda.\n# Na camada \u0026quot;guides()\u0026quot;\rggplot(mpg, aes(displ, hwy, color = cyl, size = cyl)) +\rgeom_point() +\rguides(color = FALSE)\r # Na pr√≥pria escala\rggplot(mpg, aes(displ, hwy, color = cyl, size = cyl)) +\rgeom_point() +\rscale_size(guide = FALSE)\r # B√¥nus = no tema, mas a√≠ voc√™ remove todas\rggplot(mpg, aes(displ, hwy, color = cyl, size = cyl)) +\rgeom_point() +\rtheme(legend.position = \u0026quot;none\u0026quot;)\r Escalas J√° dei uma palhinha de editar escalas, antes, ent√£o aqui vai um pouco mais de detalhe:\nggplot(mpg, aes(displ, hwy, color = cyl, size = cyl)) +\rgeom_point()\r # Mudar as cores manualmente\rcores \u0026lt;- c(\u0026quot;red\u0026quot;, \u0026quot;green\u0026quot;, \u0026quot;blue\u0026quot;, \u0026quot;yellow\u0026quot;, \u0026quot;purple\u0026quot;, \u0026quot;tomato\u0026quot;, \u0026quot;wheat2\u0026quot;)\rggplot(mpg, aes(displ, hwy, color = class, size = cyl)) +\rgeom_point() +\rscale_color_manual(values = cores)\r # Mudar os tamanhos\rggplot(mpg, aes(displ, hwy, color = class, size = cyl)) +\rgeom_point() +\rscale_color_manual(values = cores) +\r# scale_radius para fazer proprcional ao raio\rscale_radius(range = c(3,6))\r ggplot(mpg, aes(displ, hwy, color = class, size = cyl)) +\rgeom_point() +\rscale_color_manual(values = cores) +\r# scale_size para fazer proprcional a √°rea\rscale_size(range = c(2,4))\r √â poss√≠vel aplicar transforma√ß√µes na vari√°vel diretamente na escala, mudar o n√∫mero de breaks e especificar labels e alterar os limites do gr√°fico manualmente.\nggplot(mpg, aes(displ, hwy, color = class, size = cyl)) +\rgeom_point() +\rscale_x_continuous(trans = \u0026quot;sqrt\u0026quot;, name = \u0026quot;Peso\u0026quot;) +\rscale_y_continuous(\rname = \u0026quot;Consumo (rodovia)\u0026quot;,\rlimits = c(0, 50),\rbreaks = c(10, 20, 30, 40, 50), labels = c(\u0026quot;fogo no clima\u0026quot;, \u0026quot;aquecimento global\u0026quot;, \u0026quot;caldeira planet√°ria\u0026quot;, \u0026quot;deixa pra pr√≥xima gera√ß√£o\u0026quot;, \u0026quot;desastre em c√¢mera lenta\u0026quot;))\r Cada escala vai ter argumentos espec√≠ficos que fazem sentido em seu pr√≥prio contexto. Escalas cont√≠nuas tem argumentos para transforma√ß√£o estat√≠stica, escalas discretas n√£o aceitam argumentos cont√≠nuos e etc.\nIsto encerra nossa parte de ggplot2, que tal uns exerc√≠cios pra esquentar?\nExerc√≠cios  O que tem de errado no c√≥digo abaixo? Por que os pontos n√£o ficaram azuis?  ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = \u0026quot;blue\u0026quot;))\r  Utilizando o banco mpg, fa√ßa o diagrama de dispers√£o de displ por hwy e mapeie a cor para class, o tamanho para cyl e a forma para manufacturer. Como esses atributos est√©ticos se comportam diferente para vari√°veis categ√≥ricas vs cont√≠nuas?\n  Utilizando o diamonds, crie um diagrama de dispers√£o que relacione carat com price. Explore algumas outras vari√°veis utilizando escalas de cor para ver se voc√™ identifica algum padr√£o. Aplique transforma√ß√µes nas vari√°veis que voc√™ considerar justificadas.\n  Ainda continuando o exemplo anterior, aplique um geom_smooth utilizando v√°rias op√ß√µes de method para as vari√°veis originais ou transformadas.\n  No nosso gr√°fico de barras usando stat(prop) a gente precisou colocar group = 1, porque? Qual √© a diferen√ßa entre esses dois c√≥digos?\n  ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut, y = after_stat(prop)))\r ggplot(data = diamonds) + geom_bar(mapping = aes(x = cut, fill = color, y = after_stat(prop)))\r stat_smooth √© muito parecido com geom_smooth, mas h√° uma diferen√ßa sutil. Compare os c√≥digos abaixo.  ggplot(mpg, aes(displ, hwy)) + geom_point() +\rgeom_smooth()\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r ggplot(mpg, aes(displ, hwy)) + geom_point() +\rstat_smooth(geom = \u0026quot;step\u0026quot;)\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r ggplot(mpg, aes(displ, hwy)) + geom_point() +\rstat_smooth(geom = \u0026quot;linerange\u0026quot;)\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r ggplot(mpg, aes(displ, hwy)) + geom_point() +\rstat_smooth(geom = \u0026quot;errorbar\u0026quot;)\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r ggplot(mpg, aes(displ, hwy)) + geom_point() +\rstat_smooth(geom = \u0026quot;crossbar\u0026quot;)\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r  Usando o mpg e facet_grid, crie um scatterplot que contenha displ no eixo x, hwy no eixo y, class na cor, drv nas facetas-coluna e cyl nas facetas linha.\n  Voc√™ acha que os dois gr√°ficos abaixo ficar√£o diferentes um do outro? Porque? Tente responder antes de rodar o c√≥digo.\n  ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_point() + geom_smooth()\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r ggplot() + geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) + geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))\r ## `geom_smooth()` using method = 'loess' and formula 'y ~ x'\r Tente recriar o seguinte gr√°fico  ## `geom_smooth()` using formula 'y ~ x'\r Transforme o gr√°fico seguir em um gr√°fico de pizza usando coord_polar.  ggplot(diamonds, aes(cut, fill = cut)) +\rgeom_bar()\r ","date":1621728000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1621728000,"objectID":"b9e37b7e1055bb09bf3bd731ebee0b86","permalink":"https://laddem.github.io/courses/tidyverse/dia3/","publishdate":"2021-05-23T00:00:00Z","relpermalink":"/courses/tidyverse/dia3/","section":"courses","summary":"O pacote ggplot2 e a \u0026ldquo;gram√°tica dos gr√°ficos\u0026rdquo; Ainda me lembro da primeira vez que li o terceiro cap√≠tulo de R for Data Science em que o conceito de visualiza√ß√£o de dados √© apresentado junto com a ideia de data.","tags":null,"title":"ggplot2","type":"book"},{"authors":[],"categories":null,"content":"\rClick on the Slides button above to view the built-in slides feature.\r\r\rSlides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://laddem.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"summary(Orange)\r ## Tree age circumference ## 3:7 Min. : 118.0 Min. : 30.0 ## 1:7 1st Qu.: 484.0 1st Qu.: 65.5 ## 5:7 Median :1004.0 Median :115.0 ## 2:7 Mean : 922.1 Mean :115.9 ## 4:7 3rd Qu.:1372.0 3rd Qu.:161.5 ## Max. :1582.0 Max. :214.0\r ","date":1621382400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1621446973,"objectID":"aa349783f2147bdcae05e80cc4d66819","permalink":"https://laddem.github.io/post/dia-1/","publishdate":"2021-05-19T00:00:00Z","relpermalink":"/post/dia-1/","section":"post","summary":"summary(Orange)\r ## Tree age circumference ## 3:7 Min. : 118.0 Min. : 30.0 ## 1:7 1st Qu.: 484.0 1st Qu.: 65.5 ## 5:7 Median :1004.0 Median :115.0 ## 2:7 Mean : 922.","tags":[],"title":"Dia 1","type":"post"},{"authors":["LADDEM","Âê≥ÊÅ©ÈÅî"],"categories":["Demo","ÊïôÁ®ã"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It\u0026rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more  Get Started  üëâ Create a new site üìö Personalize your site üí¨ Chat with the Wowchemy community or Hugo community üê¶ Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy üí° Request a feature or report a bug for Wowchemy ‚¨ÜÔ∏è Updating Wowchemy? View the Update Guide and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n‚ù§Ô∏è Click here to become a sponsor and help support Wowchemy\u0026rsquo;s future ‚ù§Ô∏è As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features ü¶Ñ‚ú®\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, ‰∏≠Êñá, and Portugu√™s Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://laddem.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome üëã We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","ÂºÄÊ∫ê"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":["R"],"content":"\r\rR Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars)\r## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00\rfit \u0026lt;- lm(dist ~ speed, data = cars)\rfit\r## ## Call:\r## lm(formula = dist ~ speed, data = cars)\r## ## Coefficients:\r## (Intercept) speed ## -17.579 3.932\r\rIncluding Plots\rYou can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1))\rpie(\rc(280, 60, 20),\rc(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;),\rcol = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;),\rinit.angle = -50, border = NA\r)\r\rFigure 1: A fancy pie chart.\r\r\r","date":1606875194,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606875194,"objectID":"bf1eb249db79f10ace7d22321494165a","permalink":"https://laddem.github.io/post/2020-12-01-r-rmarkdown/","publishdate":"2020-12-01T21:13:14-05:00","relpermalink":"/post/2020-12-01-r-rmarkdown/","section":"post","summary":"R Markdown\rThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python\rimport pandas as pd\rdata = pd.read_csv(\u0026quot;data.csv\u0026quot;)\rdata.head()\r```\r renders as\nimport pandas as pd\rdata = pd.read_csv(\u0026quot;data.csv\u0026quot;)\rdata.head()\r Charts Academic supports the popular Plotly chart format.\nSave your Plotly JSON in your page folder, for example chart.json, and then add the {{\u0026lt; chart data=\u0026quot;chart\u0026quot; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\n\r\r(function() {\rlet a = setInterval( function() {\rif ( typeof window.Plotly === 'undefined' ) {\rreturn;\r}\rclearInterval( a );\rPlotly.d3.json(\"./line-chart.json\", function(chart) {\rPlotly.plot('chart-569123874', chart.data, chart.layout, {responsive: true});\r});\r}, 500 );\r})();\r You might also find the Plotly JSON Editor useful.\nMath Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}\r{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$\r renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\\\\\ math linebreak:\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\\\\\r1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$\r renders as\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\n1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid\rgraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\r```\r renders as\ngraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\r An example sequence diagram:\n```mermaid\rsequenceDiagram\rAlice-\u0026gt;\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts!\rJohn--\u0026gt;\u0026gt;Alice: Great!\rJohn-\u0026gt;\u0026gt;Bob: How about you?\rBob--\u0026gt;\u0026gt;John: Jolly good!\r```\r renders as\nsequenceDiagram\rAlice-\u0026gt;\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts!\rJohn--\u0026gt;\u0026gt;Alice: Great!\rJohn-\u0026gt;\u0026gt;Bob: How about you?\rBob--\u0026gt;\u0026gt;John: Jolly good!\r An example Gantt diagram:\n```mermaid\rgantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\r```\r renders as\ngantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\r An example class diagram:\n```mermaid\rclassDiagram\rClass01 \u0026lt;|-- AveryLongClass : Cool\r\u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01\rClass09 --\u0026gt; C2 : Where am i?\rClass09 --* C3\rClass09 --|\u0026gt; Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rclass Class10 {\r\u0026lt;\u0026lt;service\u0026gt;\u0026gt;\rint id\rsize()\r}\r```\r renders as\nclassDiagram\rClass01 \u0026lt;|-- AveryLongClass : Cool\r\u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01\rClass09 --\u0026gt; C2 : Where am i?\rClass09 --* C3\rClass09 --|\u0026gt; Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rclass Class10 {\r\u0026lt;\u0026lt;service\u0026gt;\u0026gt;\rint id\rsize()\r}\r An example state diagram:\n```mermaid\rstateDiagram\r[*] --\u0026gt; Still\rStill --\u0026gt; [*]\rStill --\u0026gt; Moving\rMoving --\u0026gt; Still\rMoving --\u0026gt; Crash\rCrash --\u0026gt; [*]\r```\r renders as\nstateDiagram\r[*] --\u0026gt; Still\rStill --\u0026gt; [*]\rStill --\u0026gt; Moving\rMoving --\u0026gt; Still\rMoving --\u0026gt; Crash\rCrash --\u0026gt; [*]\r Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example\r- [x] Write diagram example\r- [ ] Do something else\r renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header |\r| ------------- | ------------- |\r| Content Cell | Content Cell |\r| Content Cell | Content Cell |\r renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Callouts Academic supports a shortcode for callouts, also referred to as asides, hints, or alerts. By wrapping a paragraph in {{% callout note %}} ... {{% /callout %}}, it will render as an aside.\n{{% callout note %}}\rA Markdown aside is useful for displaying notices, hints, or definitions to your readers.\r{{% /callout %}}\r renders as\n\rA Markdown aside is useful for displaying notices, hints, or definitions to your readers.\r\r\rSpoilers Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.\n{{\u0026lt; spoiler text=\u0026quot;Click to view the spoiler\u0026quot; \u0026gt;}}\rYou found me!\r{{\u0026lt; /spoiler \u0026gt;}}\r renders as\nClick to view the spoiler\rYou found me!\n Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R\r renders as\n\r Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it üôå ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://laddem.github.io/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["LADDEM"],"categories":null,"content":"\rCreate your slides in Markdown - click the Slides button to check out the example.\r\r\rSupplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://laddem.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["LADDEM"],"categories":[],"content":"from IPython.core.display import Image\rImage('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')\r print(\u0026quot;Welcome to Academic!\u0026quot;)\r Welcome to Academic!\r Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/\rcd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/\rjupyter lab index.ipynb\r The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n---\rtitle: My post's title\rdate: 2019-09-01\r# Put any other Academic metadata here...\r---\r Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.\r Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://laddem.github.io/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot;\rif porridge == \u0026quot;blueberry\u0026quot;:\rprint(\u0026quot;Eating...\u0026quot;)\r  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}}\r{{% fragment %}} **Two** {{% /fragment %}}\r{{% fragment %}} Three {{% /fragment %}}\r Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}}\r- Only the speaker can read these notes\r- Press `S` key to view\r{{% /speaker_note %}}\r Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}}\r{{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}}\r{{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}\r  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1,\r.reveal section h2,\r.reveal section h3 {\rcolor: navy;\r}\r  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://laddem.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://laddem.github.io/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://laddem.github.io/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["LADDEM","Robert Ford"],"categories":null,"content":"\rClick the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.\r\r\r\rCreate your slides in Markdown - click the Slides button to check out the example.\r\r\rSupplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://laddem.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["LADDEM","Robert Ford"],"categories":null,"content":"\rClick the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.\r\r\r\rCreate your slides in Markdown - click the Slides button to check out the example.\r\r\rSupplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://laddem.github.io/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://laddem.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]