[{"authors":null,"categories":null,"content":"O Laborat√≥rio de An√°lise de Dados em Demografia foi criado em 2021 nas depend√™ncias do N√∫cleo de Estudos de Popula√ß√£o Elza Berqu√≥ como um espa√ßo para a produ√ß√£o e dissemina√ß√£o do conhecimento cient√≠fico e das ferramentas de an√°lise de dados que s√£o pedra angular da Demografia e de outras √°reas de conhecimento que trabalham com a an√°lise de dados quantitativos atrav√©s de t√©cnicas computacionais.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"pt","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://laddem.github.io/author/laboratorio-de-analise-de-dados-em-demografia/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/laboratorio-de-analise-de-dados-em-demografia/","section":"authors","summary":"O Laborat√≥rio de An√°lise de Dados em Demografia foi criado em 2021 nas depend√™ncias do N√∫cleo de Estudos de Popula√ß√£o Elza Berqu√≥ como um espa√ßo para a produ√ß√£o e dissemina√ß√£o do conhecimento cient√≠fico e das ferramentas de an√°lise de dados que s√£o pedra angular da Demografia e de outras √°reas de conhecimento que trabalham com a an√°lise de dados quantitativos atrav√©s de t√©cnicas computacionais.","tags":null,"title":"Laborat√≥rio de An√°lise de Dados em Demografia","type":"authors"},{"authors":null,"categories":null,"content":"\r\r Lista de Conte√∫dos\r O que voc√™ vai aprender O curso Programa Instrutores Links √∫teis  \r\rO que voc√™ vai aprender  A filosofia de design por tr√°s de um dos pacotes mais populares no R Importa√ß√£o, Manipula√ß√£o e Visualiza√ß√£o de dados na pr√°tica tidyr, dplyr, ggplot2 e v√°rios outros pacotes para simplificar sua rotina de an√°lise de dados  O curso Uma semana, com aulas √† noite, no formato workshop, com muitos exerc√≠cios para praticar e pegar o jeito.\nPrograma \rreadr, tibble e tidyr\rUm modelo de ci√™ncia de dados Uma forma esquem√°tica, mas √∫til de encarar o processo de an√°lise de dados e de produ√ß√£o de conhecimento a partir de informa√ß√µes secund√°rias √© esta figura:\n\r\rInstrutores Vin√≠cius de Souza Maia\nNat√°lia Martins Arruda\nLinks √∫teis Ci√™ncia de dados em R\nR for Data Science\n","date":1621468800,"expirydate":-62135596800,"kind":"section","lang":"pt","lastmod":1621468800,"objectID":"02eadce3bea228c4a3968729e322add5","permalink":"https://laddem.github.io/courses/tidyverse/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/courses/tidyverse/","section":"courses","summary":"Aprenda a utilizar o tidyverse nas suas an√°lises de dados.","tags":null,"title":"üìä Aprenda a utilizar o tidyverse","type":"book"},{"authors":null,"categories":null,"content":"Um modelo de ci√™ncia de dados Uma forma esquem√°tica, mas √∫til de encarar o processo de an√°lise de dados e de produ√ß√£o de conhecimento a partir de informa√ß√µes secund√°rias √© esta figura:\nEla acaba sendo um ponto de partida interessante porque contextualiza a maioria dos pacotes que vamos utilizar. O readr √© uma maneira de facilitar e tornar mais r√°pida a importa√ß√£o de dados em formatos comuns, como o texto delimitado por separadores e o formato colunado com larguras-fixas utilizado pelo IBGE.\nA tibble √© uma proposta de moderniza√ß√£o para o data.frame, aproveitando a estrutura flex√≠vel e poderosa, mas mudando certas conven√ß√µes, como a convers√£o de strings para fatores, permitindo a cria√ß√£o de colunas de listas, utiliza√ß√£o de nomes mais complexos para colunas, etc.\nO tidyr √© uma forma de reformatar (reshape) bancos de dados que v√™m em formatos que dificultam seu processamento, permitindo que o analista facilmente reconfigure a informa√ß√£o para o formato mais adequado. Ele √© o primeiro pacote que veremos sobre a parte de \u0026ldquo;cozinha\u0026rdquo; dos dados, no qual √© preciso processar o dado bruto para torn√°-lo pass√≠vel de an√°lise.\nO mesmo pode ser dito para os outros pacotes que veremos nos pr√≥ximos dias. Cada um deles foi pensado para resolver um problema ou facilitar uma rotina de trabalho relacionada com um dos passos descritos acima.\nPrograma√ß√£o liter√°ria V√°rios dos conceitos que guiam o design do tidyverse s√£o orientados por uma certa filosofia. Esta filosofia dita que a principal preocupa√ß√£o por tr√°s de um programa n√£o √© que ele funcione. Eventualmente e com um pouco de persist√™ncia, √© quase sempre poss√≠vel chegar a uma solu√ß√£o t√©cnica adequada. A principal quest√£o √© que o programa √© uma ferramenta de comunica√ß√£o com outras pessoas que o ler√£o, seja seus colegas, colaboradores, alunos ou voc√™ mesmo, daqui a 2 anos, quando lembrar que voc√™ j√° escreveu um programa para aquela tarefa. Trago aqui alguns trechos de Literate Programming, de Donald Knuth (1984), traduzidos livremente por este que vos fala:\n Creio que chegou a hora de melhorar significativamente a documenta√ß√£o dos programas, e que podemos atingir este objetivo tratando programas como obras liter√°rias. Por isso o t√≠tulo: \u0026ldquo;Programa√ß√£o Liter√°ria\u0026rdquo;. Abandonemos os velhos h√°bitos de construir programas: ao inv√©s de imaginar que nossa tarefa principal √© instruir um computador sobre o que deve ser feito, concentremo-nos em explicar aos seres humanos o que queremos que o computador fa√ßa. O praticante da programa√ß√£o liter√°ria pode ser visto como um ensa√≠sta, cuja principal preocupa√ß√£o √© com a clareza da exposi√ß√£o e a excel√™ncia no estilo. Tal autor, com um dicion√°rio na m√£o, escolhe os nomes das vari√°veis com cuidado e explica claramente seu significado. Ele ou ela esmera por um programa que √© compreens√≠vel porque seus conceitos foram introduzidos na melhor ordem poss√≠vel para o entendimento humano, utilizando uma mistura de m√©todos formais e informais que se complementam.\n Assim, v√°rias das escolhas feitas na constru√ß√£o de tidyverse procuram refor√ßar essa caracter√≠stica de interpretabilidade dos programas, como a ordem l√≥gica das opera√ß√µes com o pipe (%\u0026gt;%), fun√ß√µes com nomes mais longos e sem√¢nticos, a utiliza√ß√£o de uma fun√ß√£o espec√≠fica para cada tarefa, ao inv√©s da adapta√ß√£o de fun√ß√µes gen√©ricas para uma grande variedade de tarefas. O prop√≥sito de um c√≥digo escrito como tidyverse √© que, no limite, a pr√≥pria s√≠ntaxe do c√≥digo funcione como parte da documenta√ß√£o do programa.\nO mist√©rio do pipe: %\u0026gt;% Usu√°rios de longa data do R j√° podem ter encontrado no mato esse animal estranho e podem ter ficado confusos com seu significado. O pipe √© de origem humilde e nasceu nos sistemas Unix h√° muitas d√©cadas atr√°s. Seu objetivo √© muito simples: e se voc√™ tiver uma sequ√™ncia de computa√ß√µes em que cada uma recebe o resultado daquela feita anteriormente? Claro que voc√™ poderia fazer:\nx \u0026lt;- 1:10\ry \u0026lt;- diff(x)\rmean(y)\r ## [1] 1\r Mas n√£o seria interessante pular os objetos intermedi√°rios e ir direto ao ponto? O pipe vem do pacote magrittr, mas ele v√™m carregado em quase todos os pacotes do tidyverse. Vamos carregar logo o tibble.\n# Para ter acesso ao pipe, basta carregar um pacote do tidyverse, como tibble, dplyr, tidyr, etc.\r# Vamos carregar o tibble agora\rlibrary(tibble)\rx %\u0026gt;% diff() %\u0026gt;% mean()\r ## [1] 1\r Vejamos um exemplo mais real, quantos artistas existem no dataset billboard? Podemos usar unique e length para descobrir.\nx \u0026lt;- unique(tidyr::billboard$artist)\rlength(x)\r ## [1] 228\r Mas com %\u0026gt;% fica bem melhor:\ntidyr::billboard %\u0026gt;% .$artist %\u0026gt;% unique() %\u0026gt;% length()\r ## [1] 228\r Ok, mas como ele funciona? √â simples, o pipe carrega o objeto a sua esquerda num ponto . invis√≠vel que √© automaticamente passado como o primeiro argumento da fun√ß√£o √† direita.\nx \u0026lt;- 1:10\rmean(x)\r ## [1] 5.5\r x %\u0026gt;% mean()\r ## [1] 5.5\r OK, mas e se meu argumento n√£o for o primeiro, ainda posso usar pipe? Pode! √â s√≥ usar explicitamente um ponto no lugar onde voc√™ quer aproveitar o efeito:\niris %\u0026gt;% boxplot(Sepal.Length ~ Species, data = .)\r O ponto . depois de data indica indica que ali deve ser colocado o iris. O pipe √© uma pe√ßa chave de muitas fun√ß√µes do tidyverse, n√£o porque ele seja obrigat√≥rio, mas sim porque ele permite expressar sequ√™ncias de opera√ß√µes numa ordem mais l√≥gica, do tipo: \u0026ldquo;Primeiro fa√ßa a, ent√£o b, ent√£o c, \u0026hellip; \u0026ldquo;, ao contr√°rio da forma como isto √© geralmente feito usando par√™nteses para preced√™ncia.\n# Compare\rmean(diff(1:10))\r ## [1] 1\r 1:10 %\u0026gt;% diff %\u0026gt;% mean\r ## [1] 1\r E assim fica desmistificado o mist√©rio do pipe! Um √∫ltimo pulo do gato: pelo amor de deus ningu√©m digita Shift + %, \u0026gt;, Shift + %, basta usar o atalho: Ctrl + Shift + M que ele p√µe um pipe separado por espa√ßos %\u0026gt;%.\nreadr Usu√°rios do R provavelmente v√£o estar familiarizados com os nossos leitores de arquivos mais comuns: read.table e read.csv. Talvez muitos de voc√™s j√° at√© memorizaram alguns dos argumentos mais comuns. N√£o √© o caso aqui de revisitar esta fun√ß√£o, mas o readr tem muitos paralelos com elas, porque √© pensado como uma nova vers√£o da mesma coisa.\n# Comecemos carregando o readr\rlibrary(readr)\r Debaixo do cap√¥ O readr, como as fun√ß√µes de leitura do base √© uma cole√ß√£o de parsers, que transformam texto em objetos R com o tipo desejado.\nparse_number(c(\u0026quot;1\u0026quot;, \u0026quot;20\u0026quot;, \u0026quot;38\u0026quot;))\r ## [1] 1 20 38\r parse_character(c(\u0026quot;banana\u0026quot;, \u0026quot;ma√ß√£\u0026quot;, \u0026quot;p√™ra\u0026quot;))\r ## [1] \u0026quot;banana\u0026quot; \u0026quot;ma\u0026lt;e7\u0026gt;\u0026lt;e3\u0026gt;\u0026quot; \u0026quot;p\u0026lt;ea\u0026gt;ra\u0026quot;\r # Note os acentos e caracteres especiais\rparse_character(c(\u0026quot;banana\u0026quot;, \u0026quot;ma√ß√£\u0026quot;, \u0026quot;p√™ra\u0026quot;), locale = locale(encoding = \u0026quot;Windows-1252\u0026quot;))\r ## [1] \u0026quot;banana\u0026quot; \u0026quot;ma√ß√£\u0026quot; \u0026quot;p√™ra\u0026quot;\r parse_logical(c(\u0026quot;true\u0026quot;, \u0026quot;false\u0026quot;, \u0026quot;true\u0026quot;))\r ## [1] TRUE FALSE TRUE\r Em geral, a gente n√£o precisa descer tanto o n√≠vel, a gente vai trabalhar mesmo √© com os leitores de dados \u0026ldquo;retangulares\u0026rdquo;. Como os do base, eles s√£o read_csv, read_table, etc. Vamos trabalhar com bancos de dados que j√° v√™m no pacote, para facilitar o processo.\n# Lista os datasets que vem no pacote\rreadr_example()\r ## [1] \u0026quot;challenge.csv\u0026quot; \u0026quot;epa78.txt\u0026quot; \u0026quot;example.log\u0026quot; ## [4] \u0026quot;fwf-sample.txt\u0026quot; \u0026quot;massey-rating.txt\u0026quot; \u0026quot;mtcars.csv\u0026quot; ## [7] \u0026quot;mtcars.csv.bz2\u0026quot; \u0026quot;mtcars.csv.zip\u0026quot;\r Uma coisa que gosto de fazer √© olhar como o arquivo est√° organizado antes de tentar abr√≠-lo. Muitos de voc√™s podem fazer isso com readLines. Ela ganhou sua vers√£o no pacote com read_lines.\n# Vamos tentar abrir massey-rating.txt\rread_lines(readr_example(\u0026quot;massey-rating.txt\u0026quot;), n_max = 10)\r ## [1] \u0026quot;UCC PAY LAZ KPK RT COF BIH DII ENG ACU Rank Team Conf\u0026quot; ## [2] \u0026quot; 1 1 1 1 1 1 1 1 1 1 1 Ohio St B10 \u0026quot;\r## [3] \u0026quot; 2 2 2 2 2 2 2 2 4 2 2 Oregon P12 \u0026quot;\r## [4] \u0026quot; 3 4 3 4 3 4 3 4 2 3 3 Alabama SEC \u0026quot;\r## [5] \u0026quot; 4 3 4 3 4 3 5 3 3 4 4 TCU B12 \u0026quot;\r## [6] \u0026quot; 6 6 6 5 5 7 6 5 6 11 5 Michigan St B10 \u0026quot;\r## [7] \u0026quot; 7 7 7 6 7 6 11 8 7 8 6 Georgia SEC \u0026quot;\r## [8] \u0026quot; 5 5 5 7 6 8 4 6 5 5 7 Florida St ACC \u0026quot;\r## [9] \u0026quot; 8 8 9 9 10 5 7 7 10 7 8 Baylor B12 \u0026quot;\r## [10] \u0026quot; 9 11 8 13 11 11 12 9 14 9 9 Georgia Tech ACC \u0026quot;\r # Identificando o separador, escolho a fun√ß√£o adequada\rread_table(readr_example(\u0026quot;massey-rating.txt\u0026quot;))\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## UCC = col_double(),\r## PAY = col_double(),\r## LAZ = col_double(),\r## KPK = col_double(),\r## RT = col_double(),\r## COF = col_double(),\r## BIH = col_double(),\r## DII = col_double(),\r## ENG = col_double(),\r## ACU = col_double(),\r## Rank = col_double(),\r## Team = col_character(),\r## Conf = col_character()\r## )\r ## # A tibble: 10 x 13\r## UCC PAY LAZ KPK RT COF BIH DII ENG ACU Rank Team Conf ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 1 1 1 1 1 1 1 1 1 1 1 Ohio~ B10 ## 2 2 2 2 2 2 2 2 2 4 2 2 Oreg~ P12 ## 3 3 4 3 4 3 4 3 4 2 3 3 Alab~ SEC ## 4 4 3 4 3 4 3 5 3 3 4 4 TCU B12 ## 5 6 6 6 5 5 7 6 5 6 11 5 Mich~ B10 ## 6 7 7 7 6 7 6 11 8 7 8 6 Geor~ SEC ## 7 5 5 5 7 6 8 4 6 5 5 7 Flor~ ACC ## 8 8 8 9 9 10 5 7 7 10 7 8 Bayl~ B12 ## 9 9 11 8 13 11 11 12 9 14 9 9 Geor~ ACC ## 10 13 10 13 11 8 9 10 11 9 10 10 Miss~ SEC\r Como identifiquei que as colunas estavam separadas por espa√ßos, utilizei read_table cujo delimitador √© o espa√ßo \u0026quot; \u0026quot;.\nA segunda feature mais interessante do readr, √© uma interface para selecionar os tipos de colunas que ser√£o importadas. Vejamos o seguinte exemplo.\n# Vamos abrir mtcars.csv\rread_lines(readr_example(\u0026quot;mtcars.csv\u0026quot;), n_max = 10)\r ## [1] \u0026quot;\\\u0026quot;mpg\\\u0026quot;,\\\u0026quot;cyl\\\u0026quot;,\\\u0026quot;disp\\\u0026quot;,\\\u0026quot;hp\\\u0026quot;,\\\u0026quot;drat\\\u0026quot;,\\\u0026quot;wt\\\u0026quot;,\\\u0026quot;qsec\\\u0026quot;,\\\u0026quot;vs\\\u0026quot;,\\\u0026quot;am\\\u0026quot;,\\\u0026quot;gear\\\u0026quot;,\\\u0026quot;carb\\\u0026quot;\u0026quot;\r## [2] \u0026quot;21,6,160,110,3.9,2.62,16.46,0,1,4,4\u0026quot; ## [3] \u0026quot;21,6,160,110,3.9,2.875,17.02,0,1,4,4\u0026quot; ## [4] \u0026quot;22.8,4,108,93,3.85,2.32,18.61,1,1,4,1\u0026quot; ## [5] \u0026quot;21.4,6,258,110,3.08,3.215,19.44,1,0,3,1\u0026quot; ## [6] \u0026quot;18.7,8,360,175,3.15,3.44,17.02,0,0,3,2\u0026quot; ## [7] \u0026quot;18.1,6,225,105,2.76,3.46,20.22,1,0,3,1\u0026quot; ## [8] \u0026quot;14.3,8,360,245,3.21,3.57,15.84,0,0,3,4\u0026quot; ## [9] \u0026quot;24.4,4,146.7,62,3.69,3.19,20,1,0,4,2\u0026quot; ## [10] \u0026quot;22.8,4,140.8,95,3.92,3.15,22.9,1,0,4,2\u0026quot;\r # Identificamos o separador de colunas, selecionamos a fun√ß√£o adequada\rread_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;))\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## mpg = col_double(),\r## cyl = col_double(),\r## disp = col_double(),\r## hp = col_double(),\r## drat = col_double(),\r## wt = col_double(),\r## qsec = col_double(),\r## vs = col_double(),\r## am = col_double(),\r## gear = col_double(),\r## carb = col_double()\r## )\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r## 2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r## 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r## 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r## 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r## 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\r## 7 14.3 8 360 245 3.21 3.57 15.8 0 0 3 4\r## 8 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r## 9 22.8 4 141. 95 3.92 3.15 22.9 1 0 4 2\r## 10 19.2 6 168. 123 3.92 3.44 18.3 1 0 4 4\r## # ... with 22 more rows\r O console nos mostra que a leitura do banco foi completada, mas tamb√©m mostra Column Specification. Isto indica qual o tipo de dado que foi identificado automaticamente numa an√°lise feita pela fun√ß√£o guess_parser. Em diversos casos, n√≥s podemos querer identificar manualmente as colunas. Vejamos um exemplo:\n# Vamos identificar as colunas com spec\rspec_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;))\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## mpg = col_double(),\r## cyl = col_double(),\r## disp = col_double(),\r## hp = col_double(),\r## drat = col_double(),\r## wt = col_double(),\r## qsec = col_double(),\r## vs = col_double(),\r## am = col_double(),\r## gear = col_double(),\r## carb = col_double()\r## )\r ## cols(\r## mpg = col_double(),\r## cyl = col_double(),\r## disp = col_double(),\r## hp = col_double(),\r## drat = col_double(),\r## wt = col_double(),\r## qsec = col_double(),\r## vs = col_double(),\r## am = col_double(),\r## gear = col_double(),\r## carb = col_double()\r## )\r # Copia e cola, modifica as colunas que queremos alterar\rspec_cols \u0026lt;- cols(\rmpg = col_double(),\rcyl = col_factor(), # N de cilindros do autom√≥vel\rdisp = col_double(),\rhp = col_double(),\rdrat = col_double(),\rwt = col_double(),\rqsec = col_double(),\rvs = col_double(),\ram = col_factor(c(\u0026quot;0\u0026quot;, \u0026quot;1\u0026quot;)), # Transmiss√£o autom√°tica ou manual\rgear = col_double(),\rcarb = col_double()\r)\rdf \u0026lt;- read_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), col_types = spec_cols)\rdf\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r## 2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r## 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r## 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r## 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r## 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\r## 7 14.3 8 360 245 3.21 3.57 15.8 0 0 3 4\r## 8 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r## 9 22.8 4 141. 95 3.92 3.15 22.9 1 0 4 2\r## 10 19.2 6 168. 123 3.92 3.44 18.3 1 0 4 4\r## # ... with 22 more rows\r # Para importar apenas colunas selecionadas, utilize 'cols_only()'\rspec_cols2 \u0026lt;- cols_only(\rmpg = col_double(),\rcyl = col_factor(), # N de cilindros do autom√≥vel\ram = col_factor(c(\u0026quot;0\u0026quot;, \u0026quot;1\u0026quot;)), # Transmiss√£o autom√°tica ou manual\rgear = col_double(),\rcarb = col_double()\r)\rdf2 \u0026lt;- read_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), col_types = spec_cols2)\rdf2\r ## # A tibble: 32 x 5\r## mpg cyl am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 1 4 4\r## 2 21 6 1 4 4\r## 3 22.8 4 1 4 1\r## 4 21.4 6 0 3 1\r## 5 18.7 8 0 3 2\r## 6 18.1 6 0 3 1\r## 7 14.3 8 0 3 4\r## 8 24.4 4 0 4 2\r## 9 22.8 4 0 4 2\r## 10 19.2 6 0 4 4\r## # ... with 22 more rows\r # Para indicar os tipos de colunas de um jeito mais sucinto, utilize uma string:\rdf \u0026lt;- read_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), col_types = \u0026quot;dfddddddfdd\u0026quot;)\r# S√≥ cuidado pra n√£o perder a conta dos ds!\rdf\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;fct\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r## 2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r## 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r## 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r## 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r## 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\r## 7 14.3 8 360 245 3.21 3.57 15.8 0 0 3 4\r## 8 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r## 9 22.8 4 141. 95 3.92 3.15 22.9 1 0 4 2\r## 10 19.2 6 168. 123 3.92 3.44 18.3 1 0 4 4\r## # ... with 22 more rows\r Voc√™ tamb√©m pode querer definir caracter√≠sticas de localiza√ß√£o, como a codifica√ß√£o de caracteres, os separadores de decimal e de milhar e etc. A melhor forma de fazer isso √© definir um locale.\nmeu_locale \u0026lt;- locale(encoding = \u0026quot;UTF-8\u0026quot;, decimal_mark = \u0026quot;,\u0026quot;, grouping_mark = \u0026quot;.\u0026quot;)\r A√≠ √© s√≥ passar isso pra uma das fun√ß√µes do pacote sob o argumento locale\nread_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), locale = meu_locale)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## mpg = col_number(),\r## cyl = col_double(),\r## disp = col_number(),\r## hp = col_double(),\r## drat = col_number(),\r## wt = col_number(),\r## qsec = col_number(),\r## vs = col_double(),\r## am = col_double(),\r## gear = col_double(),\r## carb = col_double()\r## )\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 39 262 1646 0 1 4 4\r## 2 21 6 160 110 39 2875 1702 0 1 4 4\r## 3 228 4 108 93 385 232 1861 1 1 4 1\r## 4 214 6 258 110 308 3215 1944 1 0 3 1\r## 5 187 8 360 175 315 344 1702 0 0 3 2\r## 6 181 6 225 105 276 346 2022 1 0 3 1\r## 7 143 8 360 245 321 357 1584 0 0 3 4\r## 8 244 4 1467 62 369 319 20 1 0 4 2\r## 9 228 4 1408 95 392 315 229 1 0 4 2\r## 10 192 6 1676 123 392 344 183 1 0 4 4\r## # ... with 22 more rows\r Existe ainda a possibilidade de ler dados colunados com largura-fixa. readr implementa quatro fun√ß√µes diferentes para ajudar na constru√ß√£o do dicion√°rio:\n# Nossos dados\rx \u0026lt;- readr_example(\u0026quot;fwf-sample.txt\u0026quot;)\rread_lines(x, n_max = 10)\r ## [1] \u0026quot;John Smith WA 418-Y11-4111\u0026quot;\r## [2] \u0026quot;Mary Hartford CA 319-Z19-4341\u0026quot;\r## [3] \u0026quot;Evan Nolan IL 219-532-c301\u0026quot;\r # separados por espa√ßo\rdic1 \u0026lt;- fwf_empty(x)\rdic1\r ## $begin\r## [1] 0 5 20 30\r## ## $end\r## [1] 4 13 22 NA\r## ## $skip\r## [1] 0\r## ## $col_names\r## [1] \u0026quot;X1\u0026quot; \u0026quot;X2\u0026quot; \u0026quot;X3\u0026quot; \u0026quot;X4\u0026quot;\r df \u0026lt;- read_fwf(file = x, col_positions = dic1)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## X1 = col_character(),\r## X2 = col_character(),\r## X3 = col_character(),\r## X4 = col_character()\r## )\r df\r ## # A tibble: 3 x 4\r## X1 X2 X3 X4 ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 John Smith WA 418-Y11-4111\r## 2 Mary Hartford CA 319-Z19-4341\r## 3 Evan Nolan IL 219-532-c301\r # indicando a largura da coluna\rlarguras \u0026lt;- c(20, 10, 12)\rdic2 \u0026lt;- fwf_widths(larguras)\rdic2\r ## # A tibble: 3 x 3\r## begin end col_names\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; ## 1 0 20 X1 ## 2 20 30 X2 ## 3 30 42 X3\r df \u0026lt;- read_fwf(file = x, col_positions = dic2)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## X1 = col_character(),\r## X2 = col_character(),\r## X3 = col_character()\r## )\r df\r ## # A tibble: 3 x 3\r## X1 X2 X3 ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 John Smith WA 418-Y11-4111\r## 2 Mary Hartford CA 319-Z19-4341\r## 3 Evan Nolan IL 219-532-c301\r # indicando onde cada coluna come√ßa e termina\rcomeca \u0026lt;- c(1, 21, 30)\rtermina \u0026lt;- c(20, 29, 42)\rdic3 \u0026lt;- fwf_positions(comeca, termina)\rdic3\r ## # A tibble: 3 x 3\r## begin end col_names\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; ## 1 0 20 X1 ## 2 20 29 X2 ## 3 29 42 X3\r df \u0026lt;- read_fwf(file = x, col_positions = dic3)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## X1 = col_character(),\r## X2 = col_character(),\r## X3 = col_character()\r## )\r df\r ## # A tibble: 3 x 3\r## X1 X2 X3 ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 John Smith WA 418-Y11-4111\r## 2 Mary Hartford CA 319-Z19-4341\r## 3 Evan Nolan IL 219-532-c301\r # indicando pares nome-valor\rdic4 \u0026lt;- fwf_cols(\rnome = c(1, 20),\ruf = c(21, 29),\rnumero = c(30, 42))\rdic4\r ## # A tibble: 3 x 3\r## begin end col_names\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; ## 1 0 20 nome ## 2 20 29 uf ## 3 29 42 numero\r df \u0026lt;- read_fwf(file = x, col_positions = dic4)\r ## ## -- Column specification --------------------------------------------------------\r## cols(\r## nome = col_character(),\r## uf = col_character(),\r## numero = col_character()\r## )\r df\r ## # A tibble: 3 x 3\r## nome uf numero ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 John Smith WA 418-Y11-4111\r## 2 Mary Hartford CA 319-Z19-4341\r## 3 Evan Nolan IL 219-532-c301\r Especificar dicion√°rios para arquivos colunados √© um p√©-no-saco, por sorte, existem pacotes que j√° fizeram parte desse trabalho por n√≥s. O readr n√£o melhora muita o servi√ßo manual de constru√ß√£o de dicion√°rios, o que ele oferece √© um ganho de performance tremendo. read_fwf √© centenas de vezes mais r√°pido que o base read.fwf.\nEm termos do que o pacote faz, √© basicamente isso. A √∫nica coisa que falta mencionar √© que ele importa os dados como tibbles ao inv√©s do data.frame padr√£o, mas isso j√° √© um √≥timo gancho pra nossa pr√≥xima parte.\ntibbles Tibbles s√£o basicamente data.frames com um m√©todo mais bonitinho de print. Elas automaticamente se ajustam a largura da sua tela, omitindo as colunas que estouram, e por padr√£o imprimem s√≥ as 10 primeiras observa√ß√µes. Outras caracter√≠sticas que pessoalmente gosto, √© que elas informam o tipo de vari√°vel junto com o nome, arrendondam digitos significativos, destacam n√∫meros grandes, negativos, NAs e etc.\ndf \u0026lt;- read_csv(readr_example(\u0026quot;mtcars.csv\u0026quot;), col_types = cols()) # omitir a especifica√ß√£o\rdf\r ## # A tibble: 32 x 11\r## mpg cyl disp hp drat wt qsec vs am gear carb\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 21 6 160 110 3.9 2.62 16.5 0 1 4 4\r## 2 21 6 160 110 3.9 2.88 17.0 0 1 4 4\r## 3 22.8 4 108 93 3.85 2.32 18.6 1 1 4 1\r## 4 21.4 6 258 110 3.08 3.22 19.4 1 0 3 1\r## 5 18.7 8 360 175 3.15 3.44 17.0 0 0 3 2\r## 6 18.1 6 225 105 2.76 3.46 20.2 1 0 3 1\r## 7 14.3 8 360 245 3.21 3.57 15.8 0 0 3 4\r## 8 24.4 4 147. 62 3.69 3.19 20 1 0 4 2\r## 9 22.8 4 141. 95 3.92 3.15 22.9 1 0 4 2\r## 10 19.2 6 168. 123 3.92 3.44 18.3 1 0 4 4\r## # ... with 22 more rows\r Do ponto de vista pr√°tico, elas funcionam exatamente igual a data.frames, tudo que voc√™ pode fazer com um data.frame, voc√™ faz com tibbles. O que elas trazem de novidade √©:\n Elas nunca mudam o tipo de dado inputado.  df1 \u0026lt;- data.frame(x = list(1:5, 1:10, 1:20))\rdf1\r ## x.1.5 x.1.10 x.1.20\r## 1 1 1 1\r## 2 2 2 2\r## 3 3 3 3\r## 4 4 4 4\r## 5 5 5 5\r## 6 1 6 6\r## 7 2 7 7\r## 8 3 8 8\r## 9 4 9 9\r## 10 5 10 10\r## 11 1 1 11\r## 12 2 2 12\r## 13 3 3 13\r## 14 4 4 14\r## 15 5 5 15\r## 16 1 6 16\r## 17 2 7 17\r## 18 3 8 18\r## 19 4 9 19\r## 20 5 10 20\r df2 \u0026lt;- tibble(x = list(1:5, 1:10, 1:20))\rdf2\r ## # A tibble: 3 x 1\r## x ## \u0026lt;list\u0026gt; ## 1 \u0026lt;int [5]\u0026gt; ## 2 \u0026lt;int [10]\u0026gt;\r## 3 \u0026lt;int [20]\u0026gt;\r  Elas nunca ajustam os nomes das vari√°veis  names(data.frame(`nome hipster` = 1))\r ## [1] \u0026quot;nome.hipster\u0026quot;\r names(tibble(`nome hipster` = 1))\r ## [1] \u0026quot;nome hipster\u0026quot;\r  Ela avalia cada argumento de forma \u0026ldquo;pregui√ßosa\u0026rdquo; e sequencial  # erro\rdata.frame(x = 1:5, y = x ^ 2)\r ## Error in x^2: argumento n√£o-num√©rico para operador bin√°rio\r # funciona\rtibble(x = 1:5, y = x ^ 2)\r ## # A tibble: 5 x 2\r## x y\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 1\r## 2 2 4\r## 3 3 9\r## 4 4 16\r## 5 5 25\r  Ela nunca utiliza row.names  head(data.frame(state.x77))\r ## Population Income Illiteracy Life.Exp Murder HS.Grad Frost Area\r## Alabama 3615 3624 2.1 69.05 15.1 41.3 20 50708\r## Alaska 365 6315 1.5 69.31 11.3 66.7 152 566432\r## Arizona 2212 4530 1.8 70.55 7.8 58.1 15 113417\r## Arkansas 2110 3378 1.9 70.66 10.1 39.9 65 51945\r## California 21198 5114 1.1 71.71 10.3 62.6 20 156361\r## Colorado 2541 4884 0.7 72.06 6.8 63.9 166 103766\r as_tibble(state.x77)\r ## # A tibble: 50 x 8\r## Population Income Illiteracy `Life Exp` Murder `HS Grad` Frost Area\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 3615 3624 2.1 69.0 15.1 41.3 20 50708\r## 2 365 6315 1.5 69.3 11.3 66.7 152 566432\r## 3 2212 4530 1.8 70.6 7.8 58.1 15 113417\r## 4 2110 3378 1.9 70.7 10.1 39.9 65 51945\r## 5 21198 5114 1.1 71.7 10.3 62.6 20 156361\r## 6 2541 4884 0.7 72.1 6.8 63.9 166 103766\r## 7 3100 5348 1.1 72.5 3.1 56 139 4862\r## 8 579 4809 0.9 70.1 6.2 54.6 103 1982\r## 9 8277 4815 1.3 70.7 10.7 52.6 11 54090\r## 10 4931 4091 2 68.5 13.9 40.6 60 58073\r## # ... with 40 more rows\r  Ela muda a \u0026ldquo;regra da reciclagem\u0026rdquo;: apenas s√£o aceitos vetores unit√°rios ou vetores de tamanho igual aos demais  data.frame(x = 1:10, y = 1:5)\r ## x y\r## 1 1 1\r## 2 2 2\r## 3 3 3\r## 4 4 4\r## 5 5 5\r## 6 6 1\r## 7 7 2\r## 8 8 3\r## 9 9 4\r## 10 10 5\r # erro\rtibble(x = 1:10, y = 1:5)\r ## Error: Tibble columns must have compatible sizes.\r## * Size 10: Existing data.\r## * Size 5: Column `y`.\r## i Only values of size one are recycled.\r tibble(x = 1:10, y = 1)\r ## # A tibble: 10 x 2\r## x y\r## \u0026lt;int\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 1\r## 2 2 1\r## 3 3 1\r## 4 4 1\r## 5 5 1\r## 6 6 1\r## 7 7 1\r## 8 8 1\r## 9 9 1\r## 10 10 1\r tibble(x = 1:10, y = c(1:5, 1:5))\r ## # A tibble: 10 x 2\r## x y\r## \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 1 1\r## 2 2 2\r## 3 3 3\r## 4 4 4\r## 5 5 5\r## 6 6 1\r## 7 7 2\r## 8 8 3\r## 9 9 4\r## 10 10 5\r  Tibbles s√£o estritas com rela√ß√£o as opera√ß√µes de subsetting com [  df1 \u0026lt;- data.frame(x = 1:3, y = 3:1)\rclass(df1[,1:2])\r ## [1] \u0026quot;data.frame\u0026quot;\r class(df1[,1])\r ## [1] \u0026quot;integer\u0026quot;\r df2 \u0026lt;- tibble(x = 1:3, y = 3:1)\rclass(df2[, 1:2])\r ## [1] \u0026quot;tbl_df\u0026quot; \u0026quot;tbl\u0026quot; \u0026quot;data.frame\u0026quot;\r class(df2[, 1])\r ## [1] \u0026quot;tbl_df\u0026quot; \u0026quot;tbl\u0026quot; \u0026quot;data.frame\u0026quot;\r # Se quiser extrair s√≥ uma coluna, utilize '[[' ou '$'\rclass(df2[[1]])\r ## [1] \u0026quot;integer\u0026quot;\r class(df2$x)\r ## [1] \u0026quot;integer\u0026quot;\r Elas tamb√©m n√£o aceitam \u0026lsquo;partial matching\u0026rsquo; de nomes de vari√°veis.\ndf \u0026lt;- data.frame(nome_de_cavalo = 1)\rdf$nome\r ## [1] 1\r df2 \u0026lt;- tibble(nome_de_cavalo = 1)\rdf2$nome\r ## Warning: Unknown or uninitialised column: `nome`.\r ## NULL\r tidyr Ok, nossos dados est√£o no R, mas, muitas vezes, n√£o est√£o no formato adequado. De maneira geral, analistas de dados v√£o dar prefer√™ncia a um formato parecido com este:\nIsto tem uma raz√£o de ser que deve tornar-se √≥bvia quando tentarmos realizar as opera√ß√µes de transforma√ß√£o de vari√°veis, visualiza√ß√£o, modelos, etc. Por√©m, muitas vezes outras considera√ß√µes s√£o feitas na hora registrar os dados, armazen√°-los, apresent√°-los ao p√∫blico, por isso, frequentemente nossos dados n√£o est√£o no formato tidy e precisam ser reformatados. Essa √© uma das principais tarefas do tidyr e √© nela que vamos nos concentrar.\nAtente que reformata√ß√£o, como muitos outros aspectos da an√°lise de dados, n√£o √© receita de bolo. Muitas vezes o formato desejado n√£o √© √≥bvio, muito menos os passos necess√°rios para chegar l√°. Por√©m, vou apresentar as ferramentas e alguns exemplos simples que cobrem muitos dos nossos casos de uso.\nlibrary(tidyr)\rwho\r ## # A tibble: 7,240 x 60\r## country iso2 iso3 year new_sp_m014 new_sp_m1524 new_sp_m2534 new_sp_m3544\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt; \u0026lt;int\u0026gt;\r## 1 Afghani~ AF AFG 1980 NA NA NA NA\r## 2 Afghani~ AF AFG 1981 NA NA NA NA\r## 3 Afghani~ AF AFG 1982 NA NA NA NA\r## 4 Afghani~ AF AFG 1983 NA NA NA NA\r## 5 Afghani~ AF AFG 1984 NA NA NA NA\r## 6 Afghani~ AF AFG 1985 NA NA NA NA\r## 7 Afghani~ AF AFG 1986 NA NA NA NA\r## 8 Afghani~ AF AFG 1987 NA NA NA NA\r## 9 Afghani~ AF AFG 1988 NA NA NA NA\r## 10 Afghani~ AF AFG 1989 NA NA NA NA\r## # ... with 7,230 more rows, and 52 more variables: new_sp_m4554 \u0026lt;int\u0026gt;,\r## # new_sp_m5564 \u0026lt;int\u0026gt;, new_sp_m65 \u0026lt;int\u0026gt;, new_sp_f014 \u0026lt;int\u0026gt;,\r## # new_sp_f1524 \u0026lt;int\u0026gt;, new_sp_f2534 \u0026lt;int\u0026gt;, new_sp_f3544 \u0026lt;int\u0026gt;,\r## # new_sp_f4554 \u0026lt;int\u0026gt;, new_sp_f5564 \u0026lt;int\u0026gt;, new_sp_f65 \u0026lt;int\u0026gt;,\r## # new_sn_m014 \u0026lt;int\u0026gt;, new_sn_m1524 \u0026lt;int\u0026gt;, new_sn_m2534 \u0026lt;int\u0026gt;,\r## # new_sn_m3544 \u0026lt;int\u0026gt;, new_sn_m4554 \u0026lt;int\u0026gt;, new_sn_m5564 \u0026lt;int\u0026gt;,\r## # new_sn_m65 \u0026lt;int\u0026gt;, new_sn_f014 \u0026lt;int\u0026gt;, new_sn_f1524 \u0026lt;int\u0026gt;,\r## # new_sn_f2534 \u0026lt;int\u0026gt;, new_sn_f3544 \u0026lt;int\u0026gt;, new_sn_f4554 \u0026lt;int\u0026gt;,\r## # new_sn_f5564 \u0026lt;int\u0026gt;, new_sn_f65 \u0026lt;int\u0026gt;, new_ep_m014 \u0026lt;int\u0026gt;,\r## # new_ep_m1524 \u0026lt;int\u0026gt;, new_ep_m2534 \u0026lt;int\u0026gt;, new_ep_m3544 \u0026lt;int\u0026gt;,\r## # new_ep_m4554 \u0026lt;int\u0026gt;, new_ep_m5564 \u0026lt;int\u0026gt;, new_ep_m65 \u0026lt;int\u0026gt;,\r## # new_ep_f014 \u0026lt;int\u0026gt;, new_ep_f1524 \u0026lt;int\u0026gt;, new_ep_f2534 \u0026lt;int\u0026gt;,\r## # new_ep_f3544 \u0026lt;int\u0026gt;, new_ep_f4554 \u0026lt;int\u0026gt;, new_ep_f5564 \u0026lt;int\u0026gt;,\r## # new_ep_f65 \u0026lt;int\u0026gt;, newrel_m014 \u0026lt;int\u0026gt;, newrel_m1524 \u0026lt;int\u0026gt;,\r## # newrel_m2534 \u0026lt;int\u0026gt;, newrel_m3544 \u0026lt;int\u0026gt;, newrel_m4554 \u0026lt;int\u0026gt;,\r## # newrel_m5564 \u0026lt;int\u0026gt;, newrel_m65 \u0026lt;int\u0026gt;, newrel_f014 \u0026lt;int\u0026gt;,\r## # newrel_f1524 \u0026lt;int\u0026gt;, newrel_f2534 \u0026lt;int\u0026gt;, newrel_f3544 \u0026lt;int\u0026gt;,\r## # newrel_f4554 \u0026lt;int\u0026gt;, newrel_f5564 \u0026lt;int\u0026gt;, newrel_f65 \u0026lt;int\u0026gt;\r Esse √© um banco de dados dif√≠cil de analisar, ele tem 60 colunas, indicando o n√∫mero de casos de tuberculose em diversos est√°gios da doen√ßa, por pa√≠s e ano. O problema √© que ao inv√©s de termos algo como:\ntribble(\r~pais, ~ano, ~tipo, ~idade, ~casos,\r\u0026quot;brasil\u0026quot;, 1980, \u0026quot;extrapulmonar\u0026quot;, \u0026quot;15-24\u0026quot;, 10,\r\u0026quot;brasil\u0026quot;, 1990, \u0026quot;relapso\u0026quot;, \u0026quot;15-24\u0026quot;, 10\r)\r ## # A tibble: 2 x 5\r## pais ano tipo idade casos\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 brasil 1980 extrapulmonar 15-24 10\r## 2 brasil 1990 relapso 15-24 10\r As informa√ß√µes de tipo de tuberculose e idade dos pacientes est√£o espalhadas pelas colunas. Pra encurtar a hist√≥ria, precisamos \u0026ldquo;tombar\u0026rdquo; esse banco para que essas colunas se tornem um novo conjunto de vari√°veis. Vamos passo a passo.\n# Primeiro, vamos excluir as colunas iso2 e iso3, porque elas s√£o a mesma informa√ß√£o redundante\rwho$iso2 \u0026lt;- NULL\rwho$iso3 \u0026lt;- NULL\rwho1 \u0026lt;- pivot_longer(who,\rcols = c(new_sp_m014:newrel_f65),\rnames_to = \u0026quot;tipo_tb\u0026quot;,\rvalues_to = \u0026quot;casos\u0026quot;,\rvalues_drop_na = TRUE)\rwho1\r ## # A tibble: 76,046 x 4\r## country year tipo_tb casos\r## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r## 1 Afghanistan 1997 new_sp_m014 0\r## 2 Afghanistan 1997 new_sp_m1524 10\r## 3 Afghanistan 1997 new_sp_m2534 6\r## 4 Afghanistan 1997 new_sp_m3544 3\r## 5 Afghanistan 1997 new_sp_m4554 5\r## 6 Afghanistan 1997 new_sp_m5564 2\r## 7 Afghanistan 1997 new_sp_m65 0\r## 8 Afghanistan 1997 new_sp_f014 5\r## 9 Afghanistan 1997 new_sp_f1524 38\r## 10 Afghanistan 1997 new_sp_f2534 36\r## # ... with 76,036 more rows\r Nosso primeiro passo √© transformar todas as colunas de novos casos em um par de colunas:\n cols indica quais colunas ser√£o tombadas e quais ser√£o mantidas. Uma coluna names_to recebe as categorias da vari√°vel. Uma coluna values_to recebe os valores das c√©lulas. values_drop_na √© uma op√ß√£o para eliminar c√©lulas vazias.  Essa primeira transforma√ß√£o j√° nos d√° um banco de dados um pouco mais amig√°vel, por√©m, ainda temos vari√°veis \u0026ldquo;presas\u0026rdquo; na coluna tipo_tb. Vamos tentar solt√°-las.\n# primeiro, corrigir uma pequena inconsistencia:\runique(who1$tipo_tb)\r ## [1] \u0026quot;new_sp_m014\u0026quot; \u0026quot;new_sp_m1524\u0026quot; \u0026quot;new_sp_m2534\u0026quot; \u0026quot;new_sp_m3544\u0026quot; \u0026quot;new_sp_m4554\u0026quot;\r## [6] \u0026quot;new_sp_m5564\u0026quot; \u0026quot;new_sp_m65\u0026quot; \u0026quot;new_sp_f014\u0026quot; \u0026quot;new_sp_f1524\u0026quot; \u0026quot;new_sp_f2534\u0026quot;\r## [11] \u0026quot;new_sp_f3544\u0026quot; \u0026quot;new_sp_f4554\u0026quot; \u0026quot;new_sp_f5564\u0026quot; \u0026quot;new_sp_f65\u0026quot; \u0026quot;new_sn_m014\u0026quot; ## [16] \u0026quot;new_sn_m1524\u0026quot; \u0026quot;new_sn_m2534\u0026quot; \u0026quot;new_sn_m3544\u0026quot; \u0026quot;new_sn_m4554\u0026quot; \u0026quot;new_sn_m5564\u0026quot;\r## [21] \u0026quot;new_sn_m65\u0026quot; \u0026quot;new_ep_m014\u0026quot; \u0026quot;new_ep_m1524\u0026quot; \u0026quot;new_ep_m2534\u0026quot; \u0026quot;new_ep_m3544\u0026quot;\r## [26] \u0026quot;new_ep_m4554\u0026quot; \u0026quot;new_ep_m5564\u0026quot; \u0026quot;new_ep_m65\u0026quot; \u0026quot;new_sn_f014\u0026quot; \u0026quot;newrel_m014\u0026quot; ## [31] \u0026quot;newrel_f014\u0026quot; \u0026quot;new_sn_f1524\u0026quot; \u0026quot;new_sn_f2534\u0026quot; \u0026quot;new_sn_f3544\u0026quot; \u0026quot;new_sn_f4554\u0026quot;\r## [36] \u0026quot;new_sn_f5564\u0026quot; \u0026quot;new_sn_f65\u0026quot; \u0026quot;new_ep_f014\u0026quot; \u0026quot;new_ep_f1524\u0026quot; \u0026quot;new_ep_f2534\u0026quot;\r## [41] \u0026quot;new_ep_f3544\u0026quot; \u0026quot;new_ep_f4554\u0026quot; \u0026quot;new_ep_f5564\u0026quot; \u0026quot;new_ep_f65\u0026quot; \u0026quot;newrel_m1524\u0026quot;\r## [46] \u0026quot;newrel_m2534\u0026quot; \u0026quot;newrel_m3544\u0026quot; \u0026quot;newrel_m4554\u0026quot; \u0026quot;newrel_m5564\u0026quot; \u0026quot;newrel_m65\u0026quot; ## [51] \u0026quot;newrel_f1524\u0026quot; \u0026quot;newrel_f2534\u0026quot; \u0026quot;newrel_f3544\u0026quot; \u0026quot;newrel_f4554\u0026quot; \u0026quot;newrel_f5564\u0026quot;\r## [56] \u0026quot;newrel_f65\u0026quot;\r # Notem que newrel deveria ser new_rel\r# Alguns de voc√™s devem conhecer 'gsub'\rwho1$tipo_tb \u0026lt;- gsub(\u0026quot;newrel\u0026quot;, \u0026quot;new_rel\u0026quot;, who1$tipo_tb)\r# Agora, podemos usar outra fun√ß√£o chave do tidyr, 'separate'\rwho2 \u0026lt;- who1 %\u0026gt;% separate(col = tipo_tb,\rinto = c(NA, \u0026quot;tipo_tb\u0026quot;, \u0026quot;sexo_idade\u0026quot;),\rsep = \u0026quot;_\u0026quot;)\rwho2\r ## # A tibble: 76,046 x 5\r## country year tipo_tb sexo_idade casos\r## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r## 1 Afghanistan 1997 sp m014 0\r## 2 Afghanistan 1997 sp m1524 10\r## 3 Afghanistan 1997 sp m2534 6\r## 4 Afghanistan 1997 sp m3544 3\r## 5 Afghanistan 1997 sp m4554 5\r## 6 Afghanistan 1997 sp m5564 2\r## 7 Afghanistan 1997 sp m65 0\r## 8 Afghanistan 1997 sp f014 5\r## 9 Afghanistan 1997 sp f1524 38\r## 10 Afghanistan 1997 sp f2534 36\r## # ... with 76,036 more rows\r # E outra passagem de separate para separar a idade do sexo\rwho3 \u0026lt;- who2 %\u0026gt;% separate(col = sexo_idade,\rinto = c(\u0026quot;sexo\u0026quot;, \u0026quot;idade\u0026quot;),\rsep = 1)\rwho3\r ## # A tibble: 76,046 x 6\r## country year tipo_tb sexo idade casos\r## \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;int\u0026gt;\r## 1 Afghanistan 1997 sp m 014 0\r## 2 Afghanistan 1997 sp m 1524 10\r## 3 Afghanistan 1997 sp m 2534 6\r## 4 Afghanistan 1997 sp m 3544 3\r## 5 Afghanistan 1997 sp m 4554 5\r## 6 Afghanistan 1997 sp m 5564 2\r## 7 Afghanistan 1997 sp m 65 0\r## 8 Afghanistan 1997 sp f 014 5\r## 9 Afghanistan 1997 sp f 1524 38\r## 10 Afghanistan 1997 sp f 2534 36\r## # ... with 76,036 more rows\r Bem melhor, n√£o acham? Estamos agora com um banco de dados muito mais adequado para uma an√°lise de dados em R. Cada linha √© uma observa√ß√£o, cada coluna √© uma informa√ß√£o sobre ela.\nAlguns de voc√™s podem ter reparado que fizemos um caminho em que nosso banco de dados passou de ter muitas colunas para muitas linhas (ficou mais \u0026ldquo;longo\u0026rdquo;) e depois precisamos separar algumas das colunas que criamos em outras (o que fizemos com separate). Podemos facilmente imaginar situa√ß√µes em que queremos fazer o caminho inverso: transformar um banco do formato longo para o formato com mais colunas e unir colunas separadas em uma nova. Vamos ver um exemplo.\n# Exemplo adaptado de https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population\rpopulacao \u0026lt;- tribble(\r~Rank, ~Country, ~Population,\t~'% of world', ~Day, ~Month, ~Year, ~Source,\r1L, \u0026quot;China\u0026quot;, 1411778724, \u0026quot;17.9%\u0026quot;, \u0026quot;1\u0026quot;, \u0026quot;Nov\u0026quot;, \u0026quot;2020\u0026quot;, \u0026quot;Seventh Census on 2020\u0026quot;,\r2L, \u0026quot;India\u0026quot;, 1377123716, \u0026quot;17.5%\u0026quot;, \u0026quot;19\u0026quot;, \u0026quot;May\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National population clock[3]\u0026quot;,\r3L, \u0026quot;United States\u0026quot;, 331695937, \u0026quot;4.22%\u0026quot;, \u0026quot;19\u0026quot;, \u0026quot;May\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National population clock[4]\u0026quot;,\r4L, \u0026quot;Indonesia\u0026quot;, 271350000, \u0026quot;3.45%\u0026quot;, \u0026quot;31\u0026quot;, \u0026quot;Dec\u0026quot;, \u0026quot;2020\u0026quot;, \u0026quot;National annual estimate[5]\u0026quot;,\r5L, \u0026quot;Pakistan\u0026quot;, 225200000, \u0026quot;2.86%\u0026quot;, \u0026quot;1\u0026quot;, \u0026quot;Jul\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;UN projection[2]\u0026quot;,\r6L, \u0026quot;Brazil\u0026quot;, 213154869, \u0026quot;2.71%\u0026quot;, \u0026quot;19\u0026quot;, \u0026quot;May\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National population clock[6]\u0026quot;,\r7L, \u0026quot;Nigeria\u0026quot;, 211401000, \u0026quot;2.69%\u0026quot;, \u0026quot;1\u0026quot;, \u0026quot;Jul\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;UN projection[2]\u0026quot;,\r8L, \u0026quot;Bangladesh\u0026quot;, 170689832, \u0026quot;2.17%\u0026quot;, \u0026quot;19\u0026quot;, \u0026quot;May\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National population clock[7]\u0026quot;,\r9L, \u0026quot;Russia\u0026quot;, 146171015, \u0026quot;1.86%\u0026quot;, \u0026quot;1\u0026quot;, \u0026quot;Jan\u0026quot;, \u0026quot;2021\u0026quot;, \u0026quot;National annual estimate[8]\u0026quot;,\r10L, \u0026quot;Mexico\u0026quot;, 126014024, \u0026quot;1.60%\u0026quot;, \u0026quot;2\u0026quot;, \u0026quot;Mar\u0026quot;, \u0026quot;2020\u0026quot;, \u0026quot;2020 census result[9]\u0026quot;\r)\rpopulacao\r ## # A tibble: 10 x 8\r## Rank Country Population `% of world` Day Month Year Source ## \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 1 China 1411778724 17.9% 1 Nov 2020 Seventh Census o~\r## 2 2 India 1377123716 17.5% 19 May 2021 National populat~\r## 3 3 United Sta~ 331695937 4.22% 19 May 2021 National populat~\r## 4 4 Indonesia 271350000 3.45% 31 Dec 2020 National annual ~\r## 5 5 Pakistan 225200000 2.86% 1 Jul 2021 UN projection[2] ## 6 6 Brazil 213154869 2.71% 19 May 2021 National populat~\r## 7 7 Nigeria 211401000 2.69% 1 Jul 2021 UN projection[2] ## 8 8 Bangladesh 170689832 2.17% 19 May 2021 National populat~\r## 9 9 Russia 146171015 1.86% 1 Jan 2021 National annual ~\r## 10 10 Mexico 126014024 1.60% 2 Mar 2020 2020 census resu~\r Imagine que, por qualquer motivo, voc√™ prefira trabalhar com uma vari√°vel \u0026ldquo;Data\u0026rdquo; ao inv√©s de dia, m√™s e ano. Podemos usar unite:\npopulacao2 \u0026lt;- populacao %\u0026gt;% unite(col = Data, Day, Month, Year, sep = \u0026quot; \u0026quot;)\rpopulacao2\r ## # A tibble: 10 x 6\r## Rank Country Population `% of world` Data Source ## \u0026lt;int\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; ## 1 1 China 1411778724 17.9% 1 Nov 2020 Seventh Census on 2020 ## 2 2 India 1377123716 17.5% 19 May 20~ National population cl~\r## 3 3 United Stat~ 331695937 4.22% 19 May 20~ National population cl~\r## 4 4 Indonesia 271350000 3.45% 31 Dec 20~ National annual estima~\r## 5 5 Pakistan 225200000 2.86% 1 Jul 2021 UN projection[2] ## 6 6 Brazil 213154869 2.71% 19 May 20~ National population cl~\r## 7 7 Nigeria 211401000 2.69% 1 Jul 2021 UN projection[2] ## 8 8 Bangladesh 170689832 2.17% 19 May 20~ National population cl~\r## 9 9 Russia 146171015 1.86% 1 Jan 2021 National annual estima~\r## 10 10 Mexico 126014024 1.60% 2 Mar 2020 2020 census result[9]\r O outro problema que precisamos resolver frequentemente, √© separar um par de vari√°veis em diversas colunas, fazendo o caminho inverso que fizemos no caso do dataset da OMS.\nus_rent_income\r ## # A tibble: 104 x 5\r## GEOID NAME variable estimate moe\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 01 Alabama income 24476 136\r## 2 01 Alabama rent 747 3\r## 3 02 Alaska income 32940 508\r## 4 02 Alaska rent 1200 13\r## 5 04 Arizona income 27517 148\r## 6 04 Arizona rent 972 4\r## 7 05 Arkansas income 23789 165\r## 8 05 Arkansas rent 709 5\r## 9 06 California income 29454 109\r## 10 06 California rent 1358 3\r## # ... with 94 more rows\r No exemplo acima, queremos separar em colunas os valores das vari√°veis de renda e valor do aluguel. Esse tipo de opera√ß√£o tem um certo grau de abstra√ß√£o que me deu bastante dor de cabe√ßa para entender inicialmente, ent√£o vamos olhar com carinho para o que queremos ter depois da transforma√ß√£o.\nus_rent_income2 \u0026lt;- tribble(\r~GEOID, ~NAME, ~income_estimate, ~rent_estimate, ~income_moe, ~rent_moe,\r\u0026quot;01\u0026quot;, \u0026quot;Alabama\u0026quot;, 24476, 747, 136, 3,\r\u0026quot;02\u0026quot;, \u0026quot;Alaska\u0026quot;, 32940, 1200, 508, 13\r)\rus_rent_income2\r ## # A tibble: 2 x 6\r## GEOID NAME income_estimate rent_estimate income_moe rent_moe\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 01 Alabama 24476 747 136 3\r## 2 02 Alaska 32940 1200 508 13\r O banco que queremos tem uma cara assim. Ele tem mais colunas novas e menos linhas, j√° que eu tinha no formato tidy uma vari√°vel chamada \u0026ldquo;variable\u0026rdquo; que guardava os valores renda e aluguel e duas colunas que guardavam os valores da estimativa e do moe. Agora, eu vou ter 4 colunas, duas para as estimativas de renda e aluguel e duas para os moes das mesmas vari√°veis. Como especificar isso para o banco todo? Usando pivot_wider.\nus_rent_income %\u0026gt;% pivot_wider(names_from = variable, values_from = c(estimate, moe))\r ## # A tibble: 52 x 6\r## GEOID NAME estimate_income estimate_rent moe_income moe_rent\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 01 Alabama 24476 747 136 3\r## 2 02 Alaska 32940 1200 508 13\r## 3 04 Arizona 27517 972 148 4\r## 4 05 Arkansas 23789 709 165 5\r## 5 06 California 29454 1358 109 3\r## 6 08 Colorado 32401 1125 109 5\r## 7 09 Connecticut 35326 1123 195 5\r## 8 10 Delaware 31560 1076 247 10\r## 9 11 District of Columbia 43198 1424 681 17\r## 10 12 Florida 25952 1077 70 3\r## # ... with 42 more rows\r As fun√ß√µes pivot_ tem diversos outros argumentos e cobrem diversos casos de uso. Vejam este exemplo da documenta√ß√£o de pivot_longer:\nanscombe\r ## x1 x2 x3 x4 y1 y2 y3 y4\r## 1 10 10 10 8 8.04 9.14 7.46 6.58\r## 2 8 8 8 8 6.95 8.14 6.77 5.76\r## 3 13 13 13 8 7.58 8.74 12.74 7.71\r## 4 9 9 9 8 8.81 8.77 7.11 8.84\r## 5 11 11 11 8 8.33 9.26 7.81 8.47\r## 6 14 14 14 8 9.96 8.10 8.84 7.04\r## 7 6 6 6 8 7.24 6.13 6.08 5.25\r## 8 4 4 4 19 4.26 3.10 5.39 12.50\r## 9 12 12 12 8 10.84 9.13 8.15 5.56\r## 10 7 7 7 8 4.82 7.26 6.42 7.91\r## 11 5 5 5 8 5.68 4.74 5.73 6.89\r Podemos transformar esse banco de dados rapidamente usando um dos argumentos de pivot_longer, chamado names_pattern.\nanscombe %\u0026gt;% pivot_longer(everything(),\rnames_to = c(\u0026quot;.value\u0026quot;, \u0026quot;set\u0026quot;),\rnames_pattern = \u0026quot;(.)(.)\u0026quot;)\r ## # A tibble: 44 x 3\r## set x y\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 10 8.04\r## 2 2 10 9.14\r## 3 3 10 7.46\r## 4 4 8 6.58\r## 5 1 8 6.95\r## 6 2 8 8.14\r## 7 3 8 6.77\r## 8 4 8 5.76\r## 9 1 13 7.58\r## 10 2 13 8.74\r## # ... with 34 more rows\r Esse exemplo √© interessante, porque ele se aproveita de uma \u0026ldquo;regular expression\u0026rdquo;, tema da parte do nosso curso em que falaremos sobre manipula√ß√£o de strings com o stringr. Resumidas as contas, as colunas se chamam \u0026ldquo;x1, x2, x3 \u0026hellip;\u0026rdquo; e a string \u0026ldquo;(.)(.)\u0026rdquo; indica que h√° dois \u0026ldquo;grupos\u0026rdquo; formados por um caractere cada. A string \u0026ldquo;.value\u0026rdquo; que vai no argumento de cima √© um atalho da fun√ß√£o para dizer \u0026ldquo;pegue o valor de todas as c√©lulas das vari√°veis selecionadas\u0026rdquo;, aqui, todas. Ou seja, ele indica para a fun√ß√£o que o primeiro caractere \u0026ldquo;x\u0026rdquo; ou \u0026ldquo;y\u0026rdquo; definir√° uma nova vari√°vel e armazenar√° os valores das celulas, enquanto o segundo grupo \u0026ldquo;1\u0026rdquo;, \u0026ldquo;2\u0026rdquo;, \u0026ldquo;3\u0026rdquo; ou \u0026ldquo;4\u0026rdquo; formar√° uma segunda vari√°vel chamada \u0026ldquo;set\u0026rdquo; que cont√©m apenas os nomes das colunas. Deu um n√≥ na cabe√ßa?\nUma √∫ltima preocupa√ß√£o ao utilizar a reformata√ß√£o de dados √© o que ocorre com os valores NA. Vejamos este exemplo:\nacoes \u0026lt;- tibble(\rano = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),\rqdr = c( 1, 2, 3, 4, 2, 3, 4),\rlucro = c(1.88, 0.59, 0.35, NA, 0.92, 0.17, 2.66)\r)\r Existem dois tipos de valor nulo, expl√≠cito se diz de um valor nulo como aquele NA que aparece na vari√°vel lucro. Impl√≠cito √© o valor que ocorre no primeiro quadrimestre de 2016, onde sequer foi adicionada uma linha no banco de dados. Os valores impl√≠citos s√£o muito sacanas, porque eles n√£o s√£o imediatamente vis√≠veis.\nacoes %\u0026gt;% pivot_wider(names_from = ano, values_from = lucro)\r ## # A tibble: 4 x 3\r## qdr `2015` `2016`\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 1.88 NA ## 2 2 0.59 0.92\r## 3 3 0.35 0.17\r## 4 4 NA 2.66\r Ao transformar o banco, o valor impl√≠cito ficou expl√≠cito. Caso voc√™ n√£o esteja interessado neste valor, voc√™ pode passar o values_drop_na durante a transforma√ß√£o de volta ao formato original.\nacoes %\u0026gt;% pivot_wider(names_from = ano, values_from = lucro) %\u0026gt;% pivot_longer(c(`2015`, `2016`),\rnames_to = \u0026quot;ano\u0026quot;,\rvalues_to = \u0026quot;lucro\u0026quot;,\rvalues_drop_na = TRUE)\r ## # A tibble: 6 x 3\r## qdr ano lucro\r## \u0026lt;dbl\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 1 2015 1.88\r## 2 2 2015 0.59\r## 3 2 2016 0.92\r## 4 3 2015 0.35\r## 5 3 2016 0.17\r## 6 4 2016 2.66\r Que faz os valores missing desaparecem.\ncomplete pode ser usada pra tornar valores impl√≠citos, expl√≠citos! A fun√ß√£o toma todas as colunas pedidas e verifica todas as combina√ß√µes poss√≠veis de valores, preenchendo as lacunas com NA. Cuidado ao utilizar complete com valores num√©ricos ou bancos de dados muito grandes, pois o n√∫mero de combina√ß√µes pode ser infinitamente grande e travar sua sess√£o.\nacoes %\u0026gt;% complete(ano, qdr)\r ## # A tibble: 8 x 3\r## ano qdr lucro\r## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2015 1 1.88\r## 2 2015 2 0.59\r## 3 2015 3 0.35\r## 4 2015 4 NA ## 5 2016 1 NA ## 6 2016 2 0.92\r## 7 2016 3 0.17\r## 8 2016 4 2.66\r Pra encerrar, fill serve para aqueles casos em que um valor missing indica que a √∫ltima observa√ß√£o deve ser repetida. Pesquisadores brasileiros das antigas podem lembrar-se do Censo de 1991, em que o IBGE registrava os arquivos de dom√≠cilio e pessoas com esse sistema. Em ingl√™s, isso se chama LOCF, ou \u0026ldquo;last observation carried forward\u0026rdquo;.\ntreatment \u0026lt;- tribble(\r~ person, ~ treatment, ~response,\r\u0026quot;Derrick Whitmore\u0026quot;, 1, 7,\rNA, 2, 10,\rNA, 3, 9,\r\u0026quot;Katherine Burke\u0026quot;, 1, 4\r)\rtreatment\r ## # A tibble: 4 x 3\r## person treatment response\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Derrick Whitmore 1 7\r## 2 \u0026lt;NA\u0026gt; 2 10\r## 3 \u0026lt;NA\u0026gt; 3 9\r## 4 Katherine Burke 1 4\r treatment %\u0026gt;% fill(person)\r ## # A tibble: 4 x 3\r## person treatment response\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Derrick Whitmore 1 7\r## 2 Derrick Whitmore 2 10\r## 3 Derrick Whitmore 3 9\r## 4 Katherine Burke 1 4\r Tidyr tem tamb√©m outras funcionalidades relevantes para modelagem estat√≠stica, mas acho que isso sai um pouco do escopo do curso. Quem sabe a gente n√£o faz um curso posterior s√≥ sobre modelagem no tidyverse?\nRevis√£o readr O pacote readr apresenta uma fam√≠lia de fun√ß√µes para substituir as fun√ß√µes do base relacionadas a importa√ß√£o de arquivos em formato texto, seja delimitado ou largura-fixa. S√£o elas,\n read_delim read_csv read_csv2 read_tsv read_table read_fwf  E assim sucessivamente. Durante o processo de importa√ß√£o, voc√™ pode querer especificar o tipo de coluna com cols ou cols_only, usando o argumento col_types. Ou use uma string do tipo \u0026ldquo;ddcdiDT\u0026rdquo; em que cada letra √© um tipo de vari√°vel.\n col_integer col_double col_factor col_character  Etc. Voc√™ tamb√©m pode querer definir caracter√≠sticas de localiza√ß√£o, como a codifica√ß√£o de caracteres, os separadores de decimal e de milhar e etc. A melhor forma de fazer isso √© definir um locale.\nAh, e voc√™ sempre pode salvar com write_, inclusive salvando/lendo compactado para bzip, gzip ou xzip.\ntibble Tibbles s√£o uma vers√£o do data.frame com algumas regrinhas novas. Vou apenas repet√≠-las aqui de forma resumida.\n tibbles tem um m√©todo print mais bonito e amig√°vel, especialmente para bancos com muitas observa√ß√µes e vari√°veis. elas s√£o estritas com opera√ß√µes de subsetting com [ e $. elas n√£o aceita a reciclagem de argumento de tamanho diferente de 1.  tidyr Tidyr √© um pacote de reformata√ß√£o de bancos, criando novas linhas e colunas a partir da reorganiza√ß√£o das vari√°veis e valores existentes. Suas principais opera√ß√µes s√£o:\n pivot_longer para converter colunas em linhas pivot_wider para converter linhas em colunas separate para separar uma coluna em v√°rias com base em caracteres unite para unir diversas colunas em uma com base em caracteres  Ufa. Acabou n√©? Posso ir dormir j√°? Claro, s√≥ fazer uns exerc√≠cios!\nExerc√≠cios  Como voc√™ importaria o banco \u0026ldquo;epa78.csv\u0026rdquo;  file \u0026lt;- readr_example(\u0026quot;epa78.txt\u0026quot;)\r Importe o banco \u0026ldquo;challenge.csv\u0026rdquo; e resolva os problemas com o tipo da coluna.  file \u0026lt;- readr_example(\u0026quot;challenge.csv\u0026quot;)\r Com o banco sala_aula dado a seguir, transforme-o para que ele contenha as vari√°veis nome, avalia√ß√£o e nota.  sala_aula \u0026lt;- tribble(\r~name, ~teste1, ~teste2, ~prova1,\r\u0026quot;Billy\u0026quot;, \u0026quot;\u0026lt;NA\u0026gt;\u0026quot;, \u0026quot;D\u0026quot; , \u0026quot;C\u0026quot;,\r\u0026quot;Suzy\u0026quot;, \u0026quot;F\u0026quot;, \u0026quot;\u0026lt;NA\u0026gt;\u0026quot;, \u0026quot;\u0026lt;NA\u0026gt;\u0026quot;,\r\u0026quot;Lionel\u0026quot;, \u0026quot;B\u0026quot;, \u0026quot;C\u0026quot; , \u0026quot;B\u0026quot;,\r\u0026quot;Jenny\u0026quot;, \u0026quot;A\u0026quot;, \u0026quot;A\u0026quot; , \u0026quot;B\u0026quot;\r)\r Transforme o banco relig_income para que ele contenha as colunas religi√£o, renda e frequ√™ncia.  relig_income\r ## # A tibble: 18 x 11\r## religion `\u0026lt;$10k` `$10-20k` `$20-30k` `$30-40k` `$40-50k` `$50-75k` `$75-100k`\r## \u0026lt;chr\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 Agnostic 27 34 60 81 76 137 122\r## 2 Atheist 12 27 37 52 35 70 73\r## 3 Buddhist 27 21 30 34 33 58 62\r## 4 Catholic 418 617 732 670 638 1116 949\r## 5 Don‚Äôt k~ 15 14 15 11 10 35 21\r## 6 Evangel~ 575 869 1064 982 881 1486 949\r## 7 Hindu 1 9 7 9 11 34 47\r## 8 Histori~ 228 244 236 238 197 223 131\r## 9 Jehovah~ 20 27 24 24 21 30 15\r## 10 Jewish 19 19 25 25 30 95 69\r## 11 Mainlin~ 289 495 619 655 651 1107 939\r## 12 Mormon 29 40 48 51 56 112 85\r## 13 Muslim 6 7 9 10 9 23 16\r## 14 Orthodox 13 17 23 32 32 47 38\r## 15 Other C~ 9 7 11 13 13 14 18\r## 16 Other F~ 20 33 40 46 49 63 46\r## 17 Other W~ 5 2 3 4 2 7 3\r## 18 Unaffil~ 217 299 374 365 341 528 407\r## # ... with 3 more variables: $100-150k \u0026lt;dbl\u0026gt;, \u0026gt;150k \u0026lt;dbl\u0026gt;,\r## # Don't know/refused \u0026lt;dbl\u0026gt;\r Transforme o banco billboard para que ele contenha apenas uma coluna \u0026ldquo;semana\u0026rdquo; e uma coluna com a posi√ß√£o da m√∫sica no ranking.  # Dica, voc√™ pode selecionar v√°rias colunas usando o atalho wk1:wk76\rbillboard  ## # A tibble: 317 x 79\r## artist track date.entered wk1 wk2 wk3 wk4 wk5 wk6 wk7 wk8\r## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;date\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt;\r## 1 2 Pac Baby D~ 2000-02-26 87 82 72 77 87 94 99 NA\r## 2 2Ge+her The Ha~ 2000-09-02 91 87 92 NA NA NA NA NA\r## 3 3 Doors~ Krypto~ 2000-04-08 81 70 68 67 66 57 54 53\r## 4 3 Doors~ Loser 2000-10-21 76 76 72 69 67 65 55 59\r## 5 504 Boyz Wobble~ 2000-04-15 57 34 25 17 17 31 36 49\r## 6 98^0 Give M~ 2000-08-19 51 39 34 26 26 19 2 2\r## 7 A*Teens Dancin~ 2000-07-08 97 97 96 95 100 NA NA NA\r## 8 Aaliyah I Don'~ 2000-01-29 84 62 51 41 38 35 35 38\r## 9 Aaliyah Try Ag~ 2000-03-18 59 53 38 28 21 18 16 14\r## 10 Adams, ~ Open M~ 2000-08-26 76 76 74 69 68 67 61 58\r## # ... with 307 more rows, and 68 more variables: wk9 \u0026lt;dbl\u0026gt;, wk10 \u0026lt;dbl\u0026gt;,\r## # wk11 \u0026lt;dbl\u0026gt;, wk12 \u0026lt;dbl\u0026gt;, wk13 \u0026lt;dbl\u0026gt;, wk14 \u0026lt;dbl\u0026gt;, wk15 \u0026lt;dbl\u0026gt;, wk16 \u0026lt;dbl\u0026gt;,\r## # wk17 \u0026lt;dbl\u0026gt;, wk18 \u0026lt;dbl\u0026gt;, wk19 \u0026lt;dbl\u0026gt;, wk20 \u0026lt;dbl\u0026gt;, wk21 \u0026lt;dbl\u0026gt;, wk22 \u0026lt;dbl\u0026gt;,\r## # wk23 \u0026lt;dbl\u0026gt;, wk24 \u0026lt;dbl\u0026gt;, wk25 \u0026lt;dbl\u0026gt;, wk26 \u0026lt;dbl\u0026gt;, wk27 \u0026lt;dbl\u0026gt;, wk28 \u0026lt;dbl\u0026gt;,\r## # wk29 \u0026lt;dbl\u0026gt;, wk30 \u0026lt;dbl\u0026gt;, wk31 \u0026lt;dbl\u0026gt;, wk32 \u0026lt;dbl\u0026gt;, wk33 \u0026lt;dbl\u0026gt;, wk34 \u0026lt;dbl\u0026gt;,\r## # wk35 \u0026lt;dbl\u0026gt;, wk36 \u0026lt;dbl\u0026gt;, wk37 \u0026lt;dbl\u0026gt;, wk38 \u0026lt;dbl\u0026gt;, wk39 \u0026lt;dbl\u0026gt;, wk40 \u0026lt;dbl\u0026gt;,\r## # wk41 \u0026lt;dbl\u0026gt;, wk42 \u0026lt;dbl\u0026gt;, wk43 \u0026lt;dbl\u0026gt;, wk44 \u0026lt;dbl\u0026gt;, wk45 \u0026lt;dbl\u0026gt;, wk46 \u0026lt;dbl\u0026gt;,\r## # wk47 \u0026lt;dbl\u0026gt;, wk48 \u0026lt;dbl\u0026gt;, wk49 \u0026lt;dbl\u0026gt;, wk50 \u0026lt;dbl\u0026gt;, wk51 \u0026lt;dbl\u0026gt;, wk52 \u0026lt;dbl\u0026gt;,\r## # wk53 \u0026lt;dbl\u0026gt;, wk54 \u0026lt;dbl\u0026gt;, wk55 \u0026lt;dbl\u0026gt;, wk56 \u0026lt;dbl\u0026gt;, wk57 \u0026lt;dbl\u0026gt;, wk58 \u0026lt;dbl\u0026gt;,\r## # wk59 \u0026lt;dbl\u0026gt;, wk60 \u0026lt;dbl\u0026gt;, wk61 \u0026lt;dbl\u0026gt;, wk62 \u0026lt;dbl\u0026gt;, wk63 \u0026lt;dbl\u0026gt;, wk64 \u0026lt;dbl\u0026gt;,\r## # wk65 \u0026lt;dbl\u0026gt;, wk66 \u0026lt;lgl\u0026gt;, wk67 \u0026lt;lgl\u0026gt;, wk68 \u0026lt;lgl\u0026gt;, wk69 \u0026lt;lgl\u0026gt;, wk70 \u0026lt;lgl\u0026gt;,\r## # wk71 \u0026lt;lgl\u0026gt;, wk72 \u0026lt;lgl\u0026gt;, wk73 \u0026lt;lgl\u0026gt;, wk74 \u0026lt;lgl\u0026gt;, wk75 \u0026lt;lgl\u0026gt;, wk76 \u0026lt;lgl\u0026gt;\r  Experimente fazer o caminho inverso dos exerc√≠cios 3 a 5, devolvendo os datasets ao seu formato original. O que voc√™ observou?\n  O que os argumentos extra e fill em separate fazem? Utilize o exemplo a seguir como guia.\n  tibble(x = c(\u0026quot;a,b,c\u0026quot;, \u0026quot;d,e,f,g\u0026quot;, \u0026quot;h,i,j\u0026quot;)) %\u0026gt;% separate(x, c(\u0026quot;um\u0026quot;, \u0026quot;dois\u0026quot;, \u0026quot;tres\u0026quot;))\r ## Warning: Expected 3 pieces. Additional pieces discarded in 1 rows [2].\r ## # A tibble: 3 x 3\r## um dois tres ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 a b c ## 2 d e f ## 3 h i j\r tibble(x = c(\u0026quot;a,b,c\u0026quot;, \u0026quot;d,e\u0026quot;, \u0026quot;f,g,i\u0026quot;)) %\u0026gt;% separate(x, c(\u0026quot;um\u0026quot;, \u0026quot;dois\u0026quot;, \u0026quot;tres\u0026quot;))\r ## Warning: Expected 3 pieces. Missing pieces filled with `NA` in 1 rows [2].\r ## # A tibble: 3 x 3\r## um dois tres ## \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt; \u0026lt;chr\u0026gt;\r## 1 a b c ## 2 d e \u0026lt;NA\u0026gt; ## 3 f g i\r  Tanto unite como separate possuem um argumento remove. Pra que ele serve e quando voc√™ o utilizaria no valor FALSE?\n  Compare o argumento values_fill em pivot_wider e fill em complete. Qual √© a diferen√ßa?\n  Agradecimentos Esse material √© uma adapta√ß√£o livre das vinhetas dos pacotes tidyr, readr e tibble e do cap√≠tulo Tidy Data do R for Data Science, de Wickham \u0026amp; Grolemund.\n","date":1621468800,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1621468800,"objectID":"0bad4868b4cebec13d81438fabee26ad","permalink":"https://laddem.github.io/courses/tidyverse/dia1/","publishdate":"2021-05-20T00:00:00Z","relpermalink":"/courses/tidyverse/dia1/","section":"courses","summary":"Um modelo de ci√™ncia de dados Uma forma esquem√°tica, mas √∫til de encarar o processo de an√°lise de dados e de produ√ß√£o de conhecimento a partir de informa√ß√µes secund√°rias √© esta figura:","tags":null,"title":"readr, tibble e tidyr","type":"book"},{"authors":[],"categories":null,"content":"\rClick on the Slides button above to view the built-in slides feature.\r\r\rSlides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://laddem.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot;\rif porridge == \u0026quot;blueberry\u0026quot;:\rprint(\u0026quot;Eating...\u0026quot;)\r  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}}\r{{% fragment %}} **Two** {{% /fragment %}}\r{{% fragment %}} Three {{% /fragment %}}\r Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}}\r- Only the speaker can read these notes\r- Press `S` key to view\r{{% /speaker_note %}}\r Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}}\r{{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}}\r{{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}\r  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1,\r.reveal section h2,\r.reveal section h3 {\rcolor: navy;\r}\r  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://laddem.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://laddem.github.io/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://laddem.github.io/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"pt","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://laddem.github.io/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]