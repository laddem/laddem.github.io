<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LADDEM</title>
    <link>https://laddem.github.io/</link>
      <atom:link href="https://laddem.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>LADDEM</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2021 LADDEM</copyright><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://laddem.github.io/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>LADDEM</title>
      <link>https://laddem.github.io/</link>
    </image>
    
    <item>
      <title>readr, tibble e tidyr</title>
      <link>https://laddem.github.io/courses/tidyverse/dia1/</link>
      <pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/courses/tidyverse/dia1/</guid>
      <description>&lt;h2 id=&#34;um-modelo-de-ciência-de-dados&#34;&gt;Um modelo de ciência de dados&lt;/h2&gt;
&lt;p&gt;Uma forma esquemática, mas útil de encarar o processo de análise de dados e de produção de conhecimento a partir de informações secundárias é esta figura:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia1_files/data-science-explore.png&#34; alt=&#34;Data Science Framework&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ela acaba sendo um ponto de partida interessante porque contextualiza a maioria dos pacotes que vamos utilizar. O &lt;code&gt;readr&lt;/code&gt; é uma maneira de facilitar e tornar mais rápida a importação de dados em formatos comuns, como o texto delimitado por separadores e o formato colunado com larguras-fixas utilizado pelo IBGE.&lt;/p&gt;
&lt;p&gt;A &lt;code&gt;tibble&lt;/code&gt; é uma proposta de modernização para o &lt;code&gt;data.frame&lt;/code&gt;, aproveitando a estrutura flexível e poderosa, mas mudando certas convenções, como a conversão de strings para fatores, permitindo a criação de colunas de listas, utilização de nomes mais complexos para colunas, etc.&lt;/p&gt;
&lt;p&gt;O &lt;code&gt;tidyr&lt;/code&gt; é uma forma de reformatar (&lt;em&gt;reshape&lt;/em&gt;) bancos de dados que vêm em formatos que dificultam seu processamento, permitindo que o analista facilmente reconfigure a informação para o formato mais adequado. Ele é o primeiro pacote que veremos sobre a parte de &amp;ldquo;cozinha&amp;rdquo; dos dados, no qual é preciso processar o dado bruto para torná-lo passível de análise.&lt;/p&gt;
&lt;p&gt;O mesmo pode ser dito para os outros pacotes que veremos nos próximos dias. Cada um deles foi pensado para resolver um problema ou facilitar uma rotina de trabalho relacionada com um dos passos descritos acima.&lt;/p&gt;
&lt;h3 id=&#34;programação-literária&#34;&gt;Programação literária&lt;/h3&gt;
&lt;p&gt;Vários dos conceitos que guiam o design do &lt;code&gt;tidyverse&lt;/code&gt; são orientados por uma certa filosofia. Esta filosofia dita que a principal preocupação por trás de um programa não é que ele funcione. Eventualmente e com um pouco de persistência, é quase sempre possível chegar a uma solução técnica adequada. A principal questão é que o programa é uma ferramenta de comunicação com outras pessoas que o lerão, seja seus colegas, colaboradores, alunos ou você mesmo, daqui a 2 anos, quando lembrar que você já escreveu um programa para aquela tarefa. Trago aqui alguns trechos de &lt;em&gt;Literate Programming&lt;/em&gt;, de Donald Knuth (1984), traduzidos livremente por este que vos fala:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Creio que chegou a hora de melhorar significativamente a documentação dos programas, e que podemos atingir este objetivo tratando programas como obras literárias. Por isso o título: &amp;ldquo;Programação Literária&amp;rdquo;. Abandonemos os velhos hábitos de construir programas: ao invés de imaginar que nossa tarefa principal é instruir um computador sobre o que deve ser feito, concentremo-nos em explicar aos seres humanos o que queremos que o computador faça. O praticante da programação literária pode ser visto como um ensaísta, cuja principal preocupação é com a clareza da exposição e a excelência no estilo. Tal autor, com um dicionário na mão, escolhe os nomes das variáveis com cuidado e explica claramente seu significado. Ele ou ela esmera por um programa que é compreensível porque seus conceitos foram introduzidos na melhor ordem possível para o entendimento humano, utilizando uma mistura de métodos formais e informais que se complementam.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Assim, várias das escolhas feitas na construção de &lt;code&gt;tidyverse&lt;/code&gt; procuram reforçar essa característica de interpretabilidade dos programas, como a ordem lógica das operações com o pipe (&lt;code&gt;%&amp;gt;%&lt;/code&gt;), funções com nomes mais longos e semânticos, a utilização de uma função específica para cada tarefa, ao invés da adaptação de funções genéricas para uma grande variedade de tarefas. O propósito de um código escrito como &lt;code&gt;tidyverse&lt;/code&gt; é que, no limite, a própria síntaxe do código funcione como parte da documentação do programa.&lt;/p&gt;
&lt;h3 id=&#34;o-mistério-do-pipe-&#34;&gt;O mistério do pipe: &lt;code&gt;%&amp;gt;%&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Usuários de longa data do R já podem ter encontrado no mato esse animal estranho e podem ter ficado confusos com seu significado. O pipe é de origem humilde e nasceu nos sistemas Unix há muitas décadas atrás. Seu objetivo é muito simples: e se você tiver uma sequência de computações em que cada uma recebe o resultado daquela feita anteriormente? Claro que você poderia fazer:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- 1:10
y &amp;lt;- diff(x)
mean(y)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mas não seria interessante pular os objetos intermediários e ir direto ao ponto? O pipe vem do pacote &lt;code&gt;magrittr&lt;/code&gt;, mas ele vêm carregado em quase todos os pacotes do tidyverse. Vamos carregar logo o tibble.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Para ter acesso ao pipe, basta carregar um pacote do tidyverse, como tibble, dplyr, tidyr, etc.
# Vamos carregar o tibble agora
library(tibble)
x %&amp;gt;% diff() %&amp;gt;% mean()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vejamos um exemplo mais real, quantos artistas existem no dataset &lt;code&gt;billboard&lt;/code&gt;? Podemos usar &lt;code&gt;unique&lt;/code&gt; e &lt;code&gt;length&lt;/code&gt; para descobrir.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- unique(tidyr::billboard$artist)
length(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 228
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mas com &lt;code&gt;%&amp;gt;%&lt;/code&gt; fica bem melhor:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tidyr::billboard %&amp;gt;% .$artist %&amp;gt;% unique() %&amp;gt;% length()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 228
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, mas como ele funciona? É simples, o pipe carrega o objeto a sua esquerda num ponto &lt;code&gt;.&lt;/code&gt; invisível que é automaticamente passado como o primeiro argumento da função à direita.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- 1:10
mean(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5.5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x %&amp;gt;% mean()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 5.5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OK, mas e se meu argumento não for o primeiro, ainda posso usar pipe? Pode! É só usar explicitamente um ponto no lugar onde você quer aproveitar o efeito:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;iris %&amp;gt;% boxplot(Sepal.Length ~ Species, data = .)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia1_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;O ponto &lt;code&gt;.&lt;/code&gt; depois de &lt;code&gt;data&lt;/code&gt; indica indica que ali deve ser colocado o &lt;code&gt;iris&lt;/code&gt;. O pipe é uma peça chave de muitas funções do &lt;code&gt;tidyverse&lt;/code&gt;, não porque ele seja obrigatório, mas sim porque ele permite expressar sequências de operações numa ordem mais lógica, do tipo: &amp;ldquo;Primeiro faça a, então b, então c, &amp;hellip; &amp;ldquo;, ao contrário da forma como isto é geralmente feito usando parênteses para precedência.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Compare
mean(diff(1:10))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;1:10 %&amp;gt;% diff %&amp;gt;% mean
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E assim fica desmistificado o mistério do pipe! Um último pulo do gato: pelo amor de deus ninguém digita &lt;code&gt;Shift + %, &amp;gt;, Shift + %&lt;/code&gt;, basta usar o atalho: &lt;code&gt;Ctrl + Shift + M&lt;/code&gt; que ele põe um pipe separado por espaços &lt;code&gt;%&amp;gt;%&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;readr&#34;&gt;&lt;code&gt;readr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Usuários do R provavelmente vão estar familiarizados com os nossos leitores de arquivos mais comuns: &lt;code&gt;read.table&lt;/code&gt; e &lt;code&gt;read.csv&lt;/code&gt;. Talvez muitos de vocês já até memorizaram alguns dos argumentos mais comuns. Não é o caso aqui de revisitar esta função, mas o &lt;code&gt;readr&lt;/code&gt; tem muitos paralelos com elas, porque é pensado como uma nova versão da mesma coisa.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Comecemos carregando o readr
library(readr)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;debaixo-do-capô&#34;&gt;Debaixo do capô&lt;/h3&gt;
&lt;p&gt;O readr, como as funções de leitura do &lt;code&gt;base&lt;/code&gt; é uma coleção de &lt;em&gt;parsers&lt;/em&gt;, que transformam texto em objetos R com o tipo desejado.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;parse_number(c(&amp;quot;1&amp;quot;, &amp;quot;20&amp;quot;, &amp;quot;38&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  1 20 38
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;parse_character(c(&amp;quot;banana&amp;quot;, &amp;quot;maçã&amp;quot;, &amp;quot;pêra&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;banana&amp;quot;     &amp;quot;ma&amp;lt;e7&amp;gt;&amp;lt;e3&amp;gt;&amp;quot; &amp;quot;p&amp;lt;ea&amp;gt;ra&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Note os acentos e caracteres especiais
parse_character(c(&amp;quot;banana&amp;quot;, &amp;quot;maçã&amp;quot;, &amp;quot;pêra&amp;quot;), 
                locale = locale(encoding = &amp;quot;Windows-1252&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;banana&amp;quot; &amp;quot;maçã&amp;quot;   &amp;quot;pêra&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;parse_logical(c(&amp;quot;true&amp;quot;, &amp;quot;false&amp;quot;, &amp;quot;true&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  TRUE FALSE  TRUE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Em geral, a gente não precisa descer tanto o nível, a gente vai trabalhar mesmo é com os leitores de dados &amp;ldquo;retangulares&amp;rdquo;. Como os do &lt;code&gt;base&lt;/code&gt;, eles são &lt;code&gt;read_csv&lt;/code&gt;, &lt;code&gt;read_table&lt;/code&gt;, etc. Vamos trabalhar com bancos de dados que já vêm no pacote, para facilitar o processo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Lista os datasets que vem no pacote
readr_example()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;challenge.csv&amp;quot;     &amp;quot;epa78.txt&amp;quot;         &amp;quot;example.log&amp;quot;      
## [4] &amp;quot;fwf-sample.txt&amp;quot;    &amp;quot;massey-rating.txt&amp;quot; &amp;quot;mtcars.csv&amp;quot;       
## [7] &amp;quot;mtcars.csv.bz2&amp;quot;    &amp;quot;mtcars.csv.zip&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Uma coisa que gosto de fazer é olhar como o arquivo está organizado antes de tentar abrí-lo. Muitos de vocês podem fazer isso com &lt;code&gt;readLines&lt;/code&gt;. Ela ganhou sua versão no pacote com &lt;code&gt;read_lines&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Vamos tentar abrir massey-rating.txt
read_lines(readr_example(&amp;quot;massey-rating.txt&amp;quot;), n_max = 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;UCC PAY LAZ KPK  RT   COF BIH DII ENG ACU Rank Team            Conf&amp;quot; 
##  [2] &amp;quot;  1   1   1   1   1     1   1   1   1   1    1 Ohio St          B10 &amp;quot;
##  [3] &amp;quot;  2   2   2   2   2     2   2   2   4   2    2 Oregon           P12 &amp;quot;
##  [4] &amp;quot;  3   4   3   4   3     4   3   4   2   3    3 Alabama          SEC &amp;quot;
##  [5] &amp;quot;  4   3   4   3   4     3   5   3   3   4    4 TCU              B12 &amp;quot;
##  [6] &amp;quot;  6   6   6   5   5     7   6   5   6  11    5 Michigan St      B10 &amp;quot;
##  [7] &amp;quot;  7   7   7   6   7     6  11   8   7   8    6 Georgia          SEC &amp;quot;
##  [8] &amp;quot;  5   5   5   7   6     8   4   6   5   5    7 Florida St       ACC &amp;quot;
##  [9] &amp;quot;  8   8   9   9  10     5   7   7  10   7    8 Baylor           B12 &amp;quot;
## [10] &amp;quot;  9  11   8  13  11    11  12   9  14   9    9 Georgia Tech     ACC &amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Identificando o separador, escolho a função adequada
read_table(readr_example(&amp;quot;massey-rating.txt&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   UCC = col_double(),
##   PAY = col_double(),
##   LAZ = col_double(),
##   KPK = col_double(),
##   RT = col_double(),
##   COF = col_double(),
##   BIH = col_double(),
##   DII = col_double(),
##   ENG = col_double(),
##   ACU = col_double(),
##   Rank = col_double(),
##   Team = col_character(),
##   Conf = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 13
##      UCC   PAY   LAZ   KPK    RT   COF   BIH   DII   ENG   ACU  Rank Team  Conf 
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
##  1     1     1     1     1     1     1     1     1     1     1     1 Ohio~ B10  
##  2     2     2     2     2     2     2     2     2     4     2     2 Oreg~ P12  
##  3     3     4     3     4     3     4     3     4     2     3     3 Alab~ SEC  
##  4     4     3     4     3     4     3     5     3     3     4     4 TCU   B12  
##  5     6     6     6     5     5     7     6     5     6    11     5 Mich~ B10  
##  6     7     7     7     6     7     6    11     8     7     8     6 Geor~ SEC  
##  7     5     5     5     7     6     8     4     6     5     5     7 Flor~ ACC  
##  8     8     8     9     9    10     5     7     7    10     7     8 Bayl~ B12  
##  9     9    11     8    13    11    11    12     9    14     9     9 Geor~ ACC  
## 10    13    10    13    11     8     9    10    11     9    10    10 Miss~ SEC
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como identifiquei que as colunas estavam separadas por espaços, utilizei &lt;code&gt;read_table&lt;/code&gt; cujo delimitador é o espaço &lt;code&gt;&amp;quot; &amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A segunda feature mais interessante do readr, é uma interface para selecionar os tipos de colunas que serão importadas. Vejamos o seguinte exemplo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Vamos abrir mtcars.csv
read_lines(readr_example(&amp;quot;mtcars.csv&amp;quot;), n_max = 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;\&amp;quot;mpg\&amp;quot;,\&amp;quot;cyl\&amp;quot;,\&amp;quot;disp\&amp;quot;,\&amp;quot;hp\&amp;quot;,\&amp;quot;drat\&amp;quot;,\&amp;quot;wt\&amp;quot;,\&amp;quot;qsec\&amp;quot;,\&amp;quot;vs\&amp;quot;,\&amp;quot;am\&amp;quot;,\&amp;quot;gear\&amp;quot;,\&amp;quot;carb\&amp;quot;&amp;quot;
##  [2] &amp;quot;21,6,160,110,3.9,2.62,16.46,0,1,4,4&amp;quot;                                                     
##  [3] &amp;quot;21,6,160,110,3.9,2.875,17.02,0,1,4,4&amp;quot;                                                    
##  [4] &amp;quot;22.8,4,108,93,3.85,2.32,18.61,1,1,4,1&amp;quot;                                                   
##  [5] &amp;quot;21.4,6,258,110,3.08,3.215,19.44,1,0,3,1&amp;quot;                                                 
##  [6] &amp;quot;18.7,8,360,175,3.15,3.44,17.02,0,0,3,2&amp;quot;                                                  
##  [7] &amp;quot;18.1,6,225,105,2.76,3.46,20.22,1,0,3,1&amp;quot;                                                  
##  [8] &amp;quot;14.3,8,360,245,3.21,3.57,15.84,0,0,3,4&amp;quot;                                                  
##  [9] &amp;quot;24.4,4,146.7,62,3.69,3.19,20,1,0,4,2&amp;quot;                                                    
## [10] &amp;quot;22.8,4,140.8,95,3.92,3.15,22.9,1,0,4,2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Identificamos o separador de colunas, selecionamos a função adequada
read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   mpg = col_double(),
##   cyl = col_double(),
##   disp = col_double(),
##   hp = col_double(),
##   drat = col_double(),
##   wt = col_double(),
##   qsec = col_double(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4
##  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4
##  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1
##  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1
##  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2
##  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1
##  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2
##  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2
## 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O console nos mostra que a leitura do banco foi completada, mas também mostra &lt;code&gt;Column Specification&lt;/code&gt;. Isto indica qual o tipo de dado que foi identificado automaticamente numa análise feita pela função  &lt;code&gt;guess_parser&lt;/code&gt;. Em diversos casos, nós podemos querer identificar manualmente as colunas. Vejamos um exemplo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Vamos identificar as colunas com spec
spec_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   mpg = col_double(),
##   cyl = col_double(),
##   disp = col_double(),
##   hp = col_double(),
##   drat = col_double(),
##   wt = col_double(),
##   qsec = col_double(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## cols(
##   mpg = col_double(),
##   cyl = col_double(),
##   disp = col_double(),
##   hp = col_double(),
##   drat = col_double(),
##   wt = col_double(),
##   qsec = col_double(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Copia e cola, modifica as colunas que queremos alterar

spec_cols &amp;lt;- cols(
  mpg = col_double(),
  cyl = col_factor(), # N de cilindros do automóvel
  disp = col_double(),
  hp = col_double(),
  drat = col_double(),
  wt = col_double(),
  qsec = col_double(),
  vs = col_double(),
  am = col_factor(c(&amp;quot;0&amp;quot;, &amp;quot;1&amp;quot;)), # Transmissão automática ou manual
  gear = col_double(),
  carb = col_double()
)

df &amp;lt;- read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), col_types = spec_cols)
df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg cyl    disp    hp  drat    wt  qsec    vs am     gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21   6      160    110  3.9   2.62  16.5     0 1         4     4
##  2  21   6      160    110  3.9   2.88  17.0     0 1         4     4
##  3  22.8 4      108     93  3.85  2.32  18.6     1 1         4     1
##  4  21.4 6      258    110  3.08  3.22  19.4     1 0         3     1
##  5  18.7 8      360    175  3.15  3.44  17.0     0 0         3     2
##  6  18.1 6      225    105  2.76  3.46  20.2     1 0         3     1
##  7  14.3 8      360    245  3.21  3.57  15.8     0 0         3     4
##  8  24.4 4      147.    62  3.69  3.19  20       1 0         4     2
##  9  22.8 4      141.    95  3.92  3.15  22.9     1 0         4     2
## 10  19.2 6      168.   123  3.92  3.44  18.3     1 0         4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Para importar apenas colunas selecionadas, utilize &#39;cols_only()&#39;
spec_cols2 &amp;lt;- cols_only(
  mpg = col_double(),
  cyl = col_factor(), # N de cilindros do automóvel
  am = col_factor(c(&amp;quot;0&amp;quot;, &amp;quot;1&amp;quot;)), # Transmissão automática ou manual
  gear = col_double(),
  carb = col_double()
)

df2 &amp;lt;- read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), col_types = spec_cols2)
df2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 5
##      mpg cyl   am     gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21   6     1         4     4
##  2  21   6     1         4     4
##  3  22.8 4     1         4     1
##  4  21.4 6     0         3     1
##  5  18.7 8     0         3     2
##  6  18.1 6     0         3     1
##  7  14.3 8     0         3     4
##  8  24.4 4     0         4     2
##  9  22.8 4     0         4     2
## 10  19.2 6     0         4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Para indicar os tipos de colunas de um jeito mais sucinto, utilize uma string:

df &amp;lt;- read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), col_types = &amp;quot;dfddddddfdd&amp;quot;)

# Só cuidado pra não perder a conta dos ds!
df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg cyl    disp    hp  drat    wt  qsec    vs am     gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21   6      160    110  3.9   2.62  16.5     0 1         4     4
##  2  21   6      160    110  3.9   2.88  17.0     0 1         4     4
##  3  22.8 4      108     93  3.85  2.32  18.6     1 1         4     1
##  4  21.4 6      258    110  3.08  3.22  19.4     1 0         3     1
##  5  18.7 8      360    175  3.15  3.44  17.0     0 0         3     2
##  6  18.1 6      225    105  2.76  3.46  20.2     1 0         3     1
##  7  14.3 8      360    245  3.21  3.57  15.8     0 0         3     4
##  8  24.4 4      147.    62  3.69  3.19  20       1 0         4     2
##  9  22.8 4      141.    95  3.92  3.15  22.9     1 0         4     2
## 10  19.2 6      168.   123  3.92  3.44  18.3     1 0         4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Você também pode querer definir características de localização, como a codificação de caracteres, os separadores de decimal e de milhar e etc. A melhor forma de fazer isso é definir um &lt;code&gt;locale&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;meu_locale &amp;lt;- locale(encoding = &amp;quot;UTF-8&amp;quot;, decimal_mark = &amp;quot;,&amp;quot;, grouping_mark = &amp;quot;.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Aí é só passar isso pra uma das funções do pacote sob o argumento &lt;code&gt;locale&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), locale = meu_locale)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   mpg = col_number(),
##   cyl = col_double(),
##   disp = col_number(),
##   hp = col_double(),
##   drat = col_number(),
##   wt = col_number(),
##   qsec = col_number(),
##   vs = col_double(),
##   am = col_double(),
##   gear = col_double(),
##   carb = col_double()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1    21     6   160   110    39   262  1646     0     1     4     4
##  2    21     6   160   110    39  2875  1702     0     1     4     4
##  3   228     4   108    93   385   232  1861     1     1     4     1
##  4   214     6   258   110   308  3215  1944     1     0     3     1
##  5   187     8   360   175   315   344  1702     0     0     3     2
##  6   181     6   225   105   276   346  2022     1     0     3     1
##  7   143     8   360   245   321   357  1584     0     0     3     4
##  8   244     4  1467    62   369   319    20     1     0     4     2
##  9   228     4  1408    95   392   315   229     1     0     4     2
## 10   192     6  1676   123   392   344   183     1     0     4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Existe ainda a possibilidade de ler dados colunados com largura-fixa. &lt;code&gt;readr&lt;/code&gt; implementa quatro funções diferentes para ajudar na construção do dicionário:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Nossos dados
x &amp;lt;- readr_example(&amp;quot;fwf-sample.txt&amp;quot;)
read_lines(x, n_max = 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;John Smith          WA        418-Y11-4111&amp;quot;
## [2] &amp;quot;Mary Hartford       CA        319-Z19-4341&amp;quot;
## [3] &amp;quot;Evan Nolan          IL        219-532-c301&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# separados por espaço

dic1 &amp;lt;- fwf_empty(x)
dic1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $begin
## [1]  0  5 20 30
## 
## $end
## [1]  4 13 22 NA
## 
## $skip
## [1] 0
## 
## $col_names
## [1] &amp;quot;X1&amp;quot; &amp;quot;X2&amp;quot; &amp;quot;X3&amp;quot; &amp;quot;X4&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_fwf(file = x, col_positions = dic1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   X1 = col_character(),
##   X2 = col_character(),
##   X3 = col_character(),
##   X4 = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 4
##   X1    X2       X3    X4          
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       
## 1 John  Smith    WA    418-Y11-4111
## 2 Mary  Hartford CA    319-Z19-4341
## 3 Evan  Nolan    IL    219-532-c301
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# indicando a largura da coluna
larguras &amp;lt;- c(20, 10, 12)

dic2 &amp;lt;- fwf_widths(larguras)
dic2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   begin   end col_names
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    
## 1     0    20 X1       
## 2    20    30 X2       
## 3    30    42 X3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_fwf(file = x, col_positions = dic2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   X1 = col_character(),
##   X2 = col_character(),
##   X3 = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   X1            X2    X3          
##   &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       
## 1 John Smith    WA    418-Y11-4111
## 2 Mary Hartford CA    319-Z19-4341
## 3 Evan Nolan    IL    219-532-c301
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# indicando onde cada coluna começa e termina
comeca &amp;lt;- c(1, 21, 30)
termina &amp;lt;- c(20, 29, 42)

dic3 &amp;lt;- fwf_positions(comeca, termina)
dic3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   begin   end col_names
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;    
## 1     0    20 X1       
## 2    20    29 X2       
## 3    29    42 X3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_fwf(file = x, col_positions = dic3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   X1 = col_character(),
##   X2 = col_character(),
##   X3 = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   X1            X2    X3          
##   &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       
## 1 John Smith    WA    418-Y11-4111
## 2 Mary Hartford CA    319-Z19-4341
## 3 Evan Nolan    IL    219-532-c301
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# indicando pares nome-valor
dic4 &amp;lt;- fwf_cols(
  nome = c(1, 20),
  uf = c(21, 29),
  numero = c(30, 42))
dic4
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   begin   end col_names
##   &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;    
## 1     0    20 nome     
## 2    20    29 uf       
## 3    29    42 numero
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_fwf(file = x, col_positions = dic4)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## -- Column specification --------------------------------------------------------
## cols(
##   nome = col_character(),
##   uf = col_character(),
##   numero = col_character()
## )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   nome          uf    numero      
##   &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;       
## 1 John Smith    WA    418-Y11-4111
## 2 Mary Hartford CA    319-Z19-4341
## 3 Evan Nolan    IL    219-532-c301
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Especificar dicionários para arquivos colunados é um pé-no-saco, por sorte, existem pacotes que já fizeram parte desse trabalho por nós. O &lt;code&gt;readr&lt;/code&gt; não melhora muita o serviço manual de construção de dicionários, o que ele oferece é um ganho de performance tremendo. &lt;code&gt;read_fwf&lt;/code&gt; é centenas de vezes mais rápido que o base &lt;code&gt;read.fwf&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Em termos do que o pacote faz, é basicamente isso. A única coisa que falta mencionar é que ele importa os dados como &lt;code&gt;tibbles&lt;/code&gt; ao invés do &lt;code&gt;data.frame&lt;/code&gt; padrão, mas isso já é um ótimo gancho pra nossa próxima parte.&lt;/p&gt;
&lt;h2 id=&#34;tibbles&#34;&gt;&lt;code&gt;tibbles&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Tibbles são basicamente data.frames com um método mais bonitinho de &lt;code&gt;print&lt;/code&gt;. Elas automaticamente se ajustam a largura da sua tela, omitindo as colunas que estouram, e por padrão imprimem só as 10 primeiras observações. Outras características que pessoalmente gosto, é que elas informam o tipo de variável junto com o nome, arrendondam digitos significativos, destacam números grandes, negativos, NAs e etc.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- read_csv(readr_example(&amp;quot;mtcars.csv&amp;quot;), col_types = cols()) # omitir a especificação
df
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 32 x 11
##      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb
##    &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  21       6  160    110  3.9   2.62  16.5     0     1     4     4
##  2  21       6  160    110  3.9   2.88  17.0     0     1     4     4
##  3  22.8     4  108     93  3.85  2.32  18.6     1     1     4     1
##  4  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1
##  5  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2
##  6  18.1     6  225    105  2.76  3.46  20.2     1     0     3     1
##  7  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4
##  8  24.4     4  147.    62  3.69  3.19  20       1     0     4     2
##  9  22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2
## 10  19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4
## # ... with 22 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Do ponto de vista prático, elas funcionam exatamente igual a data.frames, tudo que você pode fazer com um data.frame, você faz com tibbles. O que elas trazem de novidade é:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elas nunca mudam o tipo de dado inputado.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df1 &amp;lt;- data.frame(x = list(1:5, 1:10, 1:20))
df1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    x.1.5 x.1.10 x.1.20
## 1      1      1      1
## 2      2      2      2
## 3      3      3      3
## 4      4      4      4
## 5      5      5      5
## 6      1      6      6
## 7      2      7      7
## 8      3      8      8
## 9      4      9      9
## 10     5     10     10
## 11     1      1     11
## 12     2      2     12
## 13     3      3     13
## 14     4      4     14
## 15     5      5     15
## 16     1      6     16
## 17     2      7     17
## 18     3      8     18
## 19     4      9     19
## 20     5     10     20
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df2 &amp;lt;- tibble(x = list(1:5, 1:10, 1:20))
df2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 1
##   x         
##   &amp;lt;list&amp;gt;    
## 1 &amp;lt;int [5]&amp;gt; 
## 2 &amp;lt;int [10]&amp;gt;
## 3 &amp;lt;int [20]&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Elas nunca ajustam os nomes das variáveis&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;names(data.frame(`nome hipster` = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;nome.hipster&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;names(tibble(`nome hipster` = 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;nome hipster&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ela avalia cada argumento de forma &amp;ldquo;preguiçosa&amp;rdquo; e sequencial&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# erro
data.frame(x = 1:5, y = x ^ 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error in x^2: argumento não-numérico para operador binário
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# funciona
tibble(x = 1:5, y = x ^ 2)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 5 x 2
##       x     y
##   &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1     1
## 2     2     4
## 3     3     9
## 4     4    16
## 5     5    25
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ela nunca utiliza row.names&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;head(data.frame(state.x77))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            Population Income Illiteracy Life.Exp Murder HS.Grad Frost   Area
## Alabama          3615   3624        2.1    69.05   15.1    41.3    20  50708
## Alaska            365   6315        1.5    69.31   11.3    66.7   152 566432
## Arizona          2212   4530        1.8    70.55    7.8    58.1    15 113417
## Arkansas         2110   3378        1.9    70.66   10.1    39.9    65  51945
## California      21198   5114        1.1    71.71   10.3    62.6    20 156361
## Colorado         2541   4884        0.7    72.06    6.8    63.9   166 103766
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;as_tibble(state.x77)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 50 x 8
##    Population Income Illiteracy `Life Exp` Murder `HS Grad` Frost   Area
##         &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
##  1       3615   3624        2.1       69.0   15.1      41.3    20  50708
##  2        365   6315        1.5       69.3   11.3      66.7   152 566432
##  3       2212   4530        1.8       70.6    7.8      58.1    15 113417
##  4       2110   3378        1.9       70.7   10.1      39.9    65  51945
##  5      21198   5114        1.1       71.7   10.3      62.6    20 156361
##  6       2541   4884        0.7       72.1    6.8      63.9   166 103766
##  7       3100   5348        1.1       72.5    3.1      56     139   4862
##  8        579   4809        0.9       70.1    6.2      54.6   103   1982
##  9       8277   4815        1.3       70.7   10.7      52.6    11  54090
## 10       4931   4091        2         68.5   13.9      40.6    60  58073
## # ... with 40 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Ela muda a &amp;ldquo;regra da reciclagem&amp;rdquo;: apenas são aceitos vetores unitários ou vetores de tamanho igual aos demais&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data.frame(x = 1:10, y = 1:5)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     x y
## 1   1 1
## 2   2 2
## 3   3 3
## 4   4 4
## 5   5 5
## 6   6 1
## 7   7 2
## 8   8 3
## 9   9 4
## 10 10 5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# erro
tibble(x = 1:10, y = 1:5)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error: Tibble columns must have compatible sizes.
## * Size 10: Existing data.
## * Size 5: Column `y`.
## i Only values of size one are recycled.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tibble(x = 1:10, y = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 2
##        x     y
##    &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt;
##  1     1     1
##  2     2     1
##  3     3     1
##  4     4     1
##  5     5     1
##  6     6     1
##  7     7     1
##  8     8     1
##  9     9     1
## 10    10     1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tibble(x = 1:10, y = c(1:5, 1:5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 2
##        x     y
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
##  1     1     1
##  2     2     2
##  3     3     3
##  4     4     4
##  5     5     5
##  6     6     1
##  7     7     2
##  8     8     3
##  9     9     4
## 10    10     5
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Tibbles são estritas com relação as operações de subsetting com &lt;code&gt;[&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df1 &amp;lt;- data.frame(x = 1:3, y = 3:1)
class(df1[,1:2])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;data.frame&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;class(df1[,1])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;integer&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df2 &amp;lt;- tibble(x = 1:3, y = 3:1)
class(df2[, 1:2])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;tbl_df&amp;quot;     &amp;quot;tbl&amp;quot;        &amp;quot;data.frame&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;class(df2[, 1])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;tbl_df&amp;quot;     &amp;quot;tbl&amp;quot;        &amp;quot;data.frame&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Se quiser extrair só uma coluna, utilize &#39;[[&#39; ou &#39;$&#39;
class(df2[[1]])
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;integer&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;class(df2$x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;integer&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Elas também não aceitam &amp;lsquo;partial matching&amp;rsquo; de nomes de variáveis.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- data.frame(nome_de_cavalo = 1)
df$nome
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df2 &amp;lt;- tibble(nome_de_cavalo = 1)
df2$nome
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Unknown or uninitialised column: `nome`.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## NULL
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;tidyr&#34;&gt;&lt;code&gt;tidyr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Ok, nossos dados estão no R, mas, muitas vezes, não estão no formato adequado. De maneira geral, analistas de dados vão dar preferência a um formato parecido com este:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia1_files/tidy-1.png&#34; alt=&#34;Tidy Data&#34;&gt;&lt;/p&gt;
&lt;p&gt;Isto tem uma razão de ser que deve tornar-se óbvia quando tentarmos realizar as operações de transformação de variáveis, visualização, modelos, etc. Porém, muitas vezes outras considerações são feitas na hora registrar os dados, armazená-los, apresentá-los ao público, por isso, frequentemente nossos dados não estão no formato tidy e precisam ser reformatados. Essa é uma das principais tarefas do &lt;code&gt;tidyr&lt;/code&gt; e é nela que vamos nos concentrar.&lt;/p&gt;
&lt;p&gt;Atente que reformatação, como muitos outros aspectos da análise de dados, não é receita de bolo. Muitas vezes o formato desejado não é óbvio, muito menos os passos necessários para chegar lá. Porém, vou apresentar as ferramentas e alguns exemplos simples que cobrem muitos dos nossos casos de uso.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyr)
who
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 7,240 x 60
##    country  iso2  iso3   year new_sp_m014 new_sp_m1524 new_sp_m2534 new_sp_m3544
##    &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;       &amp;lt;int&amp;gt;        &amp;lt;int&amp;gt;        &amp;lt;int&amp;gt;        &amp;lt;int&amp;gt;
##  1 Afghani~ AF    AFG    1980          NA           NA           NA           NA
##  2 Afghani~ AF    AFG    1981          NA           NA           NA           NA
##  3 Afghani~ AF    AFG    1982          NA           NA           NA           NA
##  4 Afghani~ AF    AFG    1983          NA           NA           NA           NA
##  5 Afghani~ AF    AFG    1984          NA           NA           NA           NA
##  6 Afghani~ AF    AFG    1985          NA           NA           NA           NA
##  7 Afghani~ AF    AFG    1986          NA           NA           NA           NA
##  8 Afghani~ AF    AFG    1987          NA           NA           NA           NA
##  9 Afghani~ AF    AFG    1988          NA           NA           NA           NA
## 10 Afghani~ AF    AFG    1989          NA           NA           NA           NA
## # ... with 7,230 more rows, and 52 more variables: new_sp_m4554 &amp;lt;int&amp;gt;,
## #   new_sp_m5564 &amp;lt;int&amp;gt;, new_sp_m65 &amp;lt;int&amp;gt;, new_sp_f014 &amp;lt;int&amp;gt;,
## #   new_sp_f1524 &amp;lt;int&amp;gt;, new_sp_f2534 &amp;lt;int&amp;gt;, new_sp_f3544 &amp;lt;int&amp;gt;,
## #   new_sp_f4554 &amp;lt;int&amp;gt;, new_sp_f5564 &amp;lt;int&amp;gt;, new_sp_f65 &amp;lt;int&amp;gt;,
## #   new_sn_m014 &amp;lt;int&amp;gt;, new_sn_m1524 &amp;lt;int&amp;gt;, new_sn_m2534 &amp;lt;int&amp;gt;,
## #   new_sn_m3544 &amp;lt;int&amp;gt;, new_sn_m4554 &amp;lt;int&amp;gt;, new_sn_m5564 &amp;lt;int&amp;gt;,
## #   new_sn_m65 &amp;lt;int&amp;gt;, new_sn_f014 &amp;lt;int&amp;gt;, new_sn_f1524 &amp;lt;int&amp;gt;,
## #   new_sn_f2534 &amp;lt;int&amp;gt;, new_sn_f3544 &amp;lt;int&amp;gt;, new_sn_f4554 &amp;lt;int&amp;gt;,
## #   new_sn_f5564 &amp;lt;int&amp;gt;, new_sn_f65 &amp;lt;int&amp;gt;, new_ep_m014 &amp;lt;int&amp;gt;,
## #   new_ep_m1524 &amp;lt;int&amp;gt;, new_ep_m2534 &amp;lt;int&amp;gt;, new_ep_m3544 &amp;lt;int&amp;gt;,
## #   new_ep_m4554 &amp;lt;int&amp;gt;, new_ep_m5564 &amp;lt;int&amp;gt;, new_ep_m65 &amp;lt;int&amp;gt;,
## #   new_ep_f014 &amp;lt;int&amp;gt;, new_ep_f1524 &amp;lt;int&amp;gt;, new_ep_f2534 &amp;lt;int&amp;gt;,
## #   new_ep_f3544 &amp;lt;int&amp;gt;, new_ep_f4554 &amp;lt;int&amp;gt;, new_ep_f5564 &amp;lt;int&amp;gt;,
## #   new_ep_f65 &amp;lt;int&amp;gt;, newrel_m014 &amp;lt;int&amp;gt;, newrel_m1524 &amp;lt;int&amp;gt;,
## #   newrel_m2534 &amp;lt;int&amp;gt;, newrel_m3544 &amp;lt;int&amp;gt;, newrel_m4554 &amp;lt;int&amp;gt;,
## #   newrel_m5564 &amp;lt;int&amp;gt;, newrel_m65 &amp;lt;int&amp;gt;, newrel_f014 &amp;lt;int&amp;gt;,
## #   newrel_f1524 &amp;lt;int&amp;gt;, newrel_f2534 &amp;lt;int&amp;gt;, newrel_f3544 &amp;lt;int&amp;gt;,
## #   newrel_f4554 &amp;lt;int&amp;gt;, newrel_f5564 &amp;lt;int&amp;gt;, newrel_f65 &amp;lt;int&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esse é um banco de dados difícil de analisar, ele tem 60 colunas, indicando o número de casos de tuberculose em diversos estágios da doença, por país e ano. O problema é que ao invés de termos algo como:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tribble(
  ~pais, ~ano, ~tipo, ~idade, ~casos,
  &amp;quot;brasil&amp;quot;, 1980, &amp;quot;extrapulmonar&amp;quot;, &amp;quot;15-24&amp;quot;, 10,
  &amp;quot;brasil&amp;quot;, 1990, &amp;quot;relapso&amp;quot;, &amp;quot;15-24&amp;quot;, 10
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 5
##   pais     ano tipo          idade casos
##   &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;         &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1 brasil  1980 extrapulmonar 15-24    10
## 2 brasil  1990 relapso       15-24    10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As informações de tipo de tuberculose e idade dos pacientes estão espalhadas pelas colunas. Pra encurtar a história, precisamos &amp;ldquo;tombar&amp;rdquo; esse banco para que essas colunas se tornem um novo conjunto de variáveis. Vamos passo a passo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Primeiro, vamos excluir as colunas iso2 e iso3, porque elas são a mesma informação redundante
who$iso2 &amp;lt;- NULL
who$iso3 &amp;lt;- NULL

who1 &amp;lt;- pivot_longer(who,
                     cols = c(new_sp_m014:newrel_f65),
                     names_to = &amp;quot;tipo_tb&amp;quot;,
                     values_to = &amp;quot;casos&amp;quot;,
                     values_drop_na = TRUE)
who1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 76,046 x 4
##    country      year tipo_tb      casos
##    &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;int&amp;gt;
##  1 Afghanistan  1997 new_sp_m014      0
##  2 Afghanistan  1997 new_sp_m1524    10
##  3 Afghanistan  1997 new_sp_m2534     6
##  4 Afghanistan  1997 new_sp_m3544     3
##  5 Afghanistan  1997 new_sp_m4554     5
##  6 Afghanistan  1997 new_sp_m5564     2
##  7 Afghanistan  1997 new_sp_m65       0
##  8 Afghanistan  1997 new_sp_f014      5
##  9 Afghanistan  1997 new_sp_f1524    38
## 10 Afghanistan  1997 new_sp_f2534    36
## # ... with 76,036 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nosso primeiro passo é transformar todas as colunas de novos casos em um par de colunas:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cols&lt;/code&gt; indica quais colunas serão tombadas e quais serão mantidas.&lt;/li&gt;
&lt;li&gt;Uma coluna &lt;code&gt;names_to&lt;/code&gt; recebe as categorias da variável.&lt;/li&gt;
&lt;li&gt;Uma coluna &lt;code&gt;values_to&lt;/code&gt; recebe os valores das células.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;values_drop_na&lt;/code&gt; é uma opção para eliminar células vazias.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Essa primeira transformação já nos dá um banco de dados um pouco mais amigável, porém, ainda temos variáveis &amp;ldquo;presas&amp;rdquo; na coluna &lt;code&gt;tipo_tb&lt;/code&gt;. Vamos tentar soltá-las.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# primeiro, corrigir uma pequena inconsistencia:
unique(who1$tipo_tb)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;new_sp_m014&amp;quot;  &amp;quot;new_sp_m1524&amp;quot; &amp;quot;new_sp_m2534&amp;quot; &amp;quot;new_sp_m3544&amp;quot; &amp;quot;new_sp_m4554&amp;quot;
##  [6] &amp;quot;new_sp_m5564&amp;quot; &amp;quot;new_sp_m65&amp;quot;   &amp;quot;new_sp_f014&amp;quot;  &amp;quot;new_sp_f1524&amp;quot; &amp;quot;new_sp_f2534&amp;quot;
## [11] &amp;quot;new_sp_f3544&amp;quot; &amp;quot;new_sp_f4554&amp;quot; &amp;quot;new_sp_f5564&amp;quot; &amp;quot;new_sp_f65&amp;quot;   &amp;quot;new_sn_m014&amp;quot; 
## [16] &amp;quot;new_sn_m1524&amp;quot; &amp;quot;new_sn_m2534&amp;quot; &amp;quot;new_sn_m3544&amp;quot; &amp;quot;new_sn_m4554&amp;quot; &amp;quot;new_sn_m5564&amp;quot;
## [21] &amp;quot;new_sn_m65&amp;quot;   &amp;quot;new_ep_m014&amp;quot;  &amp;quot;new_ep_m1524&amp;quot; &amp;quot;new_ep_m2534&amp;quot; &amp;quot;new_ep_m3544&amp;quot;
## [26] &amp;quot;new_ep_m4554&amp;quot; &amp;quot;new_ep_m5564&amp;quot; &amp;quot;new_ep_m65&amp;quot;   &amp;quot;new_sn_f014&amp;quot;  &amp;quot;newrel_m014&amp;quot; 
## [31] &amp;quot;newrel_f014&amp;quot;  &amp;quot;new_sn_f1524&amp;quot; &amp;quot;new_sn_f2534&amp;quot; &amp;quot;new_sn_f3544&amp;quot; &amp;quot;new_sn_f4554&amp;quot;
## [36] &amp;quot;new_sn_f5564&amp;quot; &amp;quot;new_sn_f65&amp;quot;   &amp;quot;new_ep_f014&amp;quot;  &amp;quot;new_ep_f1524&amp;quot; &amp;quot;new_ep_f2534&amp;quot;
## [41] &amp;quot;new_ep_f3544&amp;quot; &amp;quot;new_ep_f4554&amp;quot; &amp;quot;new_ep_f5564&amp;quot; &amp;quot;new_ep_f65&amp;quot;   &amp;quot;newrel_m1524&amp;quot;
## [46] &amp;quot;newrel_m2534&amp;quot; &amp;quot;newrel_m3544&amp;quot; &amp;quot;newrel_m4554&amp;quot; &amp;quot;newrel_m5564&amp;quot; &amp;quot;newrel_m65&amp;quot;  
## [51] &amp;quot;newrel_f1524&amp;quot; &amp;quot;newrel_f2534&amp;quot; &amp;quot;newrel_f3544&amp;quot; &amp;quot;newrel_f4554&amp;quot; &amp;quot;newrel_f5564&amp;quot;
## [56] &amp;quot;newrel_f65&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Notem que newrel deveria ser new_rel
# Alguns de vocês devem conhecer &#39;gsub&#39;
who1$tipo_tb &amp;lt;- gsub(&amp;quot;newrel&amp;quot;, &amp;quot;new_rel&amp;quot;, who1$tipo_tb)

# Agora, podemos usar outra função chave do tidyr, &#39;separate&#39;
who2 &amp;lt;- who1 %&amp;gt;%  separate(col = tipo_tb,
                           into = c(NA, &amp;quot;tipo_tb&amp;quot;, &amp;quot;sexo_idade&amp;quot;),
                           sep = &amp;quot;_&amp;quot;)
who2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 76,046 x 5
##    country      year tipo_tb sexo_idade casos
##    &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt;
##  1 Afghanistan  1997 sp      m014           0
##  2 Afghanistan  1997 sp      m1524         10
##  3 Afghanistan  1997 sp      m2534          6
##  4 Afghanistan  1997 sp      m3544          3
##  5 Afghanistan  1997 sp      m4554          5
##  6 Afghanistan  1997 sp      m5564          2
##  7 Afghanistan  1997 sp      m65            0
##  8 Afghanistan  1997 sp      f014           5
##  9 Afghanistan  1997 sp      f1524         38
## 10 Afghanistan  1997 sp      f2534         36
## # ... with 76,036 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# E outra passagem de separate para separar a idade do sexo
who3 &amp;lt;- who2 %&amp;gt;% separate(col = sexo_idade,
                          into = c(&amp;quot;sexo&amp;quot;, &amp;quot;idade&amp;quot;),
                          sep = 1)
who3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 76,046 x 6
##    country      year tipo_tb sexo  idade casos
##    &amp;lt;chr&amp;gt;       &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;
##  1 Afghanistan  1997 sp      m     014       0
##  2 Afghanistan  1997 sp      m     1524     10
##  3 Afghanistan  1997 sp      m     2534      6
##  4 Afghanistan  1997 sp      m     3544      3
##  5 Afghanistan  1997 sp      m     4554      5
##  6 Afghanistan  1997 sp      m     5564      2
##  7 Afghanistan  1997 sp      m     65        0
##  8 Afghanistan  1997 sp      f     014       5
##  9 Afghanistan  1997 sp      f     1524     38
## 10 Afghanistan  1997 sp      f     2534     36
## # ... with 76,036 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bem melhor, não acham? Estamos agora com um banco de dados muito mais adequado para uma análise de dados em R. Cada linha é uma observação, cada coluna é uma informação sobre ela.&lt;/p&gt;
&lt;p&gt;Alguns de vocês podem ter reparado que fizemos um caminho em que nosso banco de dados passou de ter muitas colunas para muitas linhas (ficou mais &amp;ldquo;longo&amp;rdquo;) e depois precisamos separar algumas das colunas que criamos em outras (o que fizemos com separate). Podemos facilmente imaginar situações em que queremos fazer o caminho inverso: transformar um banco do formato longo para o formato com mais colunas e unir colunas separadas em uma nova. Vamos ver um exemplo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Exemplo adaptado de https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population
populacao &amp;lt;- tribble(
  ~Rank, ~Country, ~Population,	~&#39;% of world&#39;, ~Day, ~Month, ~Year, ~Source,
  1L,         &amp;quot;China&amp;quot;,    1411778724, &amp;quot;17.9%&amp;quot;,  &amp;quot;1&amp;quot;, &amp;quot;Nov&amp;quot;, &amp;quot;2020&amp;quot;,       &amp;quot;Seventh Census on 2020&amp;quot;,
  2L,         &amp;quot;India&amp;quot;,    1377123716, &amp;quot;17.5%&amp;quot;, &amp;quot;19&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;2021&amp;quot;, &amp;quot;National population clock[3]&amp;quot;,
  3L, &amp;quot;United States&amp;quot;,     331695937, &amp;quot;4.22%&amp;quot;, &amp;quot;19&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;2021&amp;quot;, &amp;quot;National population clock[4]&amp;quot;,
  4L,     &amp;quot;Indonesia&amp;quot;,     271350000, &amp;quot;3.45%&amp;quot;, &amp;quot;31&amp;quot;, &amp;quot;Dec&amp;quot;, &amp;quot;2020&amp;quot;,  &amp;quot;National annual estimate[5]&amp;quot;,
  5L,      &amp;quot;Pakistan&amp;quot;,     225200000, &amp;quot;2.86%&amp;quot;,  &amp;quot;1&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;2021&amp;quot;,             &amp;quot;UN projection[2]&amp;quot;,
  6L,        &amp;quot;Brazil&amp;quot;,     213154869, &amp;quot;2.71%&amp;quot;, &amp;quot;19&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;2021&amp;quot;, &amp;quot;National population clock[6]&amp;quot;,
  7L,       &amp;quot;Nigeria&amp;quot;,     211401000, &amp;quot;2.69%&amp;quot;,  &amp;quot;1&amp;quot;, &amp;quot;Jul&amp;quot;, &amp;quot;2021&amp;quot;,             &amp;quot;UN projection[2]&amp;quot;,
  8L,    &amp;quot;Bangladesh&amp;quot;,     170689832, &amp;quot;2.17%&amp;quot;, &amp;quot;19&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;2021&amp;quot;, &amp;quot;National population clock[7]&amp;quot;,
  9L,        &amp;quot;Russia&amp;quot;,     146171015, &amp;quot;1.86%&amp;quot;,  &amp;quot;1&amp;quot;, &amp;quot;Jan&amp;quot;, &amp;quot;2021&amp;quot;,  &amp;quot;National annual estimate[8]&amp;quot;,
  10L,       &amp;quot;Mexico&amp;quot;,     126014024, &amp;quot;1.60%&amp;quot;,  &amp;quot;2&amp;quot;, &amp;quot;Mar&amp;quot;, &amp;quot;2020&amp;quot;,        &amp;quot;2020 census result[9]&amp;quot;
)
populacao
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 8
##     Rank Country     Population `% of world` Day   Month Year  Source           
##    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;            &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;            
##  1     1 China       1411778724 17.9%        1     Nov   2020  Seventh Census o~
##  2     2 India       1377123716 17.5%        19    May   2021  National populat~
##  3     3 United Sta~  331695937 4.22%        19    May   2021  National populat~
##  4     4 Indonesia    271350000 3.45%        31    Dec   2020  National annual ~
##  5     5 Pakistan     225200000 2.86%        1     Jul   2021  UN projection[2] 
##  6     6 Brazil       213154869 2.71%        19    May   2021  National populat~
##  7     7 Nigeria      211401000 2.69%        1     Jul   2021  UN projection[2] 
##  8     8 Bangladesh   170689832 2.17%        19    May   2021  National populat~
##  9     9 Russia       146171015 1.86%        1     Jan   2021  National annual ~
## 10    10 Mexico       126014024 1.60%        2     Mar   2020  2020 census resu~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Imagine que, por qualquer motivo, você prefira trabalhar com uma variável &amp;ldquo;Data&amp;rdquo; ao invés de dia, mês e ano. Podemos usar &lt;code&gt;unite&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;populacao2 &amp;lt;- populacao %&amp;gt;% unite(col = Data, Day, Month, Year, sep = &amp;quot; &amp;quot;)
populacao2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 6
##     Rank Country      Population `% of world` Data       Source                 
##    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;                  
##  1     1 China        1411778724 17.9%        1 Nov 2020 Seventh Census on 2020 
##  2     2 India        1377123716 17.5%        19 May 20~ National population cl~
##  3     3 United Stat~  331695937 4.22%        19 May 20~ National population cl~
##  4     4 Indonesia     271350000 3.45%        31 Dec 20~ National annual estima~
##  5     5 Pakistan      225200000 2.86%        1 Jul 2021 UN projection[2]       
##  6     6 Brazil        213154869 2.71%        19 May 20~ National population cl~
##  7     7 Nigeria       211401000 2.69%        1 Jul 2021 UN projection[2]       
##  8     8 Bangladesh    170689832 2.17%        19 May 20~ National population cl~
##  9     9 Russia        146171015 1.86%        1 Jan 2021 National annual estima~
## 10    10 Mexico        126014024 1.60%        2 Mar 2020 2020 census result[9]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O outro problema que precisamos resolver frequentemente, é separar um par de variáveis em diversas colunas, fazendo o caminho inverso que fizemos no caso do dataset da OMS.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;us_rent_income
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 104 x 5
##    GEOID NAME       variable estimate   moe
##    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 01    Alabama    income      24476   136
##  2 01    Alabama    rent          747     3
##  3 02    Alaska     income      32940   508
##  4 02    Alaska     rent         1200    13
##  5 04    Arizona    income      27517   148
##  6 04    Arizona    rent          972     4
##  7 05    Arkansas   income      23789   165
##  8 05    Arkansas   rent          709     5
##  9 06    California income      29454   109
## 10 06    California rent         1358     3
## # ... with 94 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No exemplo acima, queremos separar em colunas os valores das variáveis de renda e valor do aluguel. Esse tipo de operação tem um certo grau de abstração que me deu bastante dor de cabeça para entender inicialmente, então vamos olhar com carinho para o que queremos ter depois da transformação.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;us_rent_income2 &amp;lt;- tribble(
  ~GEOID, ~NAME, ~income_estimate, ~rent_estimate, ~income_moe, ~rent_moe,
  &amp;quot;01&amp;quot;, &amp;quot;Alabama&amp;quot;, 24476,  747, 136, 3,
  &amp;quot;02&amp;quot;, &amp;quot;Alaska&amp;quot;, 32940, 1200, 508, 13
)
us_rent_income2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2 x 6
##   GEOID NAME    income_estimate rent_estimate income_moe rent_moe
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;             &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 01    Alabama           24476           747        136        3
## 2 02    Alaska            32940          1200        508       13
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O banco que queremos tem uma cara assim. Ele tem mais colunas novas e menos linhas, já que eu tinha no formato tidy uma variável chamada &amp;ldquo;variable&amp;rdquo; que guardava os valores renda e aluguel e duas colunas que guardavam os valores da estimativa e do moe. Agora, eu vou ter 4 colunas, duas para as estimativas de renda e aluguel e duas para os moes das mesmas variáveis. Como especificar isso para o banco todo? Usando &lt;code&gt;pivot_wider&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;us_rent_income %&amp;gt;% pivot_wider(names_from = variable, values_from = c(estimate, moe))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 52 x 6
##    GEOID NAME                 estimate_income estimate_rent moe_income moe_rent
##    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;                          &amp;lt;dbl&amp;gt;         &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 01    Alabama                        24476           747        136        3
##  2 02    Alaska                         32940          1200        508       13
##  3 04    Arizona                        27517           972        148        4
##  4 05    Arkansas                       23789           709        165        5
##  5 06    California                     29454          1358        109        3
##  6 08    Colorado                       32401          1125        109        5
##  7 09    Connecticut                    35326          1123        195        5
##  8 10    Delaware                       31560          1076        247       10
##  9 11    District of Columbia           43198          1424        681       17
## 10 12    Florida                        25952          1077         70        3
## # ... with 42 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As funções &lt;code&gt;pivot_&lt;/code&gt; tem diversos outros argumentos e cobrem diversos casos de uso. Vejam este exemplo da documentação de &lt;code&gt;pivot_longer&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;anscombe
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    x1 x2 x3 x4    y1   y2    y3    y4
## 1  10 10 10  8  8.04 9.14  7.46  6.58
## 2   8  8  8  8  6.95 8.14  6.77  5.76
## 3  13 13 13  8  7.58 8.74 12.74  7.71
## 4   9  9  9  8  8.81 8.77  7.11  8.84
## 5  11 11 11  8  8.33 9.26  7.81  8.47
## 6  14 14 14  8  9.96 8.10  8.84  7.04
## 7   6  6  6  8  7.24 6.13  6.08  5.25
## 8   4  4  4 19  4.26 3.10  5.39 12.50
## 9  12 12 12  8 10.84 9.13  8.15  5.56
## 10  7  7  7  8  4.82 7.26  6.42  7.91
## 11  5  5  5  8  5.68 4.74  5.73  6.89
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos transformar esse banco de dados rapidamente usando um dos argumentos de &lt;code&gt;pivot_longer&lt;/code&gt;, chamado &lt;code&gt;names_pattern&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;anscombe %&amp;gt;% pivot_longer(everything(),
                          names_to = c(&amp;quot;.value&amp;quot;, &amp;quot;set&amp;quot;),
                          names_pattern = &amp;quot;(.)(.)&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 44 x 3
##    set       x     y
##    &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 1        10  8.04
##  2 2        10  9.14
##  3 3        10  7.46
##  4 4         8  6.58
##  5 1         8  6.95
##  6 2         8  8.14
##  7 3         8  6.77
##  8 4         8  5.76
##  9 1        13  7.58
## 10 2        13  8.74
## # ... with 34 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esse exemplo é interessante, porque ele se aproveita de uma &amp;ldquo;regular expression&amp;rdquo;, tema da parte do nosso curso em que falaremos sobre manipulação de strings com o &lt;code&gt;stringr&lt;/code&gt;. Resumidas as contas, as colunas se chamam &amp;ldquo;x1, x2, x3 &amp;hellip;&amp;rdquo; e a string &amp;ldquo;(.)(.)&amp;rdquo; indica que há dois &amp;ldquo;grupos&amp;rdquo; formados por um caractere cada. A string &amp;ldquo;.value&amp;rdquo; que vai no argumento de cima é um atalho da função para dizer &amp;ldquo;pegue o valor de todas as células das variáveis selecionadas&amp;rdquo;, aqui, todas. Ou seja, ele indica para a função que o primeiro caractere &amp;ldquo;x&amp;rdquo; ou &amp;ldquo;y&amp;rdquo; definirá uma nova variável e armazenará os valores das celulas, enquanto o segundo grupo &amp;ldquo;1&amp;rdquo;, &amp;ldquo;2&amp;rdquo;, &amp;ldquo;3&amp;rdquo; ou &amp;ldquo;4&amp;rdquo; formará uma segunda variável chamada &amp;ldquo;set&amp;rdquo; que contém apenas os nomes das colunas. Deu um nó na cabeça?&lt;/p&gt;
&lt;p&gt;Uma última preocupação ao utilizar a reformatação de dados é o que ocorre com os valores &lt;code&gt;NA&lt;/code&gt;. Vejamos este exemplo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;acoes &amp;lt;- tibble(
  ano   = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
  qdr   = c(   1,    2,    3,    4,    2,    3,    4),
  lucro = c(1.88, 0.59, 0.35,   NA, 0.92, 0.17, 2.66)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Existem dois tipos de valor nulo, &lt;strong&gt;explícito&lt;/strong&gt; se diz de um valor nulo como aquele NA que aparece na variável lucro. &lt;strong&gt;Implícito&lt;/strong&gt; é o valor que ocorre no primeiro quadrimestre de 2016, onde sequer foi adicionada uma linha no banco de dados. Os valores implícitos são muito sacanas, porque eles não são imediatamente visíveis.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;acoes %&amp;gt;% 
  pivot_wider(names_from = ano, values_from = lucro)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##     qdr `2015` `2016`
##   &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;
## 1     1   1.88  NA   
## 2     2   0.59   0.92
## 3     3   0.35   0.17
## 4     4  NA      2.66
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ao transformar o banco, o valor implícito ficou explícito. Caso você não esteja interessado neste valor, você pode passar o &lt;code&gt;values_drop_na&lt;/code&gt; durante a transformação de volta ao formato original.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;acoes %&amp;gt;% 
  pivot_wider(names_from = ano, values_from = lucro) %&amp;gt;% 
  pivot_longer(c(`2015`, `2016`),
               names_to = &amp;quot;ano&amp;quot;,
               values_to = &amp;quot;lucro&amp;quot;,
               values_drop_na = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##     qdr ano   lucro
##   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;
## 1     1 2015   1.88
## 2     2 2015   0.59
## 3     2 2016   0.92
## 4     3 2015   0.35
## 5     3 2016   0.17
## 6     4 2016   2.66
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Que faz os valores missing desaparecem.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;complete&lt;/code&gt; pode ser usada pra tornar valores implícitos, explícitos! A função toma todas as colunas pedidas e verifica todas as combinações possíveis de valores, preenchendo as lacunas com &lt;code&gt;NA&lt;/code&gt;. Cuidado ao utilizar complete com valores numéricos ou bancos de dados muito grandes, pois o número de combinações pode ser infinitamente grande e travar sua sessão.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;acoes %&amp;gt;% complete(ano, qdr)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 3
##     ano   qdr lucro
##   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1  2015     1  1.88
## 2  2015     2  0.59
## 3  2015     3  0.35
## 4  2015     4 NA   
## 5  2016     1 NA   
## 6  2016     2  0.92
## 7  2016     3  0.17
## 8  2016     4  2.66
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pra encerrar, &lt;code&gt;fill&lt;/code&gt; serve para aqueles casos em que um valor missing indica que a última observação deve ser repetida. Pesquisadores brasileiros das antigas podem lembrar-se do Censo de 1991, em que o IBGE registrava os arquivos de domícilio e pessoas com esse sistema. Em inglês, isso se chama LOCF, ou &amp;ldquo;last observation carried forward&amp;rdquo;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;treatment &amp;lt;- tribble(
  ~ person,           ~ treatment, ~response,
  &amp;quot;Derrick Whitmore&amp;quot;, 1,           7,
  NA,                 2,           10,
  NA,                 3,           9,
  &amp;quot;Katherine Burke&amp;quot;,  1,           4
)
treatment
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   person           treatment response
##   &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 Derrick Whitmore         1        7
## 2 &amp;lt;NA&amp;gt;                     2       10
## 3 &amp;lt;NA&amp;gt;                     3        9
## 4 Katherine Burke          1        4
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;treatment %&amp;gt;% fill(person)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 3
##   person           treatment response
##   &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 Derrick Whitmore         1        7
## 2 Derrick Whitmore         2       10
## 3 Derrick Whitmore         3        9
## 4 Katherine Burke          1        4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt; tem também outras funcionalidades relevantes para modelagem estatística, mas acho que isso sai um pouco do escopo do curso. Quem sabe a gente não faz um curso posterior só sobre modelagem no tidyverse?&lt;/p&gt;
&lt;h2 id=&#34;revisão&#34;&gt;Revisão&lt;/h2&gt;
&lt;h3 id=&#34;readr-1&#34;&gt;&lt;code&gt;readr&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;O pacote &lt;code&gt;readr&lt;/code&gt; apresenta uma família de funções para substituir as funções do &lt;code&gt;base&lt;/code&gt; relacionadas a importação de arquivos em formato texto, seja delimitado ou largura-fixa. São elas,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;read_delim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_csv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_csv2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_tsv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_table&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;read_fwf&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;E assim sucessivamente. Durante o processo de importação, você pode querer especificar o tipo de coluna com &lt;code&gt;cols&lt;/code&gt; ou &lt;code&gt;cols_only&lt;/code&gt;, usando o argumento &lt;code&gt;col_types&lt;/code&gt;. Ou use uma string do tipo &amp;ldquo;ddcdiDT&amp;rdquo; em que cada letra é um tipo de variável.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;col_integer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;col_double&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;col_factor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;col_character&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Etc. Você também pode querer definir características de localização, como a codificação de caracteres, os separadores de decimal e de milhar e etc. A melhor forma de fazer isso é definir um &lt;code&gt;locale&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ah, e você sempre pode salvar com &lt;code&gt;write_&lt;/code&gt;, inclusive salvando/lendo compactado para &lt;code&gt;bzip&lt;/code&gt;, &lt;code&gt;gzip&lt;/code&gt; ou &lt;code&gt;xzip&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;tibble&#34;&gt;&lt;code&gt;tibble&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;Tibbles são uma versão do data.frame com algumas regrinhas novas. Vou apenas repetí-las aqui de forma resumida.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tibbles tem um método print mais bonito e amigável, especialmente para bancos com muitas observações e variáveis.&lt;/li&gt;
&lt;li&gt;elas são estritas com operações de subsetting com &lt;code&gt;[&lt;/code&gt; e &lt;code&gt;$&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;elas não aceita a reciclagem de argumento de tamanho diferente de 1.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tidyr-1&#34;&gt;&lt;code&gt;tidyr&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tidyr&lt;/code&gt; é um pacote de reformatação de bancos, criando novas linhas e colunas a partir da reorganização das variáveis e valores existentes. Suas principais operações são:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pivot_longer&lt;/code&gt; para converter colunas em linhas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pivot_wider&lt;/code&gt; para converter linhas em colunas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;separate&lt;/code&gt; para separar uma coluna em várias com base em caracteres&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unite&lt;/code&gt; para unir diversas colunas em uma com base em caracteres&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ufa. Acabou né? Posso ir dormir já? Claro, só fazer uns exercícios!&lt;/p&gt;
&lt;h2 id=&#34;exercícios&#34;&gt;Exercícios&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Como você importaria o banco &amp;ldquo;epa78.csv&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;file &amp;lt;- readr_example(&amp;quot;epa78.txt&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Importe o banco &amp;ldquo;challenge.csv&amp;rdquo; e resolva os problemas com o tipo da coluna.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;file &amp;lt;- readr_example(&amp;quot;challenge.csv&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Com o banco sala_aula dado a seguir, transforme-o para que ele contenha as variáveis nome, avaliação e nota.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;sala_aula &amp;lt;- tribble(
 ~name,    ~teste1,  ~teste2,  ~prova1,
 &amp;quot;Billy&amp;quot;,  &amp;quot;&amp;lt;NA&amp;gt;&amp;quot;,   &amp;quot;D&amp;quot;   ,   &amp;quot;C&amp;quot;,
 &amp;quot;Suzy&amp;quot;,   &amp;quot;F&amp;quot;,      &amp;quot;&amp;lt;NA&amp;gt;&amp;quot;,   &amp;quot;&amp;lt;NA&amp;gt;&amp;quot;,
 &amp;quot;Lionel&amp;quot;, &amp;quot;B&amp;quot;,      &amp;quot;C&amp;quot;   ,   &amp;quot;B&amp;quot;,
 &amp;quot;Jenny&amp;quot;,  &amp;quot;A&amp;quot;,      &amp;quot;A&amp;quot;   ,   &amp;quot;B&amp;quot;
)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;Transforme o banco &lt;code&gt;relig_income&lt;/code&gt; para que ele contenha as colunas religião, renda e frequência.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;relig_income
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 18 x 11
##    religion `&amp;lt;$10k` `$10-20k` `$20-30k` `$30-40k` `$40-50k` `$50-75k` `$75-100k`
##    &amp;lt;chr&amp;gt;      &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;
##  1 Agnostic      27        34        60        81        76       137        122
##  2 Atheist       12        27        37        52        35        70         73
##  3 Buddhist      27        21        30        34        33        58         62
##  4 Catholic     418       617       732       670       638      1116        949
##  5 Don’t k~      15        14        15        11        10        35         21
##  6 Evangel~     575       869      1064       982       881      1486        949
##  7 Hindu          1         9         7         9        11        34         47
##  8 Histori~     228       244       236       238       197       223        131
##  9 Jehovah~      20        27        24        24        21        30         15
## 10 Jewish        19        19        25        25        30        95         69
## 11 Mainlin~     289       495       619       655       651      1107        939
## 12 Mormon        29        40        48        51        56       112         85
## 13 Muslim         6         7         9        10         9        23         16
## 14 Orthodox      13        17        23        32        32        47         38
## 15 Other C~       9         7        11        13        13        14         18
## 16 Other F~      20        33        40        46        49        63         46
## 17 Other W~       5         2         3         4         2         7          3
## 18 Unaffil~     217       299       374       365       341       528        407
## # ... with 3 more variables: $100-150k &amp;lt;dbl&amp;gt;, &amp;gt;150k &amp;lt;dbl&amp;gt;,
## #   Don&#39;t know/refused &amp;lt;dbl&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;Transforme o banco &lt;code&gt;billboard&lt;/code&gt; para que ele contenha apenas uma coluna &amp;ldquo;semana&amp;rdquo; e uma coluna com a posição da música no ranking.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Dica, você pode selecionar várias colunas usando o atalho wk1:wk76
billboard 
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 317 x 79
##    artist   track   date.entered   wk1   wk2   wk3   wk4   wk5   wk6   wk7   wk8
##    &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;   &amp;lt;date&amp;gt;       &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1 2 Pac    Baby D~ 2000-02-26      87    82    72    77    87    94    99    NA
##  2 2Ge+her  The Ha~ 2000-09-02      91    87    92    NA    NA    NA    NA    NA
##  3 3 Doors~ Krypto~ 2000-04-08      81    70    68    67    66    57    54    53
##  4 3 Doors~ Loser   2000-10-21      76    76    72    69    67    65    55    59
##  5 504 Boyz Wobble~ 2000-04-15      57    34    25    17    17    31    36    49
##  6 98^0     Give M~ 2000-08-19      51    39    34    26    26    19     2     2
##  7 A*Teens  Dancin~ 2000-07-08      97    97    96    95   100    NA    NA    NA
##  8 Aaliyah  I Don&#39;~ 2000-01-29      84    62    51    41    38    35    35    38
##  9 Aaliyah  Try Ag~ 2000-03-18      59    53    38    28    21    18    16    14
## 10 Adams, ~ Open M~ 2000-08-26      76    76    74    69    68    67    61    58
## # ... with 307 more rows, and 68 more variables: wk9 &amp;lt;dbl&amp;gt;, wk10 &amp;lt;dbl&amp;gt;,
## #   wk11 &amp;lt;dbl&amp;gt;, wk12 &amp;lt;dbl&amp;gt;, wk13 &amp;lt;dbl&amp;gt;, wk14 &amp;lt;dbl&amp;gt;, wk15 &amp;lt;dbl&amp;gt;, wk16 &amp;lt;dbl&amp;gt;,
## #   wk17 &amp;lt;dbl&amp;gt;, wk18 &amp;lt;dbl&amp;gt;, wk19 &amp;lt;dbl&amp;gt;, wk20 &amp;lt;dbl&amp;gt;, wk21 &amp;lt;dbl&amp;gt;, wk22 &amp;lt;dbl&amp;gt;,
## #   wk23 &amp;lt;dbl&amp;gt;, wk24 &amp;lt;dbl&amp;gt;, wk25 &amp;lt;dbl&amp;gt;, wk26 &amp;lt;dbl&amp;gt;, wk27 &amp;lt;dbl&amp;gt;, wk28 &amp;lt;dbl&amp;gt;,
## #   wk29 &amp;lt;dbl&amp;gt;, wk30 &amp;lt;dbl&amp;gt;, wk31 &amp;lt;dbl&amp;gt;, wk32 &amp;lt;dbl&amp;gt;, wk33 &amp;lt;dbl&amp;gt;, wk34 &amp;lt;dbl&amp;gt;,
## #   wk35 &amp;lt;dbl&amp;gt;, wk36 &amp;lt;dbl&amp;gt;, wk37 &amp;lt;dbl&amp;gt;, wk38 &amp;lt;dbl&amp;gt;, wk39 &amp;lt;dbl&amp;gt;, wk40 &amp;lt;dbl&amp;gt;,
## #   wk41 &amp;lt;dbl&amp;gt;, wk42 &amp;lt;dbl&amp;gt;, wk43 &amp;lt;dbl&amp;gt;, wk44 &amp;lt;dbl&amp;gt;, wk45 &amp;lt;dbl&amp;gt;, wk46 &amp;lt;dbl&amp;gt;,
## #   wk47 &amp;lt;dbl&amp;gt;, wk48 &amp;lt;dbl&amp;gt;, wk49 &amp;lt;dbl&amp;gt;, wk50 &amp;lt;dbl&amp;gt;, wk51 &amp;lt;dbl&amp;gt;, wk52 &amp;lt;dbl&amp;gt;,
## #   wk53 &amp;lt;dbl&amp;gt;, wk54 &amp;lt;dbl&amp;gt;, wk55 &amp;lt;dbl&amp;gt;, wk56 &amp;lt;dbl&amp;gt;, wk57 &amp;lt;dbl&amp;gt;, wk58 &amp;lt;dbl&amp;gt;,
## #   wk59 &amp;lt;dbl&amp;gt;, wk60 &amp;lt;dbl&amp;gt;, wk61 &amp;lt;dbl&amp;gt;, wk62 &amp;lt;dbl&amp;gt;, wk63 &amp;lt;dbl&amp;gt;, wk64 &amp;lt;dbl&amp;gt;,
## #   wk65 &amp;lt;dbl&amp;gt;, wk66 &amp;lt;lgl&amp;gt;, wk67 &amp;lt;lgl&amp;gt;, wk68 &amp;lt;lgl&amp;gt;, wk69 &amp;lt;lgl&amp;gt;, wk70 &amp;lt;lgl&amp;gt;,
## #   wk71 &amp;lt;lgl&amp;gt;, wk72 &amp;lt;lgl&amp;gt;, wk73 &amp;lt;lgl&amp;gt;, wk74 &amp;lt;lgl&amp;gt;, wk75 &amp;lt;lgl&amp;gt;, wk76 &amp;lt;lgl&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;
&lt;p&gt;Experimente fazer o caminho inverso dos exercícios 3 a 5, devolvendo os datasets ao seu formato original. O que você observou?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;O que os argumentos &lt;code&gt;extra&lt;/code&gt; e &lt;code&gt;fill&lt;/code&gt; em separate fazem? Utilize o exemplo a seguir como guia.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tibble(x = c(&amp;quot;a,b,c&amp;quot;, &amp;quot;d,e,f,g&amp;quot;, &amp;quot;h,i,j&amp;quot;)) %&amp;gt;% 
  separate(x, c(&amp;quot;um&amp;quot;, &amp;quot;dois&amp;quot;, &amp;quot;tres&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Expected 3 pieces. Additional pieces discarded in 1 rows [2].
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   um    dois  tres 
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
## 1 a     b     c    
## 2 d     e     f    
## 3 h     i     j
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tibble(x = c(&amp;quot;a,b,c&amp;quot;, &amp;quot;d,e&amp;quot;, &amp;quot;f,g,i&amp;quot;)) %&amp;gt;% 
  separate(x, c(&amp;quot;um&amp;quot;, &amp;quot;dois&amp;quot;, &amp;quot;tres&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: Expected 3 pieces. Missing pieces filled with `NA` in 1 rows [2].
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   um    dois  tres 
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
## 1 a     b     c    
## 2 d     e     &amp;lt;NA&amp;gt; 
## 3 f     g     i
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;Tanto &lt;code&gt;unite&lt;/code&gt; como &lt;code&gt;separate&lt;/code&gt; possuem um argumento &lt;code&gt;remove&lt;/code&gt;. Pra que ele serve e quando você o utilizaria no valor &lt;code&gt;FALSE&lt;/code&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compare o argumento &lt;code&gt;values_fill&lt;/code&gt; em &lt;code&gt;pivot_wider&lt;/code&gt; e &lt;code&gt;fill&lt;/code&gt; em &lt;code&gt;complete&lt;/code&gt;. Qual é a diferença?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;agradecimentos&#34;&gt;Agradecimentos&lt;/h2&gt;
&lt;p&gt;Esse material é uma adaptação livre das vinhetas dos pacotes &lt;code&gt;tidyr&lt;/code&gt;, &lt;code&gt;readr&lt;/code&gt; e &lt;code&gt;tibble&lt;/code&gt; e do capítulo Tidy Data do &lt;a href=&#34;https://r4ds.had.co.nz/tidy-data.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R for Data Science&lt;/a&gt;, de Wickham &amp;amp; Grolemund.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>stringr, forcats e dplyr</title>
      <link>https://laddem.github.io/courses/tidyverse/dia2/</link>
      <pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/courses/tidyverse/dia2/</guid>
      <description>&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://laddem.github.io/rmarkdown-libs/str_view/str_view.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://laddem.github.io/rmarkdown-libs/str_view-binding/str_view.js&#34;&gt;&lt;/script&gt;
&lt;h2 id=&#34;operações-em-variáveis-e-bancos-de-dados&#34;&gt;Operações em variáveis e bancos de dados&lt;/h2&gt;
&lt;p&gt;Hoje vamos apresentar dois pacotes com finalidades mais específicas para trabalhar com variáveis de tipo caractere e fator e um pacote super importante para as operações com bancos de dados.&lt;/p&gt;
&lt;p&gt;O pacote &lt;code&gt;stringr&lt;/code&gt; é uma série de adaptações da biblioteca &lt;code&gt;stringi&lt;/code&gt; e serve para a manipulação de variáveis texto, incluindo funções para detecção, modificação, substituição, remoção de texto em variáveis caractere. Para dominar esse assunto, é necessário compreender o conceito de “regex,” ou “expressão regular,” que foge um pouco do escopo do curso, mas que será introduzido brevemente.&lt;/p&gt;
&lt;p&gt;O pacote &lt;code&gt;forcats&lt;/code&gt; contém uma série de funções para trabalhar com o tipo &lt;code&gt;factor&lt;/code&gt;. São funções que facilitam operações envolvendo esse tipo de variável, como contagens, troca dos nomes das categorias, agrupamento de categorias, recodificação, plotagem, etc.&lt;/p&gt;
&lt;p&gt;O pacote &lt;code&gt;dplyr&lt;/code&gt; é um dos pilares do &lt;code&gt;tidyverse&lt;/code&gt; e ele tem dois papéis principais: operações de manipulação de banco de dados simples e operações de bancos de dados relacionais. No primeiro tipo são incluídas as operações de criação e modificação de variáveis, medidas resumo globais e por grupos, seleção de variáveis, mudança da ordem das linhas e colunas, etc. No segundo tipo, são as operações de tipo &lt;code&gt;_join&lt;/code&gt;, em que uma variável chave é utilizada para combinar registros de dois bancos de dados distintos.&lt;/p&gt;
&lt;p&gt;Os pacotes &lt;code&gt;stringr&lt;/code&gt; e &lt;code&gt;forcats&lt;/code&gt; são mais diretos, mas o &lt;code&gt;dplyr&lt;/code&gt; pode representar um certo nível de abstração que pode incomodar usuários de longa data do R, portanto, vamos nos esforçar para demonstrar as vantagens de mudar seu workflow para incluir as funções desse pacote através de comparações com o R base.&lt;/p&gt;
&lt;h2 id=&#34;dplyr&#34;&gt;&lt;code&gt;dplyr&lt;/code&gt;&lt;/h2&gt;
&lt;h3 id=&#34;dplyr-para-manipulação-de-dados&#34;&gt;&lt;code&gt;dplyr&lt;/code&gt; para manipulação de dados&lt;/h3&gt;
&lt;p&gt;Talvez o pacote mais utilizado de todo o tidyverse, &lt;code&gt;dplyr&lt;/code&gt; é um pacote de manipulação de bancos de dados inspirado pela linguagem SQL. A ideia é concatenar operações de &lt;strong&gt;seleção de variáveis&lt;/strong&gt;, &lt;strong&gt;filtragem de observação&lt;/strong&gt;, &lt;strong&gt;arranjo e ordenamento&lt;/strong&gt;, &lt;strong&gt;derivação de variáveis&lt;/strong&gt;, &lt;strong&gt;computação de medidas resumo&lt;/strong&gt; para o banco todo ou para &lt;strong&gt;grupos&lt;/strong&gt;. As funções básicas e mais utilizadas são, portanto:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;select&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arrange&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mutate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;summarize&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;group_by&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para praticar, vamos usar o dataset &lt;code&gt;flights&lt;/code&gt;, que contém informações sobre os vôos saídos de Nova Iorque em 2013.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(nycflights13)
library(dplyr)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;

## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag

## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;flights
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      517            515         2      830            819
##  2  2013     1     1      533            529         4      850            830
##  3  2013     1     1      542            540         2      923            850
##  4  2013     1     1      544            545        -1     1004           1022
##  5  2013     1     1      554            600        -6      812            837
##  6  2013     1     1      554            558        -4      740            728
##  7  2013     1     1      555            600        -5      913            854
##  8  2013     1     1      557            600        -3      709            723
##  9  2013     1     1      557            600        -3      838            846
## 10  2013     1     1      558            600        -2      753            745
## # ... with 336,766 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;glimpse(flights)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 336,776
## Columns: 19
## $ year           &amp;lt;int&amp;gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2~
## $ month          &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1~
## $ day            &amp;lt;int&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1~
## $ dep_time       &amp;lt;int&amp;gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, ~
## $ sched_dep_time &amp;lt;int&amp;gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, ~
## $ dep_delay      &amp;lt;dbl&amp;gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1~
## $ arr_time       &amp;lt;int&amp;gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849,~
## $ sched_arr_time &amp;lt;int&amp;gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851,~
## $ arr_delay      &amp;lt;dbl&amp;gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -1~
## $ carrier        &amp;lt;chr&amp;gt; &amp;quot;UA&amp;quot;, &amp;quot;UA&amp;quot;, &amp;quot;AA&amp;quot;, &amp;quot;B6&amp;quot;, &amp;quot;DL&amp;quot;, &amp;quot;UA&amp;quot;, &amp;quot;B6&amp;quot;, &amp;quot;EV&amp;quot;, &amp;quot;B6&amp;quot;, &amp;quot;~
## $ flight         &amp;lt;int&amp;gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 4~
## $ tailnum        &amp;lt;chr&amp;gt; &amp;quot;N14228&amp;quot;, &amp;quot;N24211&amp;quot;, &amp;quot;N619AA&amp;quot;, &amp;quot;N804JB&amp;quot;, &amp;quot;N668DN&amp;quot;, &amp;quot;N394~
## $ origin         &amp;lt;chr&amp;gt; &amp;quot;EWR&amp;quot;, &amp;quot;LGA&amp;quot;, &amp;quot;JFK&amp;quot;, &amp;quot;JFK&amp;quot;, &amp;quot;LGA&amp;quot;, &amp;quot;EWR&amp;quot;, &amp;quot;EWR&amp;quot;, &amp;quot;LGA&amp;quot;,~
## $ dest           &amp;lt;chr&amp;gt; &amp;quot;IAH&amp;quot;, &amp;quot;IAH&amp;quot;, &amp;quot;MIA&amp;quot;, &amp;quot;BQN&amp;quot;, &amp;quot;ATL&amp;quot;, &amp;quot;ORD&amp;quot;, &amp;quot;FLL&amp;quot;, &amp;quot;IAD&amp;quot;,~
## $ air_time       &amp;lt;dbl&amp;gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 1~
## $ distance       &amp;lt;dbl&amp;gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, ~
## $ hour           &amp;lt;dbl&amp;gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6~
## $ minute         &amp;lt;dbl&amp;gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0~
## $ time_hour      &amp;lt;dttm&amp;gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 0~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos filtrar nossas linhas: &lt;code&gt;filter&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos de primeiro de janeiro
flights %&amp;gt;% filter(month == 1, day == 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 842 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      517            515         2      830            819
##  2  2013     1     1      533            529         4      850            830
##  3  2013     1     1      542            540         2      923            850
##  4  2013     1     1      544            545        -1     1004           1022
##  5  2013     1     1      554            600        -6      812            837
##  6  2013     1     1      554            558        -4      740            728
##  7  2013     1     1      555            600        -5      913            854
##  8  2013     1     1      557            600        -3      709            723
##  9  2013     1     1      557            600        -3      838            846
## 10  2013     1     1      558            600        -2      753            745
## # ... with 832 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos a partir de junho
flights %&amp;gt;% filter(month &amp;gt; 6)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 170,618 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013    10     1      447            500       -13      614            648
##  2  2013    10     1      522            517         5      735            757
##  3  2013    10     1      536            545        -9      809            855
##  4  2013    10     1      539            545        -6      801            827
##  5  2013    10     1      539            545        -6      917            933
##  6  2013    10     1      544            550        -6      912            932
##  7  2013    10     1      549            600       -11      653            716
##  8  2013    10     1      550            600       -10      648            700
##  9  2013    10     1      550            600       -10      649            659
## 10  2013    10     1      551            600        -9      727            730
## # ... with 170,608 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos saídos do aeroporto JFK
flights %&amp;gt;% filter(origin == &amp;quot;JFK&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 111,279 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      542            540         2      923            850
##  2  2013     1     1      544            545        -1     1004           1022
##  3  2013     1     1      557            600        -3      838            846
##  4  2013     1     1      558            600        -2      849            851
##  5  2013     1     1      558            600        -2      853            856
##  6  2013     1     1      558            600        -2      924            917
##  7  2013     1     1      559            559         0      702            706
##  8  2013     1     1      606            610        -4      837            845
##  9  2013     1     1      611            600        11      945            931
## 10  2013     1     1      613            610         3      925            921
## # ... with 111,269 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos com destino ao aeroporto de Albuquerque
flights %&amp;gt;% filter(dest == &amp;quot;ABQ&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 254 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013    10     1     1955           2001        -6     2213           2248
##  2  2013    10     2     2010           2001         9     2230           2248
##  3  2013    10     3     1955           2001        -6     2232           2248
##  4  2013    10     4     2017           2001        16     2304           2248
##  5  2013    10     5     1959           1959         0     2226           2246
##  6  2013    10     6     1959           2001        -2     2234           2248
##  7  2013    10     7     2002           2001         1     2233           2248
##  8  2013    10     8     1957           2001        -4     2216           2248
##  9  2013    10     9     1957           2001        -4     2220           2248
## 10  2013    10    10     2011           2001        10     2235           2248
## # ... with 244 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos com atraso de até 10 minutos
flights %&amp;gt;% filter(dep_delay &amp;lt;= 10)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 245,687 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      517            515         2      830            819
##  2  2013     1     1      533            529         4      850            830
##  3  2013     1     1      542            540         2      923            850
##  4  2013     1     1      544            545        -1     1004           1022
##  5  2013     1     1      554            600        -6      812            837
##  6  2013     1     1      554            558        -4      740            728
##  7  2013     1     1      555            600        -5      913            854
##  8  2013     1     1      557            600        -3      709            723
##  9  2013     1     1      557            600        -3      838            846
## 10  2013     1     1      558            600        -2      753            745
## # ... with 245,677 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos com atraso de cerca de 10 minutos
flights %&amp;gt;% filter(near(dep_delay, 10, tol = 2))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8,677 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      611            600        11      945            931
##  2  2013     1     1      709            700         9      852            832
##  3  2013     1     1      826            817         9     1145           1158
##  4  2013     1     1      851            840        11     1215           1206
##  5  2013     1     1     1011           1001        10     1133           1128
##  6  2013     1     1     1208           1158        10     1540           1502
##  7  2013     1     1     1240           1229        11     1451           1428
##  8  2013     1     1     1310           1300        10     1559           1554
##  9  2013     1     1     1330           1321         9     1613           1536
## 10  2013     1     1     1511           1500        11     1753           1742
## # ... with 8,667 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos que ocorreram entre abril e maio
flights %&amp;gt;% filter(between(month, 4, 5))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 57,126 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     4     1      454            500        -6      636            640
##  2  2013     4     1      509            515        -6      743            814
##  3  2013     4     1      526            530        -4      812            827
##  4  2013     4     1      534            540        -6      833            850
##  5  2013     4     1      542            545        -3      914            920
##  6  2013     4     1      543            545        -2      921            927
##  7  2013     4     1      551            600        -9      748            659
##  8  2013     4     1      552            600        -8      641            701
##  9  2013     4     1      553            600        -7      725            735
## 10  2013     4     1      554            600        -6      752            805
## # ... with 57,116 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos combinar várias condições usando operadores lógicos&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos até 15 de abril ou até 15 de maio
flights %&amp;gt;% filter(
  between(month, 4, 5), # mesmo que usar &amp;amp;
  between(day, 1, 15)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 28,176 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     4     1      454            500        -6      636            640
##  2  2013     4     1      509            515        -6      743            814
##  3  2013     4     1      526            530        -4      812            827
##  4  2013     4     1      534            540        -6      833            850
##  5  2013     4     1      542            545        -3      914            920
##  6  2013     4     1      543            545        -2      921            927
##  7  2013     4     1      551            600        -9      748            659
##  8  2013     4     1      552            600        -8      641            701
##  9  2013     4     1      553            600        -7      725            735
## 10  2013     4     1      554            600        -6      752            805
## # ... with 28,166 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos entre 15 de abril e 15 de maio
flights %&amp;gt;% filter(
  month == 4 &amp;amp; between(day, 15, 30) | # OU
  month == 5 &amp;amp; between(day, 1, 15)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 29,101 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     4    15        2           2359         3      341            339
##  2  2013     4    15      453            500        -7      639            640
##  3  2013     4    15      511            515        -4      741            802
##  4  2013     4    15      527            530        -3      806            813
##  5  2013     4    15      527            529        -2      750            743
##  6  2013     4    15      537            540        -3      846            840
##  7  2013     4    15      542            545        -3      931            927
##  8  2013     4    15      551            600        -9      728            758
##  9  2013     4    15      552            600        -8      835            850
## 10  2013     4    15      552            600        -8      648            701
## # ... with 29,091 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos em todas os primeiros 7 dias de cada mês, exceto em janeiro e dezembro
flights %&amp;gt;% filter(
  between(day, 1, 7),
  !month %in% c(1, 12)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 64,365 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013    10     1      447            500       -13      614            648
##  2  2013    10     1      522            517         5      735            757
##  3  2013    10     1      536            545        -9      809            855
##  4  2013    10     1      539            545        -6      801            827
##  5  2013    10     1      539            545        -6      917            933
##  6  2013    10     1      544            550        -6      912            932
##  7  2013    10     1      549            600       -11      653            716
##  8  2013    10     1      550            600       -10      648            700
##  9  2013    10     1      550            600       -10      649            659
## 10  2013    10     1      551            600        -9      727            730
## # ... with 64,355 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos saidos de JFK, excluindo aqueles para os quais não tem informações de horário de saída
flights %&amp;gt;% filter(
  origin == &amp;quot;JFK&amp;quot;, !is.na(dep_time)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 109,416 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      542            540         2      923            850
##  2  2013     1     1      544            545        -1     1004           1022
##  3  2013     1     1      557            600        -3      838            846
##  4  2013     1     1      558            600        -2      849            851
##  5  2013     1     1      558            600        -2      853            856
##  6  2013     1     1      558            600        -2      924            917
##  7  2013     1     1      559            559         0      702            706
##  8  2013     1     1      606            610        -4      837            845
##  9  2013     1     1      611            600        11      945            931
## 10  2013     1     1      613            610         3      925            921
## # ... with 109,406 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Voos com mais de 30 minutos de atraso em janeiro ou dezembro
flights %&amp;gt;% filter(
  dep_delay &amp;gt; 30, xor(month == 1, month == 12)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8,221 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      732            645        47     1011            941
##  2  2013     1     1      749            710        39      939            850
##  3  2013     1     1      811            630       101     1047            830
##  4  2013     1     1      826            715        71     1136           1045
##  5  2013     1     1      848           1835       853     1001           1950
##  6  2013     1     1      903            820        43     1045            955
##  7  2013     1     1      909            810        59     1331           1315
##  8  2013     1     1      953            921        32     1320           1241
##  9  2013     1     1      957            733       144     1056            853
## 10  2013     1     1     1025            951        34     1258           1302
## # ... with 8,211 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E assim sucessivamente.&lt;/p&gt;
&lt;p&gt;Da mesma forma, temos &lt;code&gt;select&lt;/code&gt; para selecionar as variáveis do banco. As duas grandes novidades são que você não precisa utilizar aspas na seleção de variáveis e que &lt;code&gt;select&lt;/code&gt; introduz várias &lt;code&gt;helper functions&lt;/code&gt; para facilitar a seleção de variáveis parecidas.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Selecionar as colunas ano, mes, dia, horario de saida e horario de chegada
flights %&amp;gt;% select(year, month, day, dep_time, arr_time)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 5
##     year month   day dep_time arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;
##  1  2013     1     1      517      830
##  2  2013     1     1      533      850
##  3  2013     1     1      542      923
##  4  2013     1     1      544     1004
##  5  2013     1     1      554      812
##  6  2013     1     1      554      740
##  7  2013     1     1      555      913
##  8  2013     1     1      557      709
##  9  2013     1     1      557      838
## 10  2013     1     1      558      753
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Utilizando helpers
flights %&amp;gt;% select(year:dep_time, arr_time)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 5
##     year month   day dep_time arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;
##  1  2013     1     1      517      830
##  2  2013     1     1      533      850
##  3  2013     1     1      542      923
##  4  2013     1     1      544     1004
##  5  2013     1     1      554      812
##  6  2013     1     1      554      740
##  7  2013     1     1      555      913
##  8  2013     1     1      557      709
##  9  2013     1     1      557      838
## 10  2013     1     1      558      753
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Mais helpers
flights %&amp;gt;% select(year:day, starts_with(&amp;quot;dep&amp;quot;), starts_with(&amp;quot;arr&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 7
##     year month   day dep_time dep_delay arr_time arr_delay
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
##  1  2013     1     1      517         2      830        11
##  2  2013     1     1      533         4      850        20
##  3  2013     1     1      542         2      923        33
##  4  2013     1     1      544        -1     1004       -18
##  5  2013     1     1      554        -6      812       -25
##  6  2013     1     1      554        -4      740        12
##  7  2013     1     1      555        -5      913        19
##  8  2013     1     1      557        -3      709       -14
##  9  2013     1     1      557        -3      838        -8
## 10  2013     1     1      558        -2      753         8
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;flights %&amp;gt;% select(year:day, ends_with(&amp;quot;time&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 8
##     year month   day dep_time sched_dep_time arr_time sched_arr_time air_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;
##  1  2013     1     1      517            515      830            819      227
##  2  2013     1     1      533            529      850            830      227
##  3  2013     1     1      542            540      923            850      160
##  4  2013     1     1      544            545     1004           1022      183
##  5  2013     1     1      554            600      812            837      116
##  6  2013     1     1      554            558      740            728      150
##  7  2013     1     1      555            600      913            854      158
##  8  2013     1     1      557            600      709            723       53
##  9  2013     1     1      557            600      838            846      140
## 10  2013     1     1      558            600      753            745      138
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;flights %&amp;gt;% select(year:day, c(ends_with(&amp;quot;time&amp;quot;)) &amp;amp; !contains(&amp;quot;sched&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 6
##     year month   day dep_time arr_time air_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;    &amp;lt;dbl&amp;gt;
##  1  2013     1     1      517      830      227
##  2  2013     1     1      533      850      227
##  3  2013     1     1      542      923      160
##  4  2013     1     1      544     1004      183
##  5  2013     1     1      554      812      116
##  6  2013     1     1      554      740      150
##  7  2013     1     1      555      913      158
##  8  2013     1     1      557      709       53
##  9  2013     1     1      557      838      140
## 10  2013     1     1      558      753      138
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Você pode mudar o nome das colunas durante um call para select
flights %&amp;gt;% select(ano = year, mes = month, dia = day)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 3
##      ano   mes   dia
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
##  1  2013     1     1
##  2  2013     1     1
##  3  2013     1     1
##  4  2013     1     1
##  5  2013     1     1
##  6  2013     1     1
##  7  2013     1     1
##  8  2013     1     1
##  9  2013     1     1
## 10  2013     1     1
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Ou você pode usar rename para mudar os nomes sem selecionar variáveis
flights %&amp;gt;% rename(ano = year, mes = month, dia = day)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 19
##      ano   mes   dia dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      517            515         2      830            819
##  2  2013     1     1      533            529         4      850            830
##  3  2013     1     1      542            540         2      923            850
##  4  2013     1     1      544            545        -1     1004           1022
##  5  2013     1     1      554            600        -6      812            837
##  6  2013     1     1      554            558        -4      740            728
##  7  2013     1     1      555            600        -5      913            854
##  8  2013     1     1      557            600        -3      709            723
##  9  2013     1     1      557            600        -3      838            846
## 10  2013     1     1      558            600        -2      753            745
## # ... with 336,766 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;São realmente muitas possibilidades, vejam a documentação e os exemplos em &lt;code&gt;?select&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Utilizando &lt;code&gt;arrange&lt;/code&gt; podemos facilmente organizar nosso banco a partir de variáveis de interesse:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Selecionar algumas variáveis e ver organizar de acordar com os mais adiantados
flights %&amp;gt;% 
  select(year:day,matches(&amp;quot;^dep|^arr&amp;quot;)) %&amp;gt;% 
  arrange(dep_delay, arr_delay)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 7
##     year month   day dep_time dep_delay arr_time arr_delay
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
##  1  2013    12     7     2040       -43       40        48
##  2  2013     2     3     2022       -33     2240       -58
##  3  2013    11    10     1408       -32     1549       -10
##  4  2013     1    11     1900       -30     2233       -10
##  5  2013     1    29     1703       -27     1947       -10
##  6  2013     8     9      729       -26     1002         7
##  7  2013     3    30     2030       -25     2213       -37
##  8  2013    10    23     1907       -25     2143         0
##  9  2013     5     5      934       -24     1225       -44
## 10  2013     9    18     1631       -24     1812       -33
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Ou os mais atrasados
flights %&amp;gt;% 
  select(year:day,matches(&amp;quot;^dep|^arr&amp;quot;)) %&amp;gt;% 
  arrange(-dep_delay, -arr_delay)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 7
##     year month   day dep_time dep_delay arr_time arr_delay
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;
##  1  2013     1     9      641      1301     1242      1272
##  2  2013     6    15     1432      1137     1607      1127
##  3  2013     1    10     1121      1126     1239      1109
##  4  2013     9    20     1139      1014     1457      1007
##  5  2013     7    22      845      1005     1044       989
##  6  2013     4    10     1100       960     1342       931
##  7  2013     3    17     2321       911      135       915
##  8  2013     6    27      959       899     1236       850
##  9  2013     7    22     2257       898      121       895
## 10  2013    12     5      756       896     1058       878
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;É basicamente isso, você pode especificar uma ou muitas colunas para organizar, decidir se a ordem é ascendente ou descendente e pronto.&lt;/p&gt;
&lt;p&gt;Utilizando &lt;code&gt;mutate&lt;/code&gt;, você cria variáveis derivadas das originais. Como &lt;code&gt;tibble&lt;/code&gt;, essa função avalia seus argumentos de maneira preguiçosa e sequencial, o que permite você criar variáveis derivadas umas das outras muito facilmente.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;flights %&amp;gt;% 
  select(sched_dep_time, dep_time, sched_arr_time, arr_time) %&amp;gt;% 
  mutate(atraso_decolagem = dep_time - sched_dep_time,
         atraso_pouso = arr_time - sched_arr_time,
         atraso_dec_horas = atraso_decolagem / 60,
         atraso_pouso_horas = atraso_pouso / 60)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 8
##    sched_dep_time dep_time sched_arr_time arr_time atraso_decolagem atraso_pouso
##             &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;            &amp;lt;int&amp;gt;        &amp;lt;int&amp;gt;
##  1            515      517            819      830                2           11
##  2            529      533            830      850                4           20
##  3            540      542            850      923                2           73
##  4            545      544           1022     1004               -1          -18
##  5            600      554            837      812              -46          -25
##  6            558      554            728      740               -4           12
##  7            600      555            854      913              -45           59
##  8            600      557            723      709              -43          -14
##  9            600      557            846      838              -43           -8
## 10            600      558            745      753              -42            8
## # ... with 336,766 more rows, and 2 more variables: atraso_dec_horas &amp;lt;dbl&amp;gt;,
## #   atraso_pouso_horas &amp;lt;dbl&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Transmute é um atalho para quando você quer apenas as variáveis resultado e não está interessado nas intermediárias.
flights %&amp;gt;% 
  transmute(atraso_decolagem = dep_time - sched_dep_time,
            atraso_pouso = arr_time - sched_arr_time,
            atraso_dec_horas = atraso_decolagem / 60,
            atraso_pouso_horas = atraso_pouso / 60)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 4
##    atraso_decolagem atraso_pouso atraso_dec_horas atraso_pouso_horas
##               &amp;lt;int&amp;gt;        &amp;lt;int&amp;gt;            &amp;lt;dbl&amp;gt;              &amp;lt;dbl&amp;gt;
##  1                2           11           0.0333              0.183
##  2                4           20           0.0667              0.333
##  3                2           73           0.0333              1.22 
##  4               -1          -18          -0.0167             -0.3  
##  5              -46          -25          -0.767              -0.417
##  6               -4           12          -0.0667              0.2  
##  7              -45           59          -0.75                0.983
##  8              -43          -14          -0.717              -0.233
##  9              -43           -8          -0.717              -0.133
## 10              -42            8          -0.7                 0.133
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Usando o pipe, é fazer diversas operações de transformação de variáveis simultâneamente em um único call sem a necessidade de repetir o nome do objeto e &lt;code&gt;$&lt;/code&gt; a cada referência. &lt;code&gt;mutate&lt;/code&gt; é uma função extremamente flexível, você pode chamar qualquer função que retorne um vetor de tamanho 1 ou de tamanho do número de linhas do banco lá dentro para criar uma variável.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;desabafo &amp;lt;- function(x) {
  y &amp;lt;- floor(x / 60)
  
  dplyr::case_when(
    # Condições ~ Resultados
    y &amp;lt; 0       ~ &amp;quot;Opa, vou chegar cedo!&amp;quot;,
    y &amp;lt; 1       ~ &amp;quot;Atraso de menos de 1 hora é tolerável&amp;quot;,
    y &amp;gt;= 1      ~ paste0(&amp;quot;Atraso de mais de &amp;quot;, y, &amp;quot; horas é f***.&amp;quot;),
    TRUE        ~ &amp;quot;Ahn?&amp;quot; # Condição guarda-chuva
  )
  
}

flights %&amp;gt;% 
  select(dep_delay) %&amp;gt;% 
  mutate(desabafo = desabafo(dep_delay)) %&amp;gt;% 
  sample_n(10)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 2
##    dep_delay desabafo                             
##        &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;                                
##  1         0 Atraso de menos de 1 hora é tolerável
##  2        -3 Opa, vou chegar cedo!                
##  3        88 Atraso de mais de 1 horas é f***.    
##  4        -3 Opa, vou chegar cedo!                
##  5         3 Atraso de menos de 1 hora é tolerável
##  6        15 Atraso de menos de 1 hora é tolerável
##  7        -3 Opa, vou chegar cedo!                
##  8        -9 Opa, vou chegar cedo!                
##  9         5 Atraso de menos de 1 hora é tolerável
## 10         2 Atraso de menos de 1 hora é tolerável
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Utilizando &lt;code&gt;summarize&lt;/code&gt; você tira medidas resumo das suas colunas de interesse:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;flights %&amp;gt;% 
  summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),
            atraso_decolagem_desvpad = sd(dep_delay, na.rm = T),
            atraso_pouso_medio = mean(arr_delay, na.rm = T),
            atraso_pouso_desvpad = sd(arr_delay, na.rm = T),
            n_voos = n())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 5
##   atraso_decolagem_~ atraso_decolagem_~ atraso_pouso_me~ atraso_pouso_de~ n_voos
##                &amp;lt;dbl&amp;gt;              &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;  &amp;lt;int&amp;gt;
## 1               12.6               40.2             6.90             44.6 336776
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Parece uma bobagem, mas quando você junta isso com a última função, &lt;code&gt;group_by&lt;/code&gt;, é possível obter diversas estatísticas de interesse muito rapidamente e para vários domínios:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Por mês
flights %&amp;gt;% 
  group_by(month) %&amp;gt;% 
  summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),
            atraso_decolagem_desvpad = sd(dep_delay, na.rm = T),
            atraso_pouso_medio = mean(arr_delay, na.rm = T),
            atraso_pouso_desvpad = sd(arr_delay, na.rm = T),
            n_voos = n())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 12 x 6
##    month atraso_decolagem_~ atraso_decolagem_~ atraso_pouso_me~ atraso_pouso_de~
##    &amp;lt;int&amp;gt;              &amp;lt;dbl&amp;gt;              &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
##  1     1              10.0                36.4            6.13              40.4
##  2     2              10.8                36.3            5.61              39.5
##  3     3              13.2                40.1            5.81              44.1
##  4     4              13.9                43.0           11.2               47.5
##  5     5              13.0                39.4            3.52              44.2
##  6     6              20.8                51.5           16.5               56.1
##  7     7              21.7                51.6           16.7               57.1
##  8     8              12.6                37.7            6.04              42.6
##  9     9               6.72               35.6           -4.02              39.7
## 10    10               6.24               29.7           -0.167             32.6
## 11    11               5.44               27.6            0.461             31.4
## 12    12              16.6                41.9           14.9               46.1
## # ... with 1 more variable: n_voos &amp;lt;int&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Por mês e aeroporto de origem
flights %&amp;gt;% 
  group_by(month, origin) %&amp;gt;% 
  summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),
            atraso_decolagem_desvpad = sd(dep_delay, na.rm = T),
            atraso_pouso_medio = mean(arr_delay, na.rm = T),
            atraso_pouso_desvpad = sd(arr_delay, na.rm = T),
            n_voos = n())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` has grouped output by &#39;month&#39;. You can override using the `.groups` argument.

## # A tibble: 36 x 7
## # Groups:   month [12]
##    month origin atraso_decolagem_medio atraso_decolagem_desvp~ atraso_pouso_med~
##    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                   &amp;lt;dbl&amp;gt;                   &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt;
##  1     1 EWR                     14.9                     40.8             12.8 
##  2     1 JFK                      8.62                    36.0              1.37
##  3     1 LGA                      5.64                    29.7              3.38
##  4     2 EWR                     13.1                     37.2              8.78
##  5     2 JFK                     11.8                     37.4              4.39
##  6     2 LGA                      6.96                    33.4              3.15
##  7     3 EWR                     18.1                     44.1             10.6 
##  8     3 JFK                     10.7                     35.3              2.58
##  9     3 LGA                     10.2                     39.7              3.74
## 10     4 EWR                     17.4                     43.9             14.1 
## # ... with 26 more rows, and 2 more variables: atraso_pouso_desvpad &amp;lt;dbl&amp;gt;,
## #   n_voos &amp;lt;int&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Uma vez que você se familiariza com a gramática do &lt;code&gt;dplyr&lt;/code&gt;, o processo de análise exploratória se torna bastante trivial e até certo ponto, prazeiroso. Mas o que eu realmente gosto é que ele também se torna visualmente óbvio para o leitor, com cada chamado podendo ser lido como uma declaração:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Utilizando o banco de dados flights, agrupe as observações por mês e aeroporto de origem, então, calcule as médias e desvios padrão dos atrasos no pouso e na decolagem e o número de vôos para cada grupo.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Você também pode rapidamente introduzir ou retirar passos em cada chamado deste utilizando o pipe, por exemplo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;flights %&amp;gt;% 
  group_by(month, origin) %&amp;gt;% 
  summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),
            atraso_decolagem_desvpad = sd(dep_delay, na.rm = T),
            atraso_pouso_medio = mean(arr_delay, na.rm = T),
            atraso_pouso_desvpad = sd(arr_delay, na.rm = T),
            n_voos = n()) %&amp;gt;% 
  arrange(-atraso_decolagem_medio)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` has grouped output by &#39;month&#39;. You can override using the `.groups` argument.

## # A tibble: 36 x 7
## # Groups:   month [12]
##    month origin atraso_decolagem_medio atraso_decolagem_desvp~ atraso_pouso_med~
##    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                   &amp;lt;dbl&amp;gt;                   &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt;
##  1     7 JFK                      23.8                    53.3             20.2 
##  2     6 EWR                      22.5                    50.8             16.9 
##  3     7 EWR                      22.0                    49.5             15.5 
##  4    12 EWR                      21.0                    45.7             19.6 
##  5     6 JFK                      20.5                    50.2             17.6 
##  6     6 LGA                      19.3                    53.6             14.8 
##  7     7 LGA                      19.0                    52.0             14.2 
##  8     3 EWR                      18.1                    44.1             10.6 
##  9     4 EWR                      17.4                    43.9             14.1 
## 10     5 EWR                      15.4                    39.0              5.38
## # ... with 26 more rows, and 2 more variables: atraso_pouso_desvpad &amp;lt;dbl&amp;gt;,
## #   n_voos &amp;lt;int&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;E a leitura fica:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Utilizando o banco de dados flights, agrupe as observações por mês e aeroporto de origem, então, calcule as médias e desvios padrão dos atrasos no pouso e na decolagem e o número de vôos para cada grupo, então, ordene os resultados pelo maior atraso.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;De quebra, você ainda leva para casa um dado no formato “tabela,” fácil de exportar para outros softwares para embelezamento e publicação. Veja:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;resumo &amp;lt;- 
  flights %&amp;gt;% 
  group_by(month, origin) %&amp;gt;% 
  summarize(atraso_decolagem_medio = mean(dep_delay, na.rm = T),
            atraso_decolagem_desvpad = sd(dep_delay, na.rm = T),
            atraso_pouso_medio = mean(arr_delay, na.rm = T),
            atraso_pouso_desvpad = sd(arr_delay, na.rm = T),
            n_voos = n()) %&amp;gt;% 
  arrange(-atraso_decolagem_medio)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `summarise()` has grouped output by &#39;month&#39;. You can override using the `.groups` argument.
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;print(resumo, n = Inf)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 36 x 7
## # Groups:   month [12]
##    month origin atraso_decolagem_medio atraso_decolagem_desvp~ atraso_pouso_med~
##    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                   &amp;lt;dbl&amp;gt;                   &amp;lt;dbl&amp;gt;             &amp;lt;dbl&amp;gt;
##  1     7 JFK                     23.8                     53.3            20.2  
##  2     6 EWR                     22.5                     50.8            16.9  
##  3     7 EWR                     22.0                     49.5            15.5  
##  4    12 EWR                     21.0                     45.7            19.6  
##  5     6 JFK                     20.5                     50.2            17.6  
##  6     6 LGA                     19.3                     53.6            14.8  
##  7     7 LGA                     19.0                     52.0            14.2  
##  8     3 EWR                     18.1                     44.1            10.6  
##  9     4 EWR                     17.4                     43.9            14.1  
## 10     5 EWR                     15.4                     39.0             5.38 
## 11     1 EWR                     14.9                     40.8            12.8  
## 12    12 JFK                     14.8                     39.1            12.7  
## 13    12 LGA                     13.6                     39.8            12.0  
## 14     8 EWR                     13.5                     37.6             6.71 
## 15     2 EWR                     13.1                     37.2             8.78 
## 16     8 JFK                     12.9                     36.3             5.91 
## 17     5 JFK                     12.5                     38.5             2.12 
## 18     4 JFK                     12.2                     41.2             7.01 
## 19     2 JFK                     11.8                     37.4             4.39 
## 20     4 LGA                     11.5                     43.4            12.0  
## 21     8 LGA                     11.2                     39.2             5.41 
## 22     3 JFK                     10.7                     35.3             2.58 
## 23     5 LGA                     10.6                     40.6             2.80 
## 24     3 LGA                     10.2                     39.7             3.74 
## 25    10 EWR                      8.64                    32.7             2.60 
## 26     1 JFK                      8.62                    36.0             1.37 
## 27     9 EWR                      7.29                    35.0            -4.73 
## 28     2 LGA                      6.96                    33.4             3.15 
## 29    11 EWR                      6.72                    28.8             0.672
## 30     9 JFK                      6.64                    32.5            -4.46 
## 31     9 LGA                      6.21                    39.0            -2.83 
## 32     1 LGA                      5.64                    29.7             3.38 
## 33    10 LGA                      5.31                    30.1             0.186
## 34    11 LGA                      4.77                    26.6             1.55 
## 35    11 JFK                      4.68                    27.1            -0.873
## 36    10 JFK                      4.59                    25.2            -3.59 
## # ... with 2 more variables: atraso_pouso_desvpad &amp;lt;dbl&amp;gt;, n_voos &amp;lt;int&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lembrem-se que é necessário atribuir &lt;code&gt;&amp;lt;-&lt;/code&gt; os resultados das operações para que elas sejam salvas. Em geral, meu workflow é assim:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Começo com o banco
flights
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 19
##     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;          &amp;lt;int&amp;gt;
##  1  2013     1     1      517            515         2      830            819
##  2  2013     1     1      533            529         4      850            830
##  3  2013     1     1      542            540         2      923            850
##  4  2013     1     1      544            545        -1     1004           1022
##  5  2013     1     1      554            600        -6      812            837
##  6  2013     1     1      554            558        -4      740            728
##  7  2013     1     1      555            600        -5      913            854
##  8  2013     1     1      557            600        -3      709            723
##  9  2013     1     1      557            600        -3      838            846
## 10  2013     1     1      558            600        -2      753            745
## # ... with 336,766 more rows, and 11 more variables: arr_delay &amp;lt;dbl&amp;gt;,
## #   carrier &amp;lt;chr&amp;gt;, flight &amp;lt;int&amp;gt;, tailnum &amp;lt;chr&amp;gt;, origin &amp;lt;chr&amp;gt;, dest &amp;lt;chr&amp;gt;,
## #   air_time &amp;lt;dbl&amp;gt;, distance &amp;lt;dbl&amp;gt;, hour &amp;lt;dbl&amp;gt;, minute &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Seleciono algumas variáveis
flights %&amp;gt;% 
  select(month, dep_delay, arr_delay)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 3
##    month dep_delay arr_delay
##    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
##  1     1         2        11
##  2     1         4        20
##  3     1         2        33
##  4     1        -1       -18
##  5     1        -6       -25
##  6     1        -4        12
##  7     1        -5        19
##  8     1        -3       -14
##  9     1        -3        -8
## 10     1        -2         8
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Recorto algumas observações
flights %&amp;gt;% 
  select(month, dep_delay, arr_delay) %&amp;gt;% 
  filter(between(month, 1, 6))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 166,158 x 3
##    month dep_delay arr_delay
##    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
##  1     1         2        11
##  2     1         4        20
##  3     1         2        33
##  4     1        -1       -18
##  5     1        -6       -25
##  6     1        -4        12
##  7     1        -5        19
##  8     1        -3       -14
##  9     1        -3        -8
## 10     1        -2         8
## # ... with 166,148 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Escolho os dominios e calculo as medidas resumo
flights %&amp;gt;% 
  select(month, dep_delay, arr_delay) %&amp;gt;% 
  filter(between(month, 1, 6)) %&amp;gt;% 
  group_by(month) %&amp;gt;% 
  summarise(atraso_dec_medio = mean(dep_delay, na.rm = T),
            atraso_pou_medio = mean(arr_delay, na.rm = T))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   month atraso_dec_medio atraso_pou_medio
##   &amp;lt;int&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1     1             10.0             6.13
## 2     2             10.8             5.61
## 3     3             13.2             5.81
## 4     4             13.9            11.2 
## 5     5             13.0             3.52
## 6     6             20.8            16.5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Acho bom organizar pelos atrasos maiores
flights %&amp;gt;% 
  select(month, dep_delay, arr_delay) %&amp;gt;% 
  filter(between(month, 1, 6)) %&amp;gt;% 
  group_by(month) %&amp;gt;% 
  summarise(atraso_dec_medio = mean(dep_delay, na.rm = T),
            atraso_pou_medio = mean(arr_delay, na.rm = T)) %&amp;gt;% 
  arrange(-atraso_dec_medio, -atraso_pou_medio)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   month atraso_dec_medio atraso_pou_medio
##   &amp;lt;int&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1     6             20.8            16.5 
## 2     4             13.9            11.2 
## 3     3             13.2             5.81
## 4     5             13.0             3.52
## 5     2             10.8             5.61
## 6     1             10.0             6.13
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Estou satisfeito, salvo meu resultado em outro objeto
atrasos &amp;lt;- 
  flights %&amp;gt;% 
  select(month, dep_delay, arr_delay) %&amp;gt;% 
  filter(between(month, 1, 6)) %&amp;gt;% 
  group_by(month) %&amp;gt;% 
  summarise(atraso_dec_medio = mean(dep_delay, na.rm = T),
            atraso_pou_medio = mean(arr_delay, na.rm = T)) %&amp;gt;% 
  arrange(-atraso_dec_medio, -atraso_pou_medio)

atrasos
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##   month atraso_dec_medio atraso_pou_medio
##   &amp;lt;int&amp;gt;            &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1     6             20.8            16.5 
## 2     4             13.9            11.2 
## 3     3             13.2             5.81
## 4     5             13.0             3.52
## 5     2             10.8             5.61
## 6     1             10.0             6.13
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Desta forma, consigo construir interativamente meus cálculos, verificando a cada passo se estou obtendo o resultado esperado. Visto de outra perspectiva, se encontro um código programado desta forma que não funciona, posso ir apagando cada &lt;code&gt;%&amp;gt;%&lt;/code&gt; para identificar onde o problema ocorreu.&lt;/p&gt;
&lt;p&gt;Espero que tenha ficado claro que o assunto não se encerra por aqui. Existem diversas outras funções úteis no pacote, como &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;if_else&lt;/code&gt;, &lt;code&gt;case_when&lt;/code&gt;, &lt;code&gt;top_n&lt;/code&gt;, &lt;code&gt;bind_rows&lt;/code&gt;, &lt;code&gt;bind_cols&lt;/code&gt;, as novas funções &lt;code&gt;across&lt;/code&gt; e &lt;code&gt;c_across&lt;/code&gt; e muitas, muitas outras. Nos livros vocês encontram vários outros exemplos e funções para facilitar o processo de análise de dados, mas nossa expectativa é que essa apresentação seja um ponto de partida para vocês se aprofundarem no seu próprio ritmo.&lt;/p&gt;
&lt;h3 id=&#34;dplyr-para-bancos-de-dados-relacionais&#34;&gt;&lt;code&gt;dplyr&lt;/code&gt; para bancos de dados relacionais&lt;/h3&gt;
&lt;p&gt;Nesta seção, o nosso problema não é mais a análise de dados presentes em um banco, mas o problema de relacionar informações sobre uma mesma unidade de análise que estão presentes em vários bancos de dados distintos.&lt;/p&gt;
&lt;p&gt;O banco &lt;code&gt;nycflights13&lt;/code&gt; contém várias tabelas que se relacionam, e elas funcionam como um excelente exemplo de banco de dados relacionais.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/relational-nycflights.png&#34; alt=&#34;Banco de dados relacional de vôos&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note que além do banco de dados dos vôos, temos informações sobre clima, aviões e companhias aéreas. Para nós, pode ser relevante reunir informações de diferentes fontes em um mesmo banco de dados, algo que é possível através de &lt;code&gt;joins&lt;/code&gt;. Por uma questão de tempo, não vamos entrar muito a fundo no assunto, mas vamos introduzir dois conceitos chave e partir pros exemplos.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;chaves&lt;/code&gt; são as variáveis que identificam cada observação em um banco de dados de forma única. Uma chave é dita “primária” quando identifica uma observação na sua própria tabela e “externa” quando ela identifica uma observação em outra tabela. Assim, qualquer operação de join é uma forma de relacionar uma chave &lt;strong&gt;primária&lt;/strong&gt; e uma chave &lt;strong&gt;externa&lt;/strong&gt;. Essa junção de chaves é uma &lt;strong&gt;relação&lt;/strong&gt;, e as relações podem ser &lt;strong&gt;1 para 1&lt;/strong&gt;, &lt;strong&gt;1 para muitos&lt;/strong&gt; ou &lt;strong&gt;muitos para 1&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;joins&lt;/code&gt; são tipos de operação no qual se opta por priorizar um grupo de observações em detrimento de outras. Podemos vê-los didaticamente a partir de duas figuras:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/join-venn.png&#34; alt=&#34;Joins como diagramas de Venn&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/join-outer.png&#34; alt=&#34;Joins como “pontos”&#34;&gt;&lt;/p&gt;
&lt;p&gt;A primeira figura é interessante porque nos dá uma ideia de quais observações serão mantidas e quais serão descartadas, podemos imaginá-la como uma abstração da nossa escolha.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Quero todas as informações sobre os vôos e os aeroportos, e as duas são igualmente importantes (inner_join, x = flights, y = airports).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Quero todas as observações do banco vôos e as informações disponíveis sobre a aeronave (left_join, x = flights, y = planes).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Quero todas as informações tanto sobre os vôos quanto sobre o clima em cada dia (full_join, x = flights, y = weather).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Quero as informações dos vôos realizados pelas companhias aéreas - minha prioridade são as cias. áreas (right_join, x = flights, y = carriers).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A segunda figura é interessante porque elas mostra a mecânica de um &lt;code&gt;join&lt;/code&gt;: cada observação tem a sua chave marcada com a observação correspondente no outro banco. Se as chaves são iguais, a operação é realizada, se as chaves não são iguais, a operação não é realizada. Dependendo do tipo de &lt;code&gt;join&lt;/code&gt;, uma, as duas ou nenhuma das observações é descartada do banco resultante.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Antes de começar a trabalhar com bancos relacionais, é uma boa ideia dar uma explorada nas chaves, vendo suas contagens, se há erros de digitação, etc. Por uma questão de tempo, vamos pular essa fase.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Se as nossas chaves forem perfeitinhas, e inclusive tiverem o mesmo nome nas duas tabelas, basta invocar o tipo de join desejado.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Vamos dar uma enxugada no flights para poder ver o efeito dos joins com maior facilidade.
flights2 &amp;lt;- flights %&amp;gt;% 
  select(year:day, hour, origin, dest, tailnum, carrier)

flights2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 8
##     year month   day  hour origin dest  tailnum carrier
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  
##  1  2013     1     1     5 EWR    IAH   N14228  UA     
##  2  2013     1     1     5 LGA    IAH   N24211  UA     
##  3  2013     1     1     5 JFK    MIA   N619AA  AA     
##  4  2013     1     1     5 JFK    BQN   N804JB  B6     
##  5  2013     1     1     6 LGA    ATL   N668DN  DL     
##  6  2013     1     1     5 EWR    ORD   N39463  UA     
##  7  2013     1     1     6 EWR    FLL   N516JB  B6     
##  8  2013     1     1     6 LGA    IAD   N829AS  EV     
##  9  2013     1     1     6 JFK    MCO   N593JB  B6     
## 10  2013     1     1     6 LGA    ORD   N3ALAA  AA     
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Chaves perfeitas, mesmo nome nos dois bancos = natural join
flights2 %&amp;gt;% left_join(weather) # Moleza
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = c(&amp;quot;year&amp;quot;, &amp;quot;month&amp;quot;, &amp;quot;day&amp;quot;, &amp;quot;hour&amp;quot;, &amp;quot;origin&amp;quot;)

## # A tibble: 336,776 x 18
##     year month   day  hour origin dest  tailnum carrier  temp  dewp humid
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  2013     1     1     5 EWR    IAH   N14228  UA       39.0  28.0  64.4
##  2  2013     1     1     5 LGA    IAH   N24211  UA       39.9  25.0  54.8
##  3  2013     1     1     5 JFK    MIA   N619AA  AA       39.0  27.0  61.6
##  4  2013     1     1     5 JFK    BQN   N804JB  B6       39.0  27.0  61.6
##  5  2013     1     1     6 LGA    ATL   N668DN  DL       39.9  25.0  54.8
##  6  2013     1     1     5 EWR    ORD   N39463  UA       39.0  28.0  64.4
##  7  2013     1     1     6 EWR    FLL   N516JB  B6       37.9  28.0  67.2
##  8  2013     1     1     6 LGA    IAD   N829AS  EV       39.9  25.0  54.8
##  9  2013     1     1     6 JFK    MCO   N593JB  B6       37.9  27.0  64.3
## 10  2013     1     1     6 LGA    ORD   N3ALAA  AA       39.9  25.0  54.8
## # ... with 336,766 more rows, and 7 more variables: wind_dir &amp;lt;dbl&amp;gt;,
## #   wind_speed &amp;lt;dbl&amp;gt;, wind_gust &amp;lt;dbl&amp;gt;, precip &amp;lt;dbl&amp;gt;, pressure &amp;lt;dbl&amp;gt;,
## #   visib &amp;lt;dbl&amp;gt;, time_hour &amp;lt;dttm&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;flights2 %&amp;gt;% left_join(airlines) # Moleza
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;carrier&amp;quot;

## # A tibble: 336,776 x 9
##     year month   day  hour origin dest  tailnum carrier name                    
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;                   
##  1  2013     1     1     5 EWR    IAH   N14228  UA      United Air Lines Inc.   
##  2  2013     1     1     5 LGA    IAH   N24211  UA      United Air Lines Inc.   
##  3  2013     1     1     5 JFK    MIA   N619AA  AA      American Airlines Inc.  
##  4  2013     1     1     5 JFK    BQN   N804JB  B6      JetBlue Airways         
##  5  2013     1     1     6 LGA    ATL   N668DN  DL      Delta Air Lines Inc.    
##  6  2013     1     1     5 EWR    ORD   N39463  UA      United Air Lines Inc.   
##  7  2013     1     1     6 EWR    FLL   N516JB  B6      JetBlue Airways         
##  8  2013     1     1     6 LGA    IAD   N829AS  EV      ExpressJet Airlines Inc.
##  9  2013     1     1     6 JFK    MCO   N593JB  B6      JetBlue Airways         
## 10  2013     1     1     6 LGA    ORD   N3ALAA  AA      American Airlines Inc.  
## # ... with 336,766 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Chaves perfeitas, mas há variáveis nos dois bancos com o mesmo nome e que não são chaves
# É necessário especificar qual a chave
flights2 %&amp;gt;% left_join(planes, by = &amp;quot;tailnum&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 16
##    year.x month   day  hour origin dest  tailnum carrier year.y type            
##     &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;    &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;           
##  1   2013     1     1     5 EWR    IAH   N14228  UA        1999 Fixed wing mult~
##  2   2013     1     1     5 LGA    IAH   N24211  UA        1998 Fixed wing mult~
##  3   2013     1     1     5 JFK    MIA   N619AA  AA        1990 Fixed wing mult~
##  4   2013     1     1     5 JFK    BQN   N804JB  B6        2012 Fixed wing mult~
##  5   2013     1     1     6 LGA    ATL   N668DN  DL        1991 Fixed wing mult~
##  6   2013     1     1     5 EWR    ORD   N39463  UA        2012 Fixed wing mult~
##  7   2013     1     1     6 EWR    FLL   N516JB  B6        2000 Fixed wing mult~
##  8   2013     1     1     6 LGA    IAD   N829AS  EV        1998 Fixed wing mult~
##  9   2013     1     1     6 JFK    MCO   N593JB  B6        2004 Fixed wing mult~
## 10   2013     1     1     6 LGA    ORD   N3ALAA  AA          NA &amp;lt;NA&amp;gt;            
## # ... with 336,766 more rows, and 6 more variables: manufacturer &amp;lt;chr&amp;gt;,
## #   model &amp;lt;chr&amp;gt;, engines &amp;lt;int&amp;gt;, seats &amp;lt;int&amp;gt;, speed &amp;lt;int&amp;gt;, engine &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veja que tanto &lt;code&gt;flights2&lt;/code&gt; quanto &lt;code&gt;planes&lt;/code&gt; tem uma variável chamada &lt;code&gt;year&lt;/code&gt;, mas elas significados diferentes. Em &lt;code&gt;flights2&lt;/code&gt; é o ano do vôo, enquanto em &lt;code&gt;planes&lt;/code&gt; é o ano em que a aeronave entra em serviço. Na hora que fazemos o join, uma recebe o sufixo “x” e a outra “y” para a indicar a diferença. Você pode especificar o sufixo desejado para evitar confusão:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;flights2 %&amp;gt;% left_join(planes, by = &amp;quot;tailnum&amp;quot;, suffix = c(&amp;quot;_flight&amp;quot;, &amp;quot;_entered_service&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 16
##    year_flight month   day  hour origin dest  tailnum carrier year_entered_serv~
##          &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;                &amp;lt;int&amp;gt;
##  1        2013     1     1     5 EWR    IAH   N14228  UA                    1999
##  2        2013     1     1     5 LGA    IAH   N24211  UA                    1998
##  3        2013     1     1     5 JFK    MIA   N619AA  AA                    1990
##  4        2013     1     1     5 JFK    BQN   N804JB  B6                    2012
##  5        2013     1     1     6 LGA    ATL   N668DN  DL                    1991
##  6        2013     1     1     5 EWR    ORD   N39463  UA                    2012
##  7        2013     1     1     6 EWR    FLL   N516JB  B6                    2000
##  8        2013     1     1     6 LGA    IAD   N829AS  EV                    1998
##  9        2013     1     1     6 JFK    MCO   N593JB  B6                    2004
## 10        2013     1     1     6 LGA    ORD   N3ALAA  AA                      NA
## # ... with 336,766 more rows, and 7 more variables: type &amp;lt;chr&amp;gt;,
## #   manufacturer &amp;lt;chr&amp;gt;, model &amp;lt;chr&amp;gt;, engines &amp;lt;int&amp;gt;, seats &amp;lt;int&amp;gt;, speed &amp;lt;int&amp;gt;,
## #   engine &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Um aviso: cuidado com os produtos cartesianos. Não há um bom exemplo aqui no caso do &lt;code&gt;flights&lt;/code&gt; porque o banco já está limpinho, mas se você especificar chaves com uma relação “muitos para muitos,” ele vai registrar no banco novo uma linha para cada combinação possível de variáveis. Em bancos maiores, isso geralmente estoura sua memória e trava o R. Veja este pequeno exemplo de brinquedo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- tribble(
  ~key, ~val_x,
     1, &amp;quot;x1&amp;quot;,
     2, &amp;quot;x2&amp;quot;,
     2, &amp;quot;x3&amp;quot;,
     3, &amp;quot;x4&amp;quot;
)
y &amp;lt;- tribble(
  ~key, ~val_y,
     1, &amp;quot;y1&amp;quot;,
     2, &amp;quot;y2&amp;quot;,
     2, &amp;quot;y3&amp;quot;,
     3, &amp;quot;y4&amp;quot;
)
left_join(x, y, by = &amp;quot;key&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 3
##     key val_x val_y
##   &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
## 1     1 x1    y1   
## 2     2 x2    y2   
## 3     2 x2    y3   
## 4     2 x3    y2   
## 5     2 x3    y3   
## 6     3 x4    y4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Veja que no resultado foi criada uma linha para cada combinação de val_x e val_y que tem a mesma chave repetida. Podem até existir situações em que isso seja o que você quer mesmo, mas na minha experiência até o momento isso é problema com as chaves duplicadas e é sinal de que há algo errado.&lt;/p&gt;
&lt;p&gt;Mas peraí, se você falou que tem 4 tipos de join, porque só dá exemplo de &lt;code&gt;left_join&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Na prática, operações relacionais são feitas de forma intencional: escolhemos bancos de dados de acordo com o valor que atribuímos a informação presente nele e pinçamos informações relacionadas de outros lugares para adicionar aquilo que é nosso foco. Por isso, na maioria dos casos, o &lt;code&gt;left_join&lt;/code&gt; é o mais usual, porque &lt;strong&gt;preserva todas as informações do meu banco x e adiciona apenas as informações do banco y que combinaram com sucesso&lt;/strong&gt;. Isso garante que eu não vou perder nenhuma informação do meu banco principal.&lt;/p&gt;
&lt;p&gt;Pra encerrar essa parte, mais exemplos de &lt;code&gt;joins&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Minhas chaves tem nomes diferentes, então uso um vetor do tipo c(&amp;quot;chave_x&amp;quot; = &amp;quot;chave_y&amp;quot;)
flights2 %&amp;gt;% 
  left_join(airports, c(&amp;quot;dest&amp;quot; = &amp;quot;faa&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 15
##     year month   day  hour origin dest  tailnum carrier name     lat   lon   alt
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  2013     1     1     5 EWR    IAH   N14228  UA      Georg~  30.0 -95.3    97
##  2  2013     1     1     5 LGA    IAH   N24211  UA      Georg~  30.0 -95.3    97
##  3  2013     1     1     5 JFK    MIA   N619AA  AA      Miami~  25.8 -80.3     8
##  4  2013     1     1     5 JFK    BQN   N804JB  B6      &amp;lt;NA&amp;gt;    NA    NA      NA
##  5  2013     1     1     6 LGA    ATL   N668DN  DL      Harts~  33.6 -84.4  1026
##  6  2013     1     1     5 EWR    ORD   N39463  UA      Chica~  42.0 -87.9   668
##  7  2013     1     1     6 EWR    FLL   N516JB  B6      Fort ~  26.1 -80.2     9
##  8  2013     1     1     6 LGA    IAD   N829AS  EV      Washi~  38.9 -77.5   313
##  9  2013     1     1     6 JFK    MCO   N593JB  B6      Orlan~  28.4 -81.3    96
## 10  2013     1     1     6 LGA    ORD   N3ALAA  AA      Chica~  42.0 -87.9   668
## # ... with 336,766 more rows, and 3 more variables: tz &amp;lt;dbl&amp;gt;, dst &amp;lt;chr&amp;gt;,
## #   tzone &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Mesma coisa, só que agora juntando as informações da origem ao invés do destino
flights2 %&amp;gt;% 
  left_join(airports, c(&amp;quot;origin&amp;quot; = &amp;quot;faa&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 15
##     year month   day  hour origin dest  tailnum carrier name     lat   lon   alt
##    &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;  &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  2013     1     1     5 EWR    IAH   N14228  UA      Newar~  40.7 -74.2    18
##  2  2013     1     1     5 LGA    IAH   N24211  UA      La Gu~  40.8 -73.9    22
##  3  2013     1     1     5 JFK    MIA   N619AA  AA      John ~  40.6 -73.8    13
##  4  2013     1     1     5 JFK    BQN   N804JB  B6      John ~  40.6 -73.8    13
##  5  2013     1     1     6 LGA    ATL   N668DN  DL      La Gu~  40.8 -73.9    22
##  6  2013     1     1     5 EWR    ORD   N39463  UA      Newar~  40.7 -74.2    18
##  7  2013     1     1     6 EWR    FLL   N516JB  B6      Newar~  40.7 -74.2    18
##  8  2013     1     1     6 LGA    IAD   N829AS  EV      La Gu~  40.8 -73.9    22
##  9  2013     1     1     6 JFK    MCO   N593JB  B6      John ~  40.6 -73.8    13
## 10  2013     1     1     6 LGA    ORD   N3ALAA  AA      La Gu~  40.8 -73.9    22
## # ... with 336,766 more rows, and 3 more variables: tz &amp;lt;dbl&amp;gt;, dst &amp;lt;chr&amp;gt;,
## #   tzone &amp;lt;chr&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O assunto, obviamente, não pára por aí. Nos livros vocês encontrarão mais exemplos e funções, como é o caso do &lt;code&gt;semi_join&lt;/code&gt; e do &lt;code&gt;anti_join&lt;/code&gt; e das operações “set,” &lt;code&gt;intersect&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt; e &lt;code&gt;setdiff&lt;/code&gt;, mas isso fica pra vocês explorarem por conta própria e virem tirar as dúvidas depois!&lt;/p&gt;
&lt;h2 id=&#34;stringr&#34;&gt;&lt;code&gt;stringr&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;stringr&lt;/code&gt; contém uma família de funções, todas começadas em &lt;code&gt;str_&lt;/code&gt;, cuja principal preocupação é a &lt;strong&gt;consistência&lt;/strong&gt;. As funções do &lt;code&gt;base&lt;/code&gt; para strings são muito úteis, porém, seus argumentos estão numa ordem um pouco estranha, algumas funções são vetorizadas e outras não. Quando você se acostuma, até que não é tão ruim, mas voltando para o assunto discutido ontem de tornar o seu código mais legível, é interessante ter a simplicidade oferecida.&lt;/p&gt;
&lt;h3 id=&#34;basicão-da-string&#34;&gt;Basicão da string&lt;/h3&gt;
&lt;p&gt;Como este curso já é pra praticantes de R, vou pular algumas coisas muito básicas de string, vamos ao que interessa.&lt;/p&gt;
&lt;p&gt;Determinados caracteres tem um significado especial dentro das strings. Quem já tentou copiar e colar um caminho de arquivo do Windows pro R sabe disso. Então, nesses casos, é precisar “escapar” caracteres. Por exemplo, se você quiser escrever aspas, você usar a contrabarra &lt;code&gt;\&lt;/code&gt; para “escapar” um caractere.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;aspa_simples &amp;lt;- &#39;\&#39;&#39; # ou &amp;quot;&#39;&amp;quot;
aspa_dupla &amp;lt;- &amp;quot;\&amp;quot;&amp;quot; # ou &#39;&amp;quot;&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A regra do escape é simples, então se você quiser colocar uma contrabarra &lt;code&gt;\&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;\\&amp;quot;, &amp;quot;\&amp;quot;&amp;quot;)
x
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;\\&amp;quot; &amp;quot;\&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;writeLines(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## \
## &amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Outros caracteres especiais úteis: &lt;code&gt;&amp;quot;\n&amp;quot;&lt;/code&gt; para pular uma linha, &lt;code&gt;\t&lt;/code&gt; para Tab. Você pode ver os outros na ajuda das aspas &lt;code&gt;&amp;quot;&lt;/code&gt;, basta digitar no console &lt;code&gt;?&amp;quot;&#39;&amp;quot;&lt;/code&gt; ou &lt;code&gt;?&#39;&amp;quot;&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Outra coisa que dá pra fazer, se você precisar incluir um caractere distinto, é usar unicode:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- &amp;quot;\u00b5&amp;quot;
x
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;µ&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, mas e o pacote &lt;code&gt;stringr&lt;/code&gt;? Bem, ele tem o intuito de facilitar e dar consistência, então, todas as funções do pacote começam com as iniciais &lt;code&gt;str_&lt;/code&gt; justamente para serem utilizadas com o &lt;strong&gt;autocompletar&lt;/strong&gt; do RStudio, que pode ser acessada com os atalhos &lt;code&gt;Ctrl + Espaço&lt;/code&gt; ou &lt;code&gt;Tab&lt;/code&gt;. Vamos ver agora alguns exemplos de funções do pacote.&lt;/p&gt;
&lt;p&gt;Comprimento da string em caracteres:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(stringr)

# No RStudio, basta digitar &#39;str_&#39; e apertar Tab ou Ctrl + Espaço
x &amp;lt;- &amp;quot;Ministro Sinistro&amp;quot;
str_length(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 17
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;Ministro Sinistro&amp;quot;, &amp;quot;Abelha Gulosa&amp;quot;, &amp;quot;p&amp;quot;)
str_length(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 17 13  1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Concatenação de strings:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;, &amp;quot;z&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;xyz&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use o argumento &lt;code&gt;sep&lt;/code&gt; para definir caracteres que aparecerão entre as strings originais:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_c(&amp;quot;x&amp;quot;, &amp;quot;y&amp;quot;, &amp;quot;z&amp;quot;, sep = &amp;quot; + &amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;x + y + z&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Você pode trabalhar com strings que contém &lt;code&gt;NA&lt;/code&gt;s:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;abc&amp;quot;, NA)
str_c(&amp;quot;|-&amp;quot;, x, &amp;quot;-|&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;|-abc-|&amp;quot; NA
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_c(&amp;quot;|-&amp;quot;, str_replace_na(x), &amp;quot;-|&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;|-abc-|&amp;quot; &amp;quot;|-NA-|&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;str_c&lt;/code&gt; é uma função vetorizada e automaticamente recicla seus argumentos pra ter o tamanho do maior:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Eu na graduação
str_c(&amp;quot;Profe, me dá mais &amp;quot;, c(&amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;3&amp;quot;), &amp;quot; semanas pra entregar, por favor!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Profe, me dá mais 1 semanas pra entregar, por favor!&amp;quot;
## [2] &amp;quot;Profe, me dá mais 2 semanas pra entregar, por favor!&amp;quot;
## [3] &amp;quot;Profe, me dá mais 3 semanas pra entregar, por favor!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Eu de manhã
str_c(&amp;quot;Só mais &amp;quot;, c(&amp;quot;5&amp;quot;, &amp;quot;10&amp;quot;, &amp;quot;20&amp;quot;, &amp;quot;30&amp;quot;), &amp;quot; minutinhos e eu acordo!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Só mais 5 minutinhos e eu acordo!&amp;quot;  &amp;quot;Só mais 10 minutinhos e eu acordo!&amp;quot;
## [3] &amp;quot;Só mais 20 minutinhos e eu acordo!&amp;quot; &amp;quot;Só mais 30 minutinhos e eu acordo!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se algum dos objetos passados para &lt;code&gt;str_c&lt;/code&gt; tiver tamanho 0, ele é descartado. Útil para usar com testes lógicos.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;nome &amp;lt;- &amp;quot;Vinicius&amp;quot;
sobrenome &amp;lt;- &amp;quot;Maia&amp;quot;
tem_nome_do_meio &amp;lt;- FALSE

str_c(
  &amp;quot;Meu nome é &amp;quot;, nome, &amp;quot; &amp;quot;,
  # isso aqui retorna um vetor tamanho 0
  if (tem_nome_do_meio) &amp;quot; de Souza&amp;quot;, 
  sobrenome,
  &amp;quot;.&amp;quot;
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Meu nome é Vinicius Maia.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Conhecedores de &lt;code&gt;paste&lt;/code&gt; reconhecerão o argumento &lt;code&gt;collapse&lt;/code&gt;, que serve para transformar vetores de strings em uma única string.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_c(c(&amp;quot;Natália&amp;quot;, &amp;quot;Martins&amp;quot;, &amp;quot;Arruda&amp;quot;), collapse = &amp;quot; &amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Natália Martins Arruda&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;De forma similar, conhecedores de &lt;code&gt;substring&lt;/code&gt; deverão imediatamente reconhecer essa:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;Maçã&amp;quot;, &amp;quot;Banana&amp;quot;, &amp;quot;Abacaxi&amp;quot;)
str_sub(x, 1, 3)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Maç&amp;quot; &amp;quot;Ban&amp;quot; &amp;quot;Aba&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_sub(x, -3, -1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;açã&amp;quot; &amp;quot;ana&amp;quot; &amp;quot;axi&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;str_sub&lt;/code&gt; não vai dar erro se a string for muito curta:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_sub(&amp;quot;a&amp;quot;, 1, 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;a&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dá pra usar a forma &lt;code&gt;str_sub(x) &amp;lt;-&lt;/code&gt; para modificar partes de strings&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_sub(x, 1, 1) &amp;lt;- str_to_lower(str_sub(x, 1, 1))
x
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;maçã&amp;quot;    &amp;quot;banana&amp;quot;  &amp;quot;abacaxi&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note o uso de &lt;code&gt;str_to_lower&lt;/code&gt; para mudar para minúsculas. O contrário é &lt;code&gt;str_to_upper&lt;/code&gt;, também há uma para títulos, &lt;code&gt;str_to_title&lt;/code&gt;, e para a primeira letra de uma frase, &lt;code&gt;str_to_sentence&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- &amp;quot;Ministro Sinistro&amp;quot;

str_to_lower(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;ministro sinistro&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_to_upper(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;MINISTRO SINISTRO&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_to_sentence(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Ministro sinistro&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_to_title(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Ministro Sinistro&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Como vimos no &lt;code&gt;readr&lt;/code&gt;, algumas questões relacionadas a strings dependem da língua, ou, na linguagem do pacote, são “locale dependent.” Por isso nas funções onde isso é relevante, o argumento se chama &lt;code&gt;locale&lt;/code&gt;. Isso não é super relevante para quem trabalha com o inglês ou as línguas do oeste europeu, considerando que a maioria das línguas tem raízes similares, mas pode ser muito importante para outros idiomas. Vejamos este exemplo com a mudança da ordem das strings.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;abacaxi&amp;quot;, &amp;quot;escarola&amp;quot;, &amp;quot;banana&amp;quot;)

str_sort(x, locale = &amp;quot;en&amp;quot;)  # Inglês
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;abacaxi&amp;quot;  &amp;quot;banana&amp;quot;   &amp;quot;escarola&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_sort(x, locale = &amp;quot;haw&amp;quot;) # Havaiano
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;abacaxi&amp;quot;  &amp;quot;escarola&amp;quot; &amp;quot;banana&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;É justamente para esses casos que &lt;code&gt;str_sort&lt;/code&gt; e &lt;code&gt;str_order&lt;/code&gt; oferecem a alternativa de você especificar o &lt;code&gt;locale&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;trabalhando-com-padrões-e-expressões-regulares&#34;&gt;Trabalhando com padrões e “expressões regulares”&lt;/h3&gt;
&lt;p&gt;Expressões regulares são quase uma linguagem de programação em si, aqui, vamos dar uma passada muito rápida e ver alguns exemplos simples. São uma ferramenta muito útil, mas talvez não do interesse de todos.&lt;/p&gt;
&lt;p&gt;Basicamente, a ideia é fazer uma pesquisa na string, em busca de um padrão específico. Pode ser uma palavra, um espaço em branco, uma quebra de linha. Pode ficar muito complexo ou ser bem básico. O nosso objetivo aqui é que todos tenham a capacidade de trabalhar com padrões simples para corrigir inconsistências em bancos de dados, como no exemplo da aula anterior das colunas do dataset da OMS.&lt;/p&gt;
&lt;p&gt;Para visualizar padrões, vamos usar duas &lt;code&gt;helper functions&lt;/code&gt;, &lt;code&gt;str_view&lt;/code&gt; e &lt;code&gt;str_view_all&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;mamão&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;ananas&amp;quot;)
str_view(x, &amp;quot;an&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;mamão&lt;\/li&gt;\n  &lt;li&gt;b&lt;span class=&#39;match&#39;&gt;an&lt;\/span&gt;ana&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;an&lt;\/span&gt;anas&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;O resultado sai na aba “Viewer” do seu RStudio.&lt;/p&gt;
&lt;p&gt;O primeiro padrão que podemos usar é o &lt;code&gt;.&lt;/code&gt;, que identifica qualquer caractere. As vezes na documentação esse tipo de padrão genérico é chamado de “wildcard.”&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;.a.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;mam&lt;\/span&gt;ão&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;ban&lt;\/span&gt;ana&lt;\/li&gt;\n  &lt;li&gt;a&lt;span class=&#39;match&#39;&gt;nan&lt;\/span&gt;as&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;A forma de ler essa operação é: “Identifique qualquer conjunto de caracteres que tenha uma letra a no meio deles.”&lt;/p&gt;
&lt;p&gt;Se você quiser identificar um &lt;code&gt;.&lt;/code&gt; numa string, você precisa usar o escape &lt;code&gt;\&lt;/code&gt;. Porém, a barra também é um escape! Então, ao escrever expressões regulares, precisamos usar &lt;code&gt;\\&lt;/code&gt;. Veja:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dot &amp;lt;- &amp;quot;.&amp;quot;
cat(dot)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## .
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# erro
dot &amp;lt;- &amp;quot;\.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error: &#39;\.&#39;  é uma seqüência de escape não reconhecida na cadeia de caracteres começando com &amp;quot;&amp;quot;\.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# agora sim
dot &amp;lt;- &amp;quot;\\.&amp;quot;
cat(dot)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## \.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora em um exemplo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;Praia.&amp;quot;, &amp;quot;Agora.&amp;quot;, &amp;quot;Ou.&amp;quot;, &amp;quot;Me.&amp;quot;, &amp;quot;Rebelo.&amp;quot;)
str_view(x, &amp;quot;a\\.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;Prai&lt;span class=&#39;match&#39;&gt;a.&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;Agor&lt;span class=&#39;match&#39;&gt;a.&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;Ou.&lt;\/li&gt;\n  &lt;li&gt;Me.&lt;\/li&gt;\n  &lt;li&gt;Rebelo.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;u\\.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-4&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;Praia.&lt;\/li&gt;\n  &lt;li&gt;Agora.&lt;\/li&gt;\n  &lt;li&gt;O&lt;span class=&#39;match&#39;&gt;u.&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;Me.&lt;\/li&gt;\n  &lt;li&gt;Rebelo.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;o\\.&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-5&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-5&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;Praia.&lt;\/li&gt;\n  &lt;li&gt;Agora.&lt;\/li&gt;\n  &lt;li&gt;Ou.&lt;\/li&gt;\n  &lt;li&gt;Me.&lt;\/li&gt;\n  &lt;li&gt;Rebel&lt;span class=&#39;match&#39;&gt;o.&lt;\/span&gt;&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Tá, mas se a contrabarra é utilizada para denotar uma expressão regular tipo o &lt;code&gt;.&lt;/code&gt;, como eu faço para pesquisar uma contrabarra?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- &amp;quot;Jake Peralta é o melhor detetive\\gênio&amp;quot;
cat(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Jake Peralta é o melhor detetive\gênio
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A solução é escapar o escape do escape, sacou?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;\\\\&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-6&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-6&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;Jake Peralta é o melhor detetive&lt;span class=&#39;match&#39;&gt;\\&lt;\/span&gt;gênio&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;É enrolado mesmo…&lt;/p&gt;
&lt;p&gt;Para não estender muito o assunto, vamos ver vários exemplos de caracteres especiais a ser usados em expressões regulares.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;^&lt;/code&gt; encontra o início de uma string&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;maçã&amp;quot;, &amp;quot;banana&amp;quot;, &amp;quot;mamão&amp;quot;)

str_view(x, &amp;quot;^m&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-7&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-7&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;m&lt;\/span&gt;açã&lt;\/li&gt;\n  &lt;li&gt;banana&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;m&lt;\/span&gt;amão&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;&lt;code&gt;$&lt;/code&gt; encontra o final&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;a$&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-8&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-8&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;maçã&lt;\/li&gt;\n  &lt;li&gt;banan&lt;span class=&#39;match&#39;&gt;a&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;mamão&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Para forçar a expressão a achar apenas a palavra completa, use os dois&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;vitamina de banana&amp;quot;, &amp;quot;sundae de banana&amp;quot;, &amp;quot;banana&amp;quot;)
str_view(x, &amp;quot;banana&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-9&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-9&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;vitamina de &lt;span class=&#39;match&#39;&gt;banana&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;sundae de &lt;span class=&#39;match&#39;&gt;banana&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;banana&lt;\/span&gt;&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;^banana$&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-10&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-10&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;vitamina de banana&lt;\/li&gt;\n  &lt;li&gt;sundae de banana&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;banana&lt;\/span&gt;&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Use &lt;code&gt;classes&lt;/code&gt; de caracteres para encontrar genéricos&lt;/p&gt;
&lt;p&gt;Qualquer digito:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- &amp;quot;15 de Maio de 2021.&amp;quot;
str_view(x, &amp;quot;\\d&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-11&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-11&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;1&lt;\/span&gt;5 de Maio de 2021.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Qualquer espaço em branco:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;\\s&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-12&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-12&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;15&lt;span class=&#39;match&#39;&gt; &lt;\/span&gt;de Maio de 2021.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Qualquer caractere de um grupo: &lt;code&gt;[abc]&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;[M]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-13&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-13&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;15 de &lt;span class=&#39;match&#39;&gt;M&lt;\/span&gt;aio de 2021.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;[eM]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-14&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-14&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;15 d&lt;span class=&#39;match&#39;&gt;e&lt;\/span&gt; Maio de 2021.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;[deM]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-15&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-15&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;15 &lt;span class=&#39;match&#39;&gt;d&lt;\/span&gt;e Maio de 2021.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Qualquer caractere menos esses: &lt;code&gt;[^abc]&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;[^15]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-16&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-16&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;15&lt;span class=&#39;match&#39;&gt; &lt;\/span&gt;de Maio de 2021.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;[^15 de]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-17&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-17&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;15 de &lt;span class=&#39;match&#39;&gt;M&lt;\/span&gt;aio de 2021.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;[^15 de Maio de ]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-18&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-18&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;15 de Maio de &lt;span class=&#39;match&#39;&gt;2&lt;\/span&gt;021.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Usar uma classe pra evitar digitar 5 milhões de contrabarras&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;[.]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-19&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-19&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;15 de Maio de 2021&lt;span class=&#39;match&#39;&gt;.&lt;\/span&gt;&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(&amp;quot;a*c&amp;quot;, &amp;quot;[*]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-20&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-20&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;a&lt;span class=&#39;match&#39;&gt;*&lt;\/span&gt;c&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Você pode misturar strings com classes também&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;15 de Maio de 2021.&amp;quot;, &amp;quot;16 de Maio de 2021.&amp;quot;)
str_view(x, &amp;quot;1[56] de Maio&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-21&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-21&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;15 de Maio&lt;\/span&gt; de 2021.&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;16 de Maio&lt;\/span&gt; de 2021.&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Infelizmente, alguns caracteres tem significado especial dentro das classes, e você tem que usar contrabarras para fugir deles: &lt;code&gt;]&lt;/code&gt; &lt;code&gt;\&lt;/code&gt; &lt;code&gt;^&lt;/code&gt; e &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Você pode lidar com repetições&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;Mariele&amp;quot;, &amp;quot;Marielle&amp;quot;, &amp;quot;Mariellle&amp;quot;, &amp;quot;Marie&amp;quot;)
str_view(x, &amp;quot;Mariell?e&amp;quot;) # l aparece 0 ou 1 vez
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-22&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-22&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariele&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marielle&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;Mariellle&lt;\/li&gt;\n  &lt;li&gt;Marie&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel+e&amp;quot;) # l aparece 1 ou + vezes
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-23&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-23&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariele&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marielle&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariellle&lt;\/span&gt;&lt;\/li&gt;\n  &lt;li&gt;Marie&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel*&amp;quot;) # l aparece 0 ou + vezes
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-24&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-24&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariel&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariell&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marielll&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marie&lt;\/span&gt;&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel{0}&amp;quot;) # l aparece exatamente 0 vezes
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-25&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-25&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marie&lt;\/span&gt;le&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marie&lt;\/span&gt;lle&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marie&lt;\/span&gt;llle&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marie&lt;\/span&gt;&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel{1}&amp;quot;) # l aparece exatamente 1 vez
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-26&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-26&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariel&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariel&lt;\/span&gt;le&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariel&lt;\/span&gt;lle&lt;\/li&gt;\n  &lt;li&gt;Marie&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel{2}&amp;quot;) # l aparece exatamente 2 vezes
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-27&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-27&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;Mariele&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariell&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariell&lt;\/span&gt;le&lt;\/li&gt;\n  &lt;li&gt;Marie&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel{3}&amp;quot;) # l aparece exatamente 3 vezes
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-28&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-28&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;Mariele&lt;\/li&gt;\n  &lt;li&gt;Marielle&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marielll&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;Marie&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel{1,}&amp;quot;) # l aparece exatamente 1 vez ou mais
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-29&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-29&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariel&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariell&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marielll&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;Marie&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel{2,}&amp;quot;) # l aparece exatamente 2 vezes ou mais
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-30&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-30&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;Mariele&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariell&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marielll&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;Marie&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel{1,2}&amp;quot;) # l aparece de 1 a 2 vezes
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-31&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-31&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariel&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariell&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariell&lt;\/span&gt;le&lt;\/li&gt;\n  &lt;li&gt;Marie&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_view(x, &amp;quot;Mariel{2,3}&amp;quot;) # l aparece de 2 a 3 vezes
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-32&#34; style=&#34;width:960px;height:100%;&#34; class=&#34;str_view html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-32&#34;&gt;{&#34;x&#34;:{&#34;html&#34;:&#34;&lt;ul&gt;\n  &lt;li&gt;Mariele&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Mariell&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;&lt;span class=&#39;match&#39;&gt;Marielll&lt;\/span&gt;e&lt;\/li&gt;\n  &lt;li&gt;Marie&lt;\/li&gt;\n&lt;\/ul&gt;&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Esse assunto é enorme, e ainda estamos só na superfície. Há grupos, lookarounds, e muitos outros detalhes envolvendo expressões regulares, e vocês podem consultar os livros de referência para mergulhar mais fundo. Mas vamos parar por aqui para nos concentrar no que interessa.&lt;/p&gt;
&lt;p&gt;Em geral, temos um banco de dados com strings problemáticas, tipo erros de digitação, inconsistências etc. O primeiro passo, em geral, é detectar os problemas.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- c(&amp;quot;São Paulo&amp;quot;, &amp;quot;SAO PAULO&amp;quot;, &amp;quot;Sao Paulo&amp;quot;, &amp;quot;sp&amp;quot;, &amp;quot;SP&amp;quot;, &amp;quot;Sp&amp;quot;)
str_detect(x, &amp;quot;ã&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  TRUE FALSE FALSE FALSE FALSE FALSE
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_detect(x, &amp;quot;[Ss][Pp]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE FALSE FALSE  TRUE  TRUE  TRUE
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_detect(x, &amp;quot;[Ss][Aa][Oo]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] FALSE  TRUE  TRUE FALSE FALSE FALSE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Você pode se utilizar do fato da resposta ser um vetor lógico para descobrir quantos problemas você tem&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Contagens
str_detect(x, &amp;quot;ã&amp;quot;) %&amp;gt;% sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_detect(x, &amp;quot;[Ss][Pp]&amp;quot;) %&amp;gt;% sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_detect(x, &amp;quot;[Ss][Aa][Oo]&amp;quot;) %&amp;gt;% sum()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Proporções
str_detect(x, &amp;quot;ã&amp;quot;) %&amp;gt;% mean()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.1666667
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_detect(x, &amp;quot;[Ss][Pp]&amp;quot;) %&amp;gt;% mean()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.5
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_detect(x, &amp;quot;[Ss][Aa][Oo]&amp;quot;) %&amp;gt;% mean()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.3333333
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Depois de detectar seus problemas, você pode querer extrair uma parte dos seus casos: use &lt;code&gt;str_subset&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_subset(x, &amp;quot;[Ss][Pp]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;sp&amp;quot; &amp;quot;SP&amp;quot; &amp;quot;Sp&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Em geral, no entanto, você vai estar trabalhando num data frame. Então use &lt;code&gt;dplyr::filter&lt;/code&gt; e &lt;code&gt;str_detect&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- tibble::tibble(
  nome = c(&amp;quot;Marcos&amp;quot;, &amp;quot;rogério&amp;quot;, &amp;quot;cebolinha&amp;quot;, &amp;quot;Beiçola&amp;quot;, &amp;quot;nadir&amp;quot;, &amp;quot;Monica&amp;quot;),
  uf = x,
  dtnsc = c(&amp;quot;15 de Maio de 1980&amp;quot;, &amp;quot;1 de Jan de 2001&amp;quot;, &amp;quot;6 de Ago de 1993&amp;quot;, 
            &amp;quot;20 de Abril de 1964&amp;quot;, &amp;quot;24 de Nov de 1975&amp;quot;, &amp;quot;14 de Dezembro de 1997&amp;quot;)
)
df %&amp;gt;% dplyr::filter(str_detect(uf, &amp;quot;[Ss][Pp]&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   nome    uf    dtnsc                 
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;                 
## 1 Beiçola sp    20 de Abril de 1964   
## 2 nadir   SP    24 de Nov de 1975     
## 3 Monica  Sp    14 de Dezembro de 1997
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Você pode contar quantos matches você tem &lt;code&gt;str_count&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_count(x, &amp;quot;o&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2 0 2 0 0 0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_count(x, &amp;quot;[Oo]&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2 2 2 0 0 0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# e usar num data frame
df %&amp;gt;% dplyr::mutate(vogais = str_count(uf, &amp;quot;[aeiou]&amp;quot;),
                     consoantes = str_count(uf, &amp;quot;[^aeiou]&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 5
##   nome      uf        dtnsc                  vogais consoantes
##   &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;                   &amp;lt;int&amp;gt;      &amp;lt;int&amp;gt;
## 1 Marcos    São Paulo 15 de Maio de 1980          4          5
## 2 rogério   SAO PAULO 1 de Jan de 2001            0          9
## 3 cebolinha Sao Paulo 6 de Ago de 1993            5          4
## 4 Beiçola   sp        20 de Abril de 1964         0          2
## 5 nadir     SP        24 de Nov de 1975           0          2
## 6 Monica    Sp        14 de Dezembro de 1997      0          2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Você pode extrair &lt;code&gt;str_extract&lt;/code&gt; as informações que você quer&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_extract(df$dtnsc, &amp;quot;\\d+&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;15&amp;quot; &amp;quot;1&amp;quot;  &amp;quot;6&amp;quot;  &amp;quot;20&amp;quot; &amp;quot;24&amp;quot; &amp;quot;14&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_extract(df$dtnsc, &amp;quot;\\d+$&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1980&amp;quot; &amp;quot;2001&amp;quot; &amp;quot;1993&amp;quot; &amp;quot;1964&amp;quot; &amp;quot;1975&amp;quot; &amp;quot;1997&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_extract(df$dtnsc, &amp;quot;\\D+&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot; de Maio de &amp;quot;     &amp;quot; de Jan de &amp;quot;      &amp;quot; de Ago de &amp;quot;      &amp;quot; de Abril de &amp;quot;   
## [5] &amp;quot; de Nov de &amp;quot;      &amp;quot; de Dezembro de &amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Na tibble
df %&amp;gt;% dplyr::mutate(
  dia = str_extract(dtnsc, &amp;quot;\\d+&amp;quot;),
  mes = str_extract(df$dtnsc, &amp;quot;\\D+&amp;quot;),
  ano = str_extract(dtnsc, &amp;quot;\\d+$&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   nome      uf        dtnsc                  dia   mes                ano  
##   &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;                  &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;              &amp;lt;chr&amp;gt;
## 1 Marcos    São Paulo 15 de Maio de 1980     15    &amp;quot; de Maio de &amp;quot;     1980 
## 2 rogério   SAO PAULO 1 de Jan de 2001       1     &amp;quot; de Jan de &amp;quot;      2001 
## 3 cebolinha Sao Paulo 6 de Ago de 1993       6     &amp;quot; de Ago de &amp;quot;      1993 
## 4 Beiçola   sp        20 de Abril de 1964    20    &amp;quot; de Abril de &amp;quot;    1964 
## 5 nadir     SP        24 de Nov de 1975      24    &amp;quot; de Nov de &amp;quot;      1975 
## 6 Monica    Sp        14 de Dezembro de 1997 14    &amp;quot; de Dezembro de &amp;quot; 1997
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Melhor ainda
df %&amp;gt;% tidyr::extract(
  dtnsc, c(&amp;quot;dia&amp;quot;, &amp;quot;mes&amp;quot;, &amp;quot;ano&amp;quot;), 
  regex = &amp;quot;(\\d+) de (\\D+) de (\\d+$)&amp;quot;
)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 5
##   nome      uf        dia   mes      ano  
##   &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;
## 1 Marcos    São Paulo 15    Maio     1980 
## 2 rogério   SAO PAULO 1     Jan      2001 
## 3 cebolinha Sao Paulo 6     Ago      1993 
## 4 Beiçola   sp        20    Abril    1964 
## 5 nadir     SP        24    Nov      1975 
## 6 Monica    Sp        14    Dezembro 1997
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similar a ideia de extração, podemos substituir com &lt;code&gt;str_replace&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_replace(x, &amp;quot;[Ss][Pp]&amp;quot;, &amp;quot;São Paulo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;São Paulo&amp;quot; &amp;quot;SAO PAULO&amp;quot; &amp;quot;Sao Paulo&amp;quot; &amp;quot;São Paulo&amp;quot; &amp;quot;São Paulo&amp;quot; &amp;quot;São Paulo&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_replace(x, &amp;quot;SAO PAULO&amp;quot;, &amp;quot;São Paulo&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;São Paulo&amp;quot; &amp;quot;São Paulo&amp;quot; &amp;quot;Sao Paulo&amp;quot; &amp;quot;sp&amp;quot;        &amp;quot;SP&amp;quot;        &amp;quot;Sp&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_replace(x, &amp;quot;a&amp;quot;, &amp;quot;ã&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;São Pãulo&amp;quot; &amp;quot;SAO PAULO&amp;quot; &amp;quot;São Paulo&amp;quot; &amp;quot;sp&amp;quot;        &amp;quot;SP&amp;quot;        &amp;quot;Sp&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Tanto &lt;code&gt;str_extract&lt;/code&gt; quanto &lt;code&gt;str_replace&lt;/code&gt; substituem apenas a primeira marca, se você quiser substituir todas, utilize &lt;code&gt;str_..._all&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_extract_all(x, &amp;quot;a&amp;quot;, simplify = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##      [,1] [,2]
## [1,] &amp;quot;a&amp;quot;  &amp;quot;&amp;quot;  
## [2,] &amp;quot;&amp;quot;   &amp;quot;&amp;quot;  
## [3,] &amp;quot;a&amp;quot;  &amp;quot;a&amp;quot; 
## [4,] &amp;quot;&amp;quot;   &amp;quot;&amp;quot;  
## [5,] &amp;quot;&amp;quot;   &amp;quot;&amp;quot;  
## [6,] &amp;quot;&amp;quot;   &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;str_replace_all(x, &amp;quot;a&amp;quot;, &amp;quot;ã&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;São Pãulo&amp;quot; &amp;quot;SAO PAULO&amp;quot; &amp;quot;São Pãulo&amp;quot; &amp;quot;sp&amp;quot;        &amp;quot;SP&amp;quot;        &amp;quot;Sp&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O assunto não acaba, mas vamos parar por aqui. Novamente, recomendo consultarem os materiais para quem quiser ir mais a fundo nisso. É bem capaz de no andar da carruagem aparecerem outros exemplos nos quais a manipulação de strings pode ser importante.&lt;/p&gt;
&lt;h2 id=&#34;forcats&#34;&gt;&lt;code&gt;forcats&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Esse é um pacotinho muito que facilita bastante a vida de quem trabalha com variável categórica, ou, no R, os &lt;code&gt;factor&lt;/code&gt;s. Ele consiste em uma série de “helper functions” baseadas em funções do &lt;code&gt;base&lt;/code&gt; e do &lt;code&gt;stats&lt;/code&gt; que trabalham com os componentes de um &lt;code&gt;factor&lt;/code&gt;, ou seja, seus &lt;code&gt;levels&lt;/code&gt; e seus &lt;code&gt;values&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Imagino que todos aqui estão familiarizados com fatores e com a sua criação, então vamos direto ao que interessa. Educação é um vetor de caracteres que vem com os níveis educacionais de um população.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;educacao &amp;lt;- c(&amp;quot;Superior&amp;quot;, &amp;quot;Fundamental&amp;quot;, &amp;quot;Médio&amp;quot;, &amp;quot;Superior&amp;quot;, &amp;quot;Fundamental&amp;quot;, &amp;quot;Médio&amp;quot;,
              &amp;quot;Superior&amp;quot;, &amp;quot;Fundamental&amp;quot;, &amp;quot;Médio&amp;quot;, &amp;quot;Superior&amp;quot;, &amp;quot;Fundamental&amp;quot;, &amp;quot;Médio&amp;quot;)

x &amp;lt;- factor(educacao, levels = c(&amp;quot;Fundamental&amp;quot;, &amp;quot;Médio&amp;quot;, &amp;quot;Superior&amp;quot;))
x
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] Superior    Fundamental Médio       Superior    Fundamental Médio      
##  [7] Superior    Fundamental Médio       Superior    Fundamental Médio      
## Levels: Fundamental Médio Superior
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;levels(x)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Fundamental&amp;quot; &amp;quot;Médio&amp;quot;       &amp;quot;Superior&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;relevel(x, &amp;quot;Superior&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] Superior    Fundamental Médio       Superior    Fundamental Médio      
##  [7] Superior    Fundamental Médio       Superior    Fundamental Médio      
## Levels: Superior Fundamental Médio
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Em geral, diversas tarefas envolvendo fatores no &lt;code&gt;base&lt;/code&gt; não são muito simples. Por exemplo, se eu quiser modificar os nomes dos níveis de um fator depois dele já estar criado, modificar a ordem dos níveis, ou agrupar diversos níveis em um só. &lt;code&gt;forcats&lt;/code&gt; vem justamente oferecer soluções nesse sentido. Normalmente, estamos trabalhando com bancos de dados, e não com um vetor solitário, por isso, vamos usar o &lt;code&gt;gss_cat&lt;/code&gt;, uma amostra do General Social Survey aplicado pelo NORC e pela Universidade de Chicago, que vem no pacote forcats.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(forcats)
gss_cat
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 21,483 x 9
##     year marital     age race  rincome    partyid     relig     denom    tvhours
##    &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt;     &amp;lt;int&amp;gt; &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;      &amp;lt;fct&amp;gt;       &amp;lt;fct&amp;gt;     &amp;lt;fct&amp;gt;      &amp;lt;int&amp;gt;
##  1  2000 Never ma~    26 White $8000 to ~ Ind,near r~ Protesta~ Souther~      12
##  2  2000 Divorced     48 White $8000 to ~ Not str re~ Protesta~ Baptist~      NA
##  3  2000 Widowed      67 White Not appli~ Independent Protesta~ No deno~       2
##  4  2000 Never ma~    39 White Not appli~ Ind,near r~ Orthodox~ Not app~       4
##  5  2000 Divorced     25 White Not appli~ Not str de~ None      Not app~       1
##  6  2000 Married      25 White $20000 - ~ Strong dem~ Protesta~ Souther~      NA
##  7  2000 Never ma~    36 White $25000 or~ Not str re~ Christian Not app~       3
##  8  2000 Divorced     44 White $7000 to ~ Ind,near d~ Protesta~ Luthera~      NA
##  9  2000 Married      44 White $25000 or~ Not str de~ Protesta~ Other          0
## 10  2000 Married      47 White $25000 or~ Strong rep~ Protesta~ Souther~       3
## # ... with 21,473 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Contagens&lt;/p&gt;
&lt;p&gt;Uma das primeiras coisas que interessa ao lidar com fatores, é obter suas contagens, o que é algo muito simples utilizando a gramática do dplyr.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Função count
gss_cat %&amp;gt;% 
  count(race)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 2
##   race      n
##   &amp;lt;fct&amp;gt; &amp;lt;int&amp;gt;
## 1 Other  1959
## 2 Black  3129
## 3 White 16395
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Incluindo níveis com contagem = 0.
gss_cat %&amp;gt;% 
  count(race, .drop = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##   race               n
##   &amp;lt;fct&amp;gt;          &amp;lt;int&amp;gt;
## 1 Other           1959
## 2 Black           3129
## 3 White          16395
## 4 Not applicable     0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Visualização com ggplot
library(ggplot2)
gss_cat %&amp;gt;% 
  ggplot(aes(race)) + geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-60-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Incluindo níveis com contagem = 0.
gss_cat %&amp;gt;% 
  ggplot(aes(race)) + geom_bar() + scale_x_discrete(drop = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-60-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note o uso do argumento &lt;code&gt;drop&lt;/code&gt; nos dois casos, para indicar que casos com 0 observações não devem ser removidos do resultado.&lt;/p&gt;
&lt;h3 id=&#34;modificando-a-ordem&#34;&gt;Modificando a ordem&lt;/h3&gt;
&lt;p&gt;A segunda tarefa comum quando trabalhamos com fatores é modificar a ordem em que eles aparecem. Não é tanto o caso quando trabalhamos com fatores ordenados, mas diversos tipos de variáveis categóricas não possuem uma ordem lógica pre-definida e, mesmo assim, nos interessa apresentá-los de acordo com uma determinada hierarquia visual, seja porque eles são os mais frequentes ou porque queremos destacar algum elemento em particular. &lt;code&gt;forcats&lt;/code&gt; implementa diversas estratégias de reordenamento de fatores. Vamos vê-las brevemente.&lt;/p&gt;
&lt;p&gt;Digamos que eu queira saber o tempo médio de televisão assistida por membros das diversas religiões. Eu poderia produzir um sumário e depois plotar isso num gráfico.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;relig_summary &amp;lt;- gss_cat %&amp;gt;%
  group_by(relig) %&amp;gt;%
  summarise(
    age = mean(age, na.rm = TRUE),
    tvhours = mean(tvhours, na.rm = TRUE),
    n = n()
  )

relig_summary %&amp;gt;% 
  ggplot(aes(tvhours, relig)) + geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-61-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;O display está técnicamente correto, mas a forma desorganizada dos níveis no eixo Y dificulta a nossa capacidade de fazer comparações. Talvez fosse mais interessante ordenar este resultado por ordem decrescente do número de horas de tv. Mas, como fazer isso de forma direta, sem precisar realizar diversas computações?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Direto no plot
relig_summary %&amp;gt;% 
  ggplot(aes(tvhours, fct_reorder(relig, tvhours))) + geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-62-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Antes de passar o data.frame para a plotagem
relig_summary %&amp;gt;% 
  mutate(relig = fct_reorder(relig, tvhours)) %&amp;gt;% 
  ggplot(aes(tvhours, relig)) + geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-62-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note como posso aplicar a transformação diretamente na variável durante o processo de plotagem, ou antes, e uma invocação de &lt;code&gt;mutate&lt;/code&gt;. Na minha opinião, o segundo jeito é o mais adequado, por duas razões: é mais fácil de digitar, inserir e retirar do código e é mais fácil para um leitor identificar que uma transformação foi feita na variável plotada.&lt;/p&gt;
&lt;p&gt;Outro exemplo: que tal exarminarmos a relação entre a idade e a renda declarada? Primeiro, é preciso construir um sumário, parecido com o primeiro:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rincome_summary &amp;lt;- gss_cat %&amp;gt;%
  group_by(rincome) %&amp;gt;%
  summarise(
    age = mean(age, na.rm = TRUE),
    tvhours = mean(tvhours, na.rm = TRUE),
    n = n()
  )

rincome_summary %&amp;gt;% 
  mutate(rincome = fct_reorder(rincome, age)) %&amp;gt;% 
  ggplot(aes(age, rincome)) + geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-63-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Aqui, o reordenamento das variáveis de acordo com a idade não faz muito sentido, porque os níveis de renda tem uma ordem própria. Nesse caso, não é recomendado utilizar &lt;code&gt;fct_reorder&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rincome_summary %&amp;gt;% 
  ggplot(aes(age, rincome)) + geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-64-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Só que ao plotar, notamos um problema: a categoria “Not applicable” ficou primeiro e isso desorganiza visualmente nosso gráfico. Sem problema! Utilizamos &lt;code&gt;fct_relevel&lt;/code&gt; para modificar a ordem de uma variável arbitrariamente. O padrão é colocar pro começo (Parecido com o comportamento de &lt;code&gt;stats::relevel&lt;/code&gt;), mas você pode especificar outra posição.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;rincome_summary %&amp;gt;% 
  mutate(rincome = fct_relevel(rincome, &amp;quot;Not applicable&amp;quot;)) %&amp;gt;% 
  ggplot(aes(age, rincome)) + geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-65-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Notem como nos exemplos acima, o uso do &lt;code&gt;%&amp;gt;%&lt;/code&gt; nos permite alterar partes do nosso código de maneira interativa para chegar no resultado desejado.&lt;/p&gt;
&lt;p&gt;Outro tipo de mudança de ordem interessante ocorre quando temos uma terceira “dimensão” no nosso gráfico. Em geral, utilizamos cores, formas ou linhas quebradas para diferenciar entre categorias e gostaríamos que a nossa legenda acompanhasse a tendência do gráfico. Compare:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;by_age &amp;lt;- gss_cat %&amp;gt;%
  filter(!is.na(age)) %&amp;gt;%
  count(age, marital) %&amp;gt;%
  group_by(age) %&amp;gt;%
  mutate(prop = n / sum(n))

# Sem alteração na ordem
by_age %&amp;gt;% 
  ggplot(aes(age, prop, colour = marital)) +
  geom_line(na.rm = TRUE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-66-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Com alteração na ordem
ggplot(by_age, aes(age, prop, colour = fct_reorder2(marital, age, prop))) +
  geom_line() +
  labs(colour = &amp;quot;marital&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-66-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;No caso de &lt;code&gt;fct_reorder2&lt;/code&gt;, é melhor fazer a alteração de ordem dentro da função gráfica, pois dentro uma invocação de &lt;code&gt;mutate&lt;/code&gt;, ela não funcionou durante meus testes.&lt;/p&gt;
&lt;p&gt;Por último, podemos querer ordenar um gráfico de barras de acordo com a frequência das categorias, o que podemos fazer com &lt;code&gt;fct_infreq&lt;/code&gt; e &lt;code&gt;fct_rev&lt;/code&gt; (opcional).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gss_cat %&amp;gt;%
  mutate(marital = marital %&amp;gt;% fct_infreq()) %&amp;gt;%
  ggplot(aes(marital)) +
    geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-67-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# OU
gss_cat %&amp;gt;%
  mutate(marital = marital %&amp;gt;% fct_infreq() %&amp;gt;% fct_rev()) %&amp;gt;%
  ggplot(aes(marital)) +
    geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia2_files/figure-html/unnamed-chunk-67-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Notem o uso do pipe na hora de modificar a variável “marital.”&lt;/p&gt;
&lt;h3 id=&#34;modificando-os-níveis&#34;&gt;Modificando os níveis&lt;/h3&gt;
&lt;p&gt;O outro tipo de operação bastante comum é a alteração nos níves do fator. Em geral, queremos que os nossos níveis sejam representativos das nossas categorias de análise, sejam de fácil leitura e entendimento e contenham um número significativo de observações. Por essa razão, frequentemente precisamos alterar os rótulos, agrupar categorias, etc.&lt;/p&gt;
&lt;p&gt;Vejamos o exemplo da variável &lt;code&gt;partyid&lt;/code&gt;, que registra a identificação do entrevistado com os partidos políticos dos EUA.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gss_cat %&amp;gt;% count(partyid)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 2
##    partyid                n
##    &amp;lt;fct&amp;gt;              &amp;lt;int&amp;gt;
##  1 No answer            154
##  2 Don&#39;t know             1
##  3 Other party          393
##  4 Strong republican   2314
##  5 Not str republican  3032
##  6 Ind,near rep        1791
##  7 Independent         4119
##  8 Ind,near dem        2499
##  9 Not str democrat    3690
## 10 Strong democrat     3490
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos supor que, por qualquer motivo, essa forma de representação das categorias não nos satisfaz. Vejamos algumas das ferramentas que podemos utilizar para modificar esse fator.&lt;/p&gt;
&lt;p&gt;Podemos, simplesmente, reescrever essas categorias de forma mais completa:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gss_cat %&amp;gt;% 
  mutate(partyid = fct_recode(partyid,
    &amp;quot;Republicano, forte&amp;quot; = &amp;quot;Strong republican&amp;quot;,
    &amp;quot;Republicano, fraco&amp;quot; = &amp;quot;Not str republican&amp;quot;,
    &amp;quot;Independente, próx. repub.&amp;quot; = &amp;quot;Ind,near rep&amp;quot;,
    &amp;quot;Independente, próx. democ.&amp;quot; = &amp;quot;Ind,near dem&amp;quot;,
    &amp;quot;Independente&amp;quot; = &amp;quot;Independent&amp;quot;,
    &amp;quot;Democrata, forte&amp;quot; = &amp;quot;Strong democrat&amp;quot;,
    &amp;quot;Democrata, fraco&amp;quot; = &amp;quot;Not str democrat&amp;quot;,
    &amp;quot;Outro partido&amp;quot; = &amp;quot;Other party&amp;quot;,
    &amp;quot;Não sei&amp;quot; = &amp;quot;Don&#39;t know&amp;quot;,
    &amp;quot;Sem resposta&amp;quot; = &amp;quot;No answer&amp;quot;
  )) %&amp;gt;% 
  count(partyid)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 2
##    partyid                        n
##    &amp;lt;fct&amp;gt;                      &amp;lt;int&amp;gt;
##  1 Sem resposta                 154
##  2 Não sei                        1
##  3 Outro partido                393
##  4 Republicano, forte          2314
##  5 Republicano, fraco          3032
##  6 Independente, próx. repub.  1791
##  7 Independente                4119
##  8 Independente, próx. democ.  2499
##  9 Democrata, fraco            3690
## 10 Democrata, forte            3490
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A função utilizada é &lt;code&gt;fct_recode&lt;/code&gt; e ela é a mais genérica e flexível de todas, porém, exige que cada nível seja modificado individualmente. Dentro dela, é possível agrupar vários níveis associando vários níveis antigos a um mesmo nível novo. Veja o exemplo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gss_cat %&amp;gt;% 
  mutate(partyid = fct_recode(partyid,
    &amp;quot;Republicano, forte&amp;quot; = &amp;quot;Strong republican&amp;quot;,
    &amp;quot;Republicano, fraco&amp;quot; = &amp;quot;Not str republican&amp;quot;,
    &amp;quot;Independente, próx. repub.&amp;quot; = &amp;quot;Ind,near rep&amp;quot;,
    &amp;quot;Independente, próx. democ.&amp;quot; = &amp;quot;Ind,near dem&amp;quot;,
    &amp;quot;Independente&amp;quot; = &amp;quot;Independent&amp;quot;,
    &amp;quot;Democrata, forte&amp;quot; = &amp;quot;Strong democrat&amp;quot;,
    &amp;quot;Democrata, fraco&amp;quot; = &amp;quot;Not str democrat&amp;quot;,
    # Note o nome
    &amp;quot;Outro&amp;quot; = &amp;quot;Other party&amp;quot;,
    &amp;quot;Outro&amp;quot; = &amp;quot;Don&#39;t know&amp;quot;,
    &amp;quot;Outro&amp;quot; = &amp;quot;No answer&amp;quot;
  )) %&amp;gt;% 
  count(partyid)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 8 x 2
##   partyid                        n
##   &amp;lt;fct&amp;gt;                      &amp;lt;int&amp;gt;
## 1 Outro                        548
## 2 Republicano, forte          2314
## 3 Republicano, fraco          3032
## 4 Independente, próx. repub.  1791
## 5 Independente                4119
## 6 Independente, próx. democ.  2499
## 7 Democrata, fraco            3690
## 8 Democrata, forte            3490
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Se você quiser recategorizar um fator que tem muitos níveis para um menor, com poucos níveis, utilize &lt;code&gt;fct_collapse&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gss_cat %&amp;gt;%
  mutate(partyid = fct_collapse(partyid,
    Outro = c(&amp;quot;No answer&amp;quot;, &amp;quot;Don&#39;t know&amp;quot;, &amp;quot;Other party&amp;quot;),
    Republicano = c(&amp;quot;Strong republican&amp;quot;, &amp;quot;Not str republican&amp;quot;),
    Independente = c(&amp;quot;Ind,near rep&amp;quot;, &amp;quot;Independent&amp;quot;, &amp;quot;Ind,near dem&amp;quot;),
    Democrata = c(&amp;quot;Not str democrat&amp;quot;, &amp;quot;Strong democrat&amp;quot;)
  )) %&amp;gt;%
  count(partyid)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##   partyid          n
##   &amp;lt;fct&amp;gt;        &amp;lt;int&amp;gt;
## 1 Outro          548
## 2 Republicano   5346
## 3 Independente  8409
## 4 Democrata     7180
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Repare que do lado esquerdo, nos valores novos, não foi necessário usar aspas. É preciso cuidado com essa característica dos verbos do tidyverse. Ela se chama “tidy evaluation” e está um pouco fora do escopo do curso. Basicamente, se rolar dúvida ou der erros, se for usar acentos ou algum caractere diferente, use aspas.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gss_cat %&amp;gt;%
  mutate(partyid = fct_collapse(partyid,
    &amp;quot;Outro&amp;quot; = c(&amp;quot;No answer&amp;quot;, &amp;quot;Don&#39;t know&amp;quot;, &amp;quot;Other party&amp;quot;),
    &amp;quot;Republicano&amp;quot; = c(&amp;quot;Strong republican&amp;quot;, &amp;quot;Not str republican&amp;quot;),
    &amp;quot;Independente&amp;quot; = c(&amp;quot;Ind,near rep&amp;quot;, &amp;quot;Independent&amp;quot;, &amp;quot;Ind,near dem&amp;quot;),
    &amp;quot;Democrata&amp;quot; = c(&amp;quot;Not str democrat&amp;quot;, &amp;quot;Strong democrat&amp;quot;)
  )) %&amp;gt;%
  count(partyid)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 4 x 2
##   partyid          n
##   &amp;lt;fct&amp;gt;        &amp;lt;int&amp;gt;
## 1 Outro          548
## 2 Republicano   5346
## 3 Independente  8409
## 4 Democrata     7180
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Outro tipo de mudança importante no número de níveis é agrupar os níveis menos frequentes, por exemplo, para produzir uma visualização que dê maior destaque aos níveis mais frequentes. Esse é o trabalho de &lt;code&gt;fct_lump&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gss_cat %&amp;gt;% 
  mutate(relig = fct_lump(relig, n = 5)) %&amp;gt;% 
  count(relig)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 2
##   relig          n
##   &amp;lt;fct&amp;gt;      &amp;lt;int&amp;gt;
## 1 Christian    689
## 2 None        3523
## 3 Jewish       388
## 4 Catholic    5124
## 5 Protestant 10846
## 6 Other        913
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note que usando o argumento &lt;code&gt;n&lt;/code&gt; eu indico quantos níveis eu quero. No caso, escolhi os 5 níveis mais frequentes e todos os outros são automáticamente agrupados na categoria “Other.” Posso mudar esse nome também:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;gss_cat %&amp;gt;% 
  mutate(relig = fct_lump(relig, n = 5, other_level = &amp;quot;Outros&amp;quot;)) %&amp;gt;% 
  count(relig)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 2
##   relig          n
##   &amp;lt;fct&amp;gt;      &amp;lt;int&amp;gt;
## 1 Christian    689
## 2 None        3523
## 3 Jewish       388
## 4 Catholic    5124
## 5 Protestant 10846
## 6 Outros       913
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;exercícios&#34;&gt;Exercícios&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Encontre os vôos que:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Atrasaram mais de duas horas&lt;/li&gt;
&lt;li&gt;Com destino a Houston (&lt;code&gt;IAH&lt;/code&gt; ou &lt;code&gt;HOU&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Operados pela United, American ou Delta&lt;/li&gt;
&lt;li&gt;Decolaram entre julho e setembro&lt;/li&gt;
&lt;li&gt;Chegaram com mais de duas horas de atraso, mas não decolaram com atraso&lt;/li&gt;
&lt;li&gt;Atrasaram mais de uma hora para decolar, mas recuperaram mais de 30 minutos durante o voo&lt;/li&gt;
&lt;li&gt;Decolaram entre a meia-noite e 6 da manhã (inclusive)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reordene suas colunas para encontrar os voos mais rápidos (maior velocidade de voo).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Teste várias maneiras diferentes de selecionar as variáveis &lt;code&gt;dep_time&lt;/code&gt;, &lt;code&gt;dep_delay&lt;/code&gt;, &lt;code&gt;arr_time&lt;/code&gt; e &lt;code&gt;arr_delay&lt;/code&gt; usando as várias helper functions de &lt;code&gt;select&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As variáveis &lt;code&gt;dep_time&lt;/code&gt; e &lt;code&gt;sched_dep_time&lt;/code&gt; estão num formato incorreto (veja &lt;code&gt;?flights&lt;/code&gt;). Converta-as com &lt;code&gt;mutate&lt;/code&gt; para um valor em minutos passados desde a meia-noite. Dica: utilize &lt;code&gt;%/%&lt;/code&gt; e &lt;code&gt;%%&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;O que o código abaixo está fazendo? Porque mesmo após o código abaixo continuam existindo diferenças entre os valores das variáveis &lt;code&gt;air_time&lt;/code&gt; e &lt;code&gt;travel_time&lt;/code&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;flights %&amp;gt;% 
  select(air_time, dep_time, arr_time, dep_delay, arr_delay) %&amp;gt;% 
  mutate(dep_hour = dep_time %/% 100,
         dep_min = dep_time %% 100,
         dep_time2 = dep_hour * 60 + dep_min,
         arr_hour = arr_time %/% 100,
         arr_min = arr_time %% 100,
         arr_time2 = arr_hour * 60 + arr_min,
         travel_time = arr_time2 - dep_time2) %&amp;gt;% 
  select(-dep_hour, -dep_min, -arr_hour, -arr_min)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 336,776 x 8
##    air_time dep_time arr_time dep_delay arr_delay dep_time2 arr_time2
##       &amp;lt;dbl&amp;gt;    &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;
##  1      227      517      830         2        11       317       510
##  2      227      533      850         4        20       333       530
##  3      160      542      923         2        33       342       563
##  4      183      544     1004        -1       -18       344       604
##  5      116      554      812        -6       -25       354       492
##  6      150      554      740        -4        12       354       460
##  7      158      555      913        -5        19       355       553
##  8       53      557      709        -3       -14       357       429
##  9      140      557      838        -3        -8       357       518
## 10      138      558      753        -2         8       358       473
## # ... with 336,766 more rows, and 1 more variable: travel_time &amp;lt;dbl&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;Use o stringr para concatenar as seguintes strings em uma frase&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;x &amp;lt;- &amp;quot;.&amp;quot;
y &amp;lt;- &amp;quot;feliz&amp;quot;
w &amp;lt;- &amp;quot;acordei&amp;quot;
z &amp;lt;- &amp;quot;hoje&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Corrija as inconsistências nas colunas país, primeiro_nome, segundo_nome e crie uma nova coluna nomes contendo as duas anteriores. No final, ordene o banco em ordem alfabética.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;df &amp;lt;- 
  tibble::tribble(
    ~pais,    ~primeiro_nome, ~segundo_nome,
    # -------|----------------|-------------|
    &amp;quot;BRASIL&amp;quot;, &amp;quot;ISABELA&amp;quot;,       &amp;quot;MARTINS&amp;quot;,
    &amp;quot;Brasil&amp;quot;, &amp;quot;Eduardo&amp;quot;,       &amp;quot;cabellos&amp;quot;,
    &amp;quot;brasil&amp;quot;, &amp;quot;márcia&amp;quot;,         &amp;quot;pinto&amp;quot;,
    &amp;quot;bRaSiL&amp;quot;, &amp;quot;rogério&amp;quot;,        &amp;quot;Marinho&amp;quot;,
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;Transforme a string &lt;code&gt;c(&amp;quot;Seu nome&amp;quot;, &amp;quot;Seu sobrenome da mãe&amp;quot;, &amp;quot;Seu sobrenome do pai&amp;quot;)&lt;/code&gt; na string &lt;code&gt;&amp;quot;SEU SOBRENOME DO PAI, sua inicial do nome. sua inicial da mãe.&amp;quot;&lt;/code&gt;, como numa citação. Veja o exemplo abaixo:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Transforme
c(&amp;quot;Vinícius&amp;quot;, &amp;quot;de Souza&amp;quot;, &amp;quot;Maia&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Vinícius&amp;quot; &amp;quot;de Souza&amp;quot; &amp;quot;Maia&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Resultado
&amp;quot;MAIA, V. S.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;MAIA, V. S.&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;DESAFIO: Nos microdados da área de saúde, é comum que a variável idade esteja registrada da seguinte forma: “150,” “219,” “312,” “471.” Esses códigos indicam primeiro qual a unidade de medida da idade e segundo o valor desta unidade, 1 = horas, 2 = dias, 3 = meses, 4 = anos. Proponha um código usando &lt;code&gt;stringr&lt;/code&gt; para transformar o vetor abaixo em um valor numérico.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Não precisa se preocupar com essa parte
x &amp;lt;- as.character(round(c(
  runif(25, 100, 124),
  runif(25, 201, 230),
  runif(25, 301, 312),
  runif(25, 401, 499)
)))

# Como você transformaria esse vetor em número?
x
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   [1] &amp;quot;116&amp;quot; &amp;quot;117&amp;quot; &amp;quot;119&amp;quot; &amp;quot;124&amp;quot; &amp;quot;116&amp;quot; &amp;quot;123&amp;quot; &amp;quot;109&amp;quot; &amp;quot;104&amp;quot; &amp;quot;114&amp;quot; &amp;quot;107&amp;quot; &amp;quot;115&amp;quot; &amp;quot;118&amp;quot;
##  [13] &amp;quot;103&amp;quot; &amp;quot;120&amp;quot; &amp;quot;107&amp;quot; &amp;quot;106&amp;quot; &amp;quot;119&amp;quot; &amp;quot;102&amp;quot; &amp;quot;122&amp;quot; &amp;quot;109&amp;quot; &amp;quot;105&amp;quot; &amp;quot;112&amp;quot; &amp;quot;120&amp;quot; &amp;quot;105&amp;quot;
##  [25] &amp;quot;110&amp;quot; &amp;quot;217&amp;quot; &amp;quot;217&amp;quot; &amp;quot;205&amp;quot; &amp;quot;223&amp;quot; &amp;quot;221&amp;quot; &amp;quot;202&amp;quot; &amp;quot;226&amp;quot; &amp;quot;211&amp;quot; &amp;quot;226&amp;quot; &amp;quot;227&amp;quot; &amp;quot;225&amp;quot;
##  [37] &amp;quot;219&amp;quot; &amp;quot;227&amp;quot; &amp;quot;205&amp;quot; &amp;quot;228&amp;quot; &amp;quot;230&amp;quot; &amp;quot;204&amp;quot; &amp;quot;202&amp;quot; &amp;quot;216&amp;quot; &amp;quot;229&amp;quot; &amp;quot;211&amp;quot; &amp;quot;214&amp;quot; &amp;quot;230&amp;quot;
##  [49] &amp;quot;213&amp;quot; &amp;quot;219&amp;quot; &amp;quot;309&amp;quot; &amp;quot;311&amp;quot; &amp;quot;309&amp;quot; &amp;quot;307&amp;quot; &amp;quot;308&amp;quot; &amp;quot;309&amp;quot; &amp;quot;309&amp;quot; &amp;quot;306&amp;quot; &amp;quot;306&amp;quot; &amp;quot;308&amp;quot;
##  [61] &amp;quot;307&amp;quot; &amp;quot;312&amp;quot; &amp;quot;311&amp;quot; &amp;quot;302&amp;quot; &amp;quot;305&amp;quot; &amp;quot;301&amp;quot; &amp;quot;303&amp;quot; &amp;quot;306&amp;quot; &amp;quot;309&amp;quot; &amp;quot;309&amp;quot; &amp;quot;302&amp;quot; &amp;quot;306&amp;quot;
##  [73] &amp;quot;308&amp;quot; &amp;quot;304&amp;quot; &amp;quot;311&amp;quot; &amp;quot;482&amp;quot; &amp;quot;443&amp;quot; &amp;quot;403&amp;quot; &amp;quot;416&amp;quot; &amp;quot;499&amp;quot; &amp;quot;454&amp;quot; &amp;quot;409&amp;quot; &amp;quot;425&amp;quot; &amp;quot;406&amp;quot;
##  [85] &amp;quot;498&amp;quot; &amp;quot;426&amp;quot; &amp;quot;465&amp;quot; &amp;quot;418&amp;quot; &amp;quot;485&amp;quot; &amp;quot;428&amp;quot; &amp;quot;464&amp;quot; &amp;quot;419&amp;quot; &amp;quot;422&amp;quot; &amp;quot;472&amp;quot; &amp;quot;434&amp;quot; &amp;quot;493&amp;quot;
##  [97] &amp;quot;411&amp;quot; &amp;quot;405&amp;quot; &amp;quot;459&amp;quot; &amp;quot;478&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;
&lt;p&gt;Explore as contagens da variável &lt;code&gt;rincome&lt;/code&gt; em &lt;code&gt;gss_cat&lt;/code&gt;, ela ficaria bem representada num gráfico? De qual tipo?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Qual a religião mais comum em &lt;code&gt;gss_cat&lt;/code&gt;? Qual o partido (&lt;code&gt;partyid&lt;/code&gt;) mais popular?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A que religião se refere a variável &lt;code&gt;denom&lt;/code&gt;? Você pode descobrir isso fazendo uma tabela de contagens?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Como você poderia diminuir o número de categorias da variável &lt;code&gt;rincome&lt;/code&gt; do banco &lt;code&gt;gss_cat&lt;/code&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>ggplot2</title>
      <link>https://laddem.github.io/courses/tidyverse/dia3/</link>
      <pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/courses/tidyverse/dia3/</guid>
      <description>&lt;h2 id=&#34;o-pacote-ggplot2-e-a-gramática-dos-gráficos&#34;&gt;O pacote ggplot2 e a &amp;ldquo;gramática dos gráficos&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;Ainda me lembro da primeira vez que li o terceiro capítulo de &lt;a href=&#34;https://r4ds.had.co.nz/data-visualisation.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R for Data Science&lt;/a&gt; em que o conceito de visualização de dados é apresentado junto com a ideia de &lt;code&gt;data.frame&lt;/code&gt; e o código utilizado para gerar o gráfico. Acho que se o termo &lt;code&gt;sobrecarga infromacional&lt;/code&gt; não existisse, eu teria inventado ele na hora.&lt;/p&gt;
&lt;p&gt;Anedotas a parte, não é culpa do autor. O livro pressupõe um certo conhecimento prévio que eu não tinha quando o li pela primeira vez. Imagino que a maioria de vocês já viu gráficos na vida e até construiu um ou dois deles usando esse ou outros softwares estatísticos. O que talvez nem todos tenham claro na mente é que os gráficos são uma &lt;strong&gt;codificação num sistema de coordenadas das informações presentes em um banco de dados através de escalas&lt;/strong&gt;. Vamos destrinchar um pouco melhor isso:&lt;/p&gt;
&lt;p&gt;Suponha que você tenha o banco de dados &lt;code&gt;mpg&lt;/code&gt;, presente na biblioteca &lt;code&gt;ggplot2&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ggplot2)
mpg
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 234 x 11
##    manufacturer model    displ  year   cyl trans   drv     cty   hwy fl    class
##    &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
##  1 audi         a4         1.8  1999     4 auto(l~ f        18    29 p     comp~
##  2 audi         a4         1.8  1999     4 manual~ f        21    29 p     comp~
##  3 audi         a4         2    2008     4 manual~ f        20    31 p     comp~
##  4 audi         a4         2    2008     4 auto(a~ f        21    30 p     comp~
##  5 audi         a4         2.8  1999     6 auto(l~ f        16    26 p     comp~
##  6 audi         a4         2.8  1999     6 manual~ f        18    26 p     comp~
##  7 audi         a4         3.1  2008     6 auto(a~ f        18    27 p     comp~
##  8 audi         a4 quat~   1.8  1999     4 manual~ 4        18    26 p     comp~
##  9 audi         a4 quat~   1.8  1999     4 auto(l~ 4        16    25 p     comp~
## 10 audi         a4 quat~   2    2008     4 manual~ 4        20    28 p     comp~
## # ... with 224 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;De posse desse banco, você gostaria de construir um gráfico relacionando a eficiência do combustível de um carro (&lt;code&gt;hwy&lt;/code&gt;) com o seu peso (&lt;code&gt;displ&lt;/code&gt;). Sábio e malandro no &lt;code&gt;ggplot2&lt;/code&gt;, você escreve o código a seguir:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ,hwy, color = class)) +
  geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Mas fica a dúvida: que escolhas foram feitas no momento de traduzir a minha &lt;strong&gt;intenção&lt;/strong&gt; de produzir um diagrama de dispersão (&lt;em&gt;scatterplot&lt;/em&gt;) do peso com o consumo de gasolina para a representação gráfica diante de nós? Que unidades de medidas estão dispostas nos eixos X e Y? Qual o sistema de coordenadas no qual isto foi representado? Quem define os limites de início e fim de cada eixo? Como cada ponto recebeu a sua cor? Essas perguntas podem parecer óbvias ou tontas, dependendo da perspectiva e da experiência do usuário, mas elas são centrais para entender como construir e modificar gráficos no &lt;code&gt;ggplot2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O pacote é inspirado pela &lt;a href=&#34;http://vita.had.co.nz/papers/layered-grammar.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gramática dos Gráficos&lt;/a&gt;, e procura decompor o processo de produção de gráficos em uma sequência de camadas que vão se sobrepondo até chegar no objeto desejado.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a camada dos &lt;strong&gt;dados&lt;/strong&gt; e do mapeamento &lt;strong&gt;estético&lt;/strong&gt; (que variáveis vão em quais eixos/escalas)&lt;/li&gt;
&lt;li&gt;a camada dos objetos geométricos (pontos, linhas, barras, etc.)&lt;/li&gt;
&lt;li&gt;a camada das escalas (natural? logarítmica? escala de cores?)&lt;/li&gt;
&lt;li&gt;a camada das &lt;strong&gt;facetas&lt;/strong&gt; (mini gráficos separados por alguma característica)&lt;/li&gt;
&lt;li&gt;a camada das transformações estatísticas (distribuições de probabilidade, contagens, proporções, etc.)&lt;/li&gt;
&lt;li&gt;o sistema de coordenadas (cartesiano? polar?)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Obviamente, nem todo gráfico possui essa complexidade, e na verdade, a maioria dos gráficos que fazemos se encaixa num pequeno subgrupo de todas essas especificações, então porque toda essa complexidade?&lt;/p&gt;
&lt;p&gt;Porque não? Em primeiro lugar, se você está produzindo visualizações simples que cumprem seu propósito, você não precisa se preocupar com quase nada disso, os &lt;strong&gt;padrões&lt;/strong&gt; do ggplot2, via de regra, se encaixam perfeitamente na maioria dos problemas e, em segundo lugar, se você sentir a necessidade de ir mais fundo e produzir visualizações mais complexas, as mesmas ferramentas que você já conhece estão a sua disposição.&lt;/p&gt;
&lt;h2 id=&#34;três-gráficos-para-entender-a-mecânica-do-ggplot2&#34;&gt;Três gráficos para entender a mecânica do ggplot2&lt;/h2&gt;
&lt;h3 id=&#34;scatterplots&#34;&gt;Scatterplots&lt;/h3&gt;
&lt;p&gt;Voltemos para o nosso gráfico original, vamos decompô-lo em suas camadas como se estivéssemos construindo ele passo-a-passo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Primeiro, a camada dos dados e mapeamentos estéticos
ggplot(
  # Dados
  data = mpg,
  # Que variável vai em que eixo
  mapping = aes(x = displ, y = hwy)
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Examinando a saída, vemos que ggplot desenhou um canvas com nossas variáveis, mas ainda nenhum objeto geométrico. Tudo bem, adicionamos (&lt;code&gt;+&lt;/code&gt;) uma camada de objetos geométricos, no caso, pontos.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Objetos geométricos começam com &amp;quot;geom_&amp;quot;
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + # adicionamos
  geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Agora, nosso gráfico já tem uma cara de diagrama de dispersão. Mas ainda não tem as cores das classes de automóvel. Tudo bem, voltamos para a primeira camada e informamos que queremos um terceiro mapeamento estético.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# A cor é mapeada a variável class
ggplot(data = mpg, 
       mapping = aes(
         x = displ, y = hwy,
         color = class) # novo mapeamento estético
       ) + # adicionamos
  geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ok, chegamos no gráfico original. Mas como podem entender melhor as outras camadas? Vamos pensar, por exemplo, que talvez queiramos trabalhar a variável &lt;code&gt;hwy&lt;/code&gt; numa escala logarítmica. Poderíamos transformar a variável original, claro, mas o &lt;code&gt;ggplot2&lt;/code&gt; nos permite especificar as transformações diretamente nas escalas do gráfico!&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +
  geom_point() + # adicionando uma nova &amp;quot;camada&amp;quot;
  scale_y_continuous(trans = &amp;quot;log&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Mas você, leitor, não ficou satisfeito. Você queria era transformar a variável &lt;code&gt;displ&lt;/code&gt; em raíz quadrada. Tudo bem:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +
  geom_point() +
  scale_x_continuous(trans = &amp;quot;sqrt&amp;quot;) # especificamos a transformação na escala de x
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Outro leitor não estava interessado nas escalas dos eixos x ou y, que são contínuas nesse caso, mas sim na seleção de cores utilizadas para representar a escala das cores. Por ser um leitor conhecedor das formas de deficiência visual cromática, ele optou pelas paletas de cores do &lt;code&gt;Colorbrewer&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +
  geom_point() +
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;) # transformação da escala de cores
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Um geógrafo entrou na conversa e disse que o sistema cartesiano de coordenadas estava iludindo os leitores a pensar que a relação entre peso e consumo de combustível estava distorcida pelas diferenças entre as unidades de medida das variáveis, produzida pelo sistema cartesiano de coordenadas, então ele sugeriu que usássemos um sistema de coordenadas fixas:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +
  geom_point() +
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;) +
  coord_fixed()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ficou horrível, esse geógrafo não sabe nada. Como recompensa pela sua ignorância, agora ele ocupa um cargo no primeiro escalão do Ministério da Saúde.&lt;/p&gt;
&lt;p&gt;Outro pesquisador estava interessado em visualizar as relações entre consumo, peso e classe, mas levando em consideração o fabricante do veículo, então, ele sugeriu que construíssemos um gráfico para cada. Você, que é preguiçoso, usou a capacidade do &lt;code&gt;ggplot2&lt;/code&gt; de dividir gráficos através da introdução de uma camada de &lt;code&gt;facets&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +
  geom_point() +
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;) + # adicionamos mais uma camada
  facet_wrap(~manufacturer)              # de facetas
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Agora, muito satisfeitos com o resultado do nosso trabalho, resolvemos incluir o gráfico numa publicação, mas do jeito que está, não dá. Então adicionamos mais algumas camadas para torná-lo apresentável.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = class)) +
  geom_point() +
  scale_color_brewer(palette = &amp;quot;Set1&amp;quot;) + 
  facet_wrap(~manufacturer) +
  # Colocamos os nomes nos eixos
  labs(title = &amp;quot;Relação entre peso e economia de combustível de automóveis&amp;quot;,
       subtitle = &amp;quot;Separado por categoria e fabricante&amp;quot;,
       x = &amp;quot;Peso do veículo em toneladas&amp;quot;,
       y = &amp;quot;Consumo em milhas por galão de 3,5l&amp;quot;,
       color = &amp;quot;Categoria&amp;quot;,
       caption = &amp;quot;Fonte: Agência de Proteção Ambiental Estadunidense.&amp;quot;) +
  # Escolhemos um tema bonito
  theme_light() +
  # Mudamos a posição da legenda, pra ficar mais jeitozinho
  theme(legend.position = &amp;quot;bottom&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Pronto. Mamãe vai ficar orgulhosa.&lt;/p&gt;
&lt;p&gt;Brincadeiras a parte, entendendo um pouco melhor a gramática do gráfico, podemos construir nossas visualizações passo a passo, até chegar no resultado desejado.&lt;/p&gt;
&lt;h3 id=&#34;lineplots&#34;&gt;Lineplots&lt;/h3&gt;
&lt;p&gt;O segundo exemplo que quero mostrar pra vocês é a construção de gráficos com linhas. Eles são interessantes porque dão bastante dor de cabeça pra quem está começando. Vamos continuar brincando com o &lt;code&gt;mpg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Agora que eu fiz meu diagrama de dispersão, estou interessado em começar um processo de modelagem, mas primeiro quero ter uma noção visual da relação entre as variáveis.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy)) +
  geom_point() +
  geom_smooth()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;geom_smooth&lt;/code&gt; ajusta um modelo aos dados e desenha a linha com os valores preditos. Agora que temos dois objetos geométricos, talvez seja interessante ver o que acontece se eu colocar as cores das classes.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy, color = class)) +
  geom_point() +
  geom_smooth(se = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Veja que ele fez o possível para aplicar as escalas nos dois objetos geométricos. Eu pedi para geom_smooth tirar os intervalos de confiança para melhorar a visibilidade. Mas e seu eu quisesse ver a cor dos pontos, mas manter a linha de tendência geral? Você pode especificar mapeamentos estéticos gerais (na primeira camada) ou mapeamentos estéticos locais (dentro de cada camada geométrica).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy)) + # mapeamentos gerais, se aplicam a todos os objetos
  geom_point(aes(color = class)) + # mapeamento local, só se aplica aqui
  geom_smooth(se = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ok, mas e se eu quisesse um modelo linear ao invés de um &amp;ldquo;Smoother de Loess&amp;rdquo;?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy)) + 
  geom_point(aes(color = class)) +
  geom_smooth(method = lm)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Não vou entrar muito nos argumentos de cada objeto geométrico e função, vocês podem aprender isso na prática olhando a documentação das funções que são do interesse de vocês. &lt;code&gt;?geom_smooth&lt;/code&gt; para ver todas as possibilidades. Uma dica boa é usar &lt;code&gt;geom_smooth&lt;/code&gt; para verificar interações entre variáveis numéricas e fatores.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy, color = factor(cyl))) + 
  geom_point() +
  geom_smooth(method = lm)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ok, mas e se temos um gráfico de linhas mais tradicional, tipo uma série histórica?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;economics
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 574 x 6
##    date         pce    pop psavert uempmed unemploy
##    &amp;lt;date&amp;gt;     &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1 1967-07-01  507. 198712    12.6     4.5     2944
##  2 1967-08-01  510. 198911    12.6     4.7     2945
##  3 1967-09-01  516. 199113    11.9     4.6     2958
##  4 1967-10-01  512. 199311    12.9     4.9     3143
##  5 1967-11-01  517. 199498    12.8     4.7     3066
##  6 1967-12-01  525. 199657    11.8     4.8     3018
##  7 1968-01-01  531. 199808    11.7     5.1     2878
##  8 1968-02-01  534. 199920    12.3     4.5     3001
##  9 1968-03-01  544. 200056    11.7     4.1     2877
## 10 1968-04-01  544  200208    12.3     4.6     2709
## # ... with 564 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Podemos criar um gráfico de linhas tendo como base a data (&lt;code&gt;date&lt;/code&gt;) e alguma das variáveis registradas, como a taxa de desemprego.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(economics, aes(x = date, y = uempmed)) +
  geom_line()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ou o consumo em bilhões de dólares&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(economics, aes(x = date, y = pce)) +
  geom_line()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ou a população&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(economics, aes(x = date, y = pop)) +
  geom_line()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ok, mas eu quero comparar visualmente o que ocorre com uma variável quando a outra muda. Podemos recorrer ao que aprendemos sobre mapeamentos estéticos globais e locais.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(economics, aes(x = date)) +
  geom_line(aes(y = uempmed)) +
  geom_line(aes(y = pce)) +
  geom_line(aes(y = pop))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ficou meio ruim, porque as variável tem grandezas distintas. Podemos tentar resolver esse problema aplicando transformações na variável idade, mas meio que pra qualquer lugar onde caminhos, batemos numa parede ou noutra. Esse tipo de solução é muito frequente entre pessoas que vem do &lt;code&gt;base&lt;/code&gt; pro &lt;code&gt;ggplot2&lt;/code&gt;, porque no base estamos acostumado a ideia de adicionar mais objetos geométricos ao nosso gráfico original adicionando invocações à funções como &lt;code&gt;lines&lt;/code&gt; ou &lt;code&gt;text&lt;/code&gt;. Porém, a solução preferida no &lt;code&gt;tidyverse&lt;/code&gt; é aplicar uma transformação no banco original de tal forma que as nossas variáveis numéricas caiam todas num par que especifica &lt;code&gt;o nome da variável | e o valor dela&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(tidyr)
economics %&amp;gt;% 
  pivot_longer(cols = -date,
               names_to = &amp;quot;variavel&amp;quot;,
               values_to = &amp;quot;valor&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 2,870 x 3
##    date       variavel    valor
##    &amp;lt;date&amp;gt;     &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;
##  1 1967-07-01 pce         507. 
##  2 1967-07-01 pop      198712  
##  3 1967-07-01 psavert      12.6
##  4 1967-07-01 uempmed       4.5
##  5 1967-07-01 unemploy   2944  
##  6 1967-08-01 pce         510. 
##  7 1967-08-01 pop      198911  
##  8 1967-08-01 psavert      12.6
##  9 1967-08-01 uempmed       4.7
## 10 1967-08-01 unemploy   2945  
## # ... with 2,860 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Talvez não fique imediatamente claro para todos porque eu optei por esta solução, mas talvez essa próxima figura fale mais que mil palavras.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;economics %&amp;gt;% 
  pivot_longer(cols = -date,
               names_to = &amp;quot;variavel&amp;quot;,
               values_to = &amp;quot;valor&amp;quot;) %&amp;gt;% 
  ggplot(aes(date, valor)) +
  geom_line() +
  facet_wrap(~variavel, scales = &amp;quot;free_y&amp;quot;, ncol = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A ênfase em usar &lt;code&gt;tidy data&lt;/code&gt; no &lt;code&gt;tidyverse&lt;/code&gt; decorre do fato de que todos os pacotes são programados para usar a forma de organização do banco como uma alavanca para facilitar a análise de dados. Vejam esta outra &lt;code&gt;pipeline&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Como vamos fazer algumas transformações nos dados, vamos carregar o dplyr aqui
library(dplyr)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &#39;dplyr&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:stats&#39;:
## 
##     filter, lag
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &#39;package:base&#39;:
## 
##     intersect, setdiff, setequal, union
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;economics %&amp;gt;% 
  pivot_longer(cols = -date,
               names_to = &amp;quot;variavel&amp;quot;,
               values_to = &amp;quot;valor&amp;quot;) %&amp;gt;% 
  filter(variavel %in% c(&amp;quot;psavert&amp;quot;, &amp;quot;uempmed&amp;quot;)) %&amp;gt;% 
  ggplot(aes(date, valor, color = variavel, shape = variavel)) +
  geom_line()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;E agora vejam um dos erros mais comuns de quem está começando:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;economics %&amp;gt;% 
  pivot_longer(cols = -date,
               names_to = &amp;quot;variavel&amp;quot;,
               values_to = &amp;quot;valor&amp;quot;) %&amp;gt;% 
  filter(variavel %in% c(&amp;quot;psavert&amp;quot;, &amp;quot;uempmed&amp;quot;)) %&amp;gt;% 
  ggplot(aes(date, valor)) +
  geom_line()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Ao não especificar uma separação entre grupos, o &lt;code&gt;ggplot2&lt;/code&gt; não interpreta meus dados! Ele simplesmente conecta as observações mais ou menos na ordem em que elas aparecem no eixo x. Para resolver esse problema, precisamos especificar grupos! Seja indiretamente, através de uma escala de cores, formas ou tipos de linha, seja diretamente através da estética &lt;code&gt;groups&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;economics %&amp;gt;% 
  pivot_longer(cols = -date,
               names_to = &amp;quot;variavel&amp;quot;,
               values_to = &amp;quot;valor&amp;quot;) %&amp;gt;% 
  filter(variavel %in% c(&amp;quot;psavert&amp;quot;, &amp;quot;uempmed&amp;quot;)) %&amp;gt;% 
  ggplot(aes(date, valor, group = variavel)) +
  geom_line()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;economics %&amp;gt;% 
  pivot_longer(cols = -date,
               names_to = &amp;quot;variavel&amp;quot;,
               values_to = &amp;quot;valor&amp;quot;) %&amp;gt;% 
  filter(variavel %in% c(&amp;quot;psavert&amp;quot;, &amp;quot;uempmed&amp;quot;)) %&amp;gt;% 
  ggplot(aes(date, valor, color = variavel, linetype = variavel)) +
  geom_line()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Legal né?&lt;/p&gt;
&lt;h3 id=&#34;barcharts&#34;&gt;Barcharts&lt;/h3&gt;
&lt;p&gt;Para terminar e ilustrar alguns exemplos de transformação estatística, vamos fazer alguns gráficos de barras usando o &lt;code&gt;diamonds&lt;/code&gt;, um banco de dados para fazer a alegria das piores pessoas na história da humanidade.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;diamonds
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 53,940 x 10
##    carat cut       color clarity depth table price     x     y     z
##    &amp;lt;dbl&amp;gt; &amp;lt;ord&amp;gt;     &amp;lt;ord&amp;gt; &amp;lt;ord&amp;gt;   &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
##  1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43
##  2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31
##  3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31
##  4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63
##  5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75
##  6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48
##  7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47
##  8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53
##  9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49
## 10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39
## # ... with 53,930 more rows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Que tal um gráfico básico, do número de diamantes de acordo com a qualidade de seu corte (&lt;code&gt;cut&lt;/code&gt;). Olhando a ajuda do &lt;code&gt;?geom_bar&lt;/code&gt; você vai na certeza de que você entendeu a aula e escreve o seguinte código:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(diamonds, aes(x = cut, color = cut)) +
  geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-29-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;E agora, você fica olhando pro seu computador com cara de tacho. O que aconteceu? Bom, no caso de &lt;code&gt;geoms&lt;/code&gt; com duas dimensões, podem existir casos em que você quer dar mapeamentos estéticos distintos para as bordas e para o conteúdo deles. Por isso, existem as estéticas &lt;code&gt;color&lt;/code&gt; e &lt;code&gt;fill&lt;/code&gt;. Você pode pensar nelas como a casca do pão e o recheio.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(diamonds, aes(x = cut, fill = cut)) +
  geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-30-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Mas, você ainda não está satisfeito. Pela sua ampla experiência com uma das indústrias mais sangrentas e retrógadas do planeta você entende que a qualidade do corte não é o suficiente para determinar o valor de um diamante, então você quer ver a distribuição também pelo nível de transparência do diamante, codificado na variável &lt;code&gt;clarity&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(diamonds, aes(x = cut, fill = clarity)) +
  geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-31-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Esse é um primeiro passo interessante, e se tivessemos apenas duas ou três categorias, a gente poderia parar por aí. Mas no geral, para facilitar comparações, queremos poder controlar o posicionamento das barras. Isso é possível ajustando o argumento &lt;code&gt;position&lt;/code&gt; dos &lt;code&gt;geoms&lt;/code&gt; onde isso é necessário.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# O padrão
ggplot(diamonds, aes(x = cut, fill = clarity)) +
  geom_bar(position = &amp;quot;stack&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-32-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# O certo
ggplot(diamonds, aes(x = cut, fill = clarity)) +
  geom_bar(position = &amp;quot;dodge&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-32-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Empilhadas a 100%, para facilitar comparações entre categorias
ggplot(diamonds, aes(x = cut, fill = clarity)) +
  geom_bar(position = &amp;quot;fill&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-32-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Pode parecer jocoso, mas em 99% dos casos, o correto é você usar barras lado-a-lado, assim você visualmente pode comparar as categorias simplesmente comparando a altura das barras. Da próxima vez que você pensar em construir um gráfico de pizza, desista e faça um gráfico de barras com &lt;code&gt;position = &amp;quot;dodge&amp;quot;&lt;/code&gt;. Seus leitores vão agradecer.&lt;/p&gt;
&lt;p&gt;Esse exemplo também é legal para gente olhar um pouco para a parte de transformações estatísticas nas variáveis:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;diamonds2 &amp;lt;- diamonds %&amp;gt;% 
  count(cut) %&amp;gt;% 
  mutate(prop = n/sum(n))

diamonds2 %&amp;gt;% 
  ggplot() +
  geom_bar(aes(x = cut, y = prop), stat = &amp;quot;identity&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-33-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Por padrão, &lt;code&gt;geom_bar&lt;/code&gt; já faz o primeiro passo e utiliza as contagens (&lt;code&gt;stat_count&lt;/code&gt;) para produzir o gráfico de barras, mas eu posso mudar esse comportamento através do argumento &lt;code&gt;stat&lt;/code&gt;. Eu também posso querer mostrar proprções ao invés de contagens de outra forma mais sucinta.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(diamonds, aes(x = cut, 
                     # ao fazer isso, eu mudo o padrão de contagens para proporções.
                     y = stat(prop), 
                     # preciso especificar o grupo, se não todas as barras vão a 100%.
                     group = 1)) +
  geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-34-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Você pode construir seus gráficos a partir de transformações estatísticas ao invés de objetos geométricos:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = diamonds) + 
  stat_summary(
    mapping = aes(x = cut, y = depth),
    fun.min = min,
    fun.max = max,
    fun = median
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-35-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;As transformações estatísticas começam sempre com &lt;code&gt;stat_&lt;/code&gt; e cada uma tem um objeto geométrico padrão, que você pode mudar com o argumento &lt;code&gt;geom&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = diamonds) + 
  stat_summary(
    mapping = aes(x = cut, y = depth),
    fun.min = min,
    fun.max = max,
    # Não dá pra mostrar a mediana com barras de erro, sorry
    #fun = median,
    geom = &amp;quot;errorbar&amp;quot;
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-36-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;E era basicamente isso que eu tinha a dizer sobre como construir gráficos no &lt;code&gt;ggplot2&lt;/code&gt;! Abaixo, uma seção com alguns detalhes para quem tiver interesse nessa parte de embelezamento dos gráficos.&lt;/p&gt;
&lt;h2 id=&#34;perfumaria&#34;&gt;Perfumaria&lt;/h2&gt;
&lt;p&gt;Essa seção pretende introduzir um pouco uma parte de customização dos gráficos. Frequentemente, as publicações de regras mais estritas sobre formatos, fontes, temas, etc. As opções padrão do &lt;code&gt;ggplot2&lt;/code&gt; podem não se acomodar, então, cabe a nós ajeitar essa reta final.&lt;/p&gt;
&lt;h3 id=&#34;títulos-e-rótulos&#34;&gt;Títulos e rótulos&lt;/h3&gt;
&lt;p&gt;A melhor maneira de ajustar títulos e rótulos é através de &lt;code&gt;labs&lt;/code&gt;, porque você resolve tudo em uma só invocação. Mas também há uma função &lt;code&gt;ggtitle&lt;/code&gt;. Com ela, é possível setar apenas título e subtítulo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy, color = class)) +
  geom_point() +
  ggtitle(&amp;quot;Título do gráfico&amp;quot;, &amp;quot;Subtítulo do gráfico&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-37-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A maioria das opções de customização mais fina está na camada &lt;code&gt;theme&lt;/code&gt;. Internamente, cada elemento do gráfico é controlado por uma função &lt;code&gt;element_&lt;/code&gt;, por exemplo, &lt;code&gt;element_text&lt;/code&gt; desenha textos e recebe argumentos relativos a isso, como família da fonte, tamanho, cor, etc.&lt;/p&gt;
&lt;p&gt;Ali, você tem um controle mais direto sobre a construção do gráfico. No que diz respeito aos rótulos, podemos mudar a fonte do título.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy, color = class)) +
  geom_point() +
  ggtitle(&amp;quot;Título do gráfico&amp;quot;, &amp;quot;Subtítulo do gráfico&amp;quot;) +
  # Family é meio complicado de mudar, mas você pode escolher serif, sans ou mono
  theme(plot.title = element_text(family = &amp;quot;serif&amp;quot;, face = &amp;quot;bold&amp;quot;, colour = &amp;quot;red&amp;quot;),
        plot.subtitle = element_text(family = &amp;quot;mono&amp;quot;, face = &amp;quot;italic&amp;quot;, color = &amp;quot;forestgreen&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-38-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Usando uma síntaxe similar e os argumentos da função &lt;code&gt;element_text&lt;/code&gt;, você pode mudar qual outro elemento textual do gráfico.&lt;/p&gt;
&lt;h3 id=&#34;eixos&#34;&gt;Eixos&lt;/h3&gt;
&lt;p&gt;Continuando o nosso frankenstein, podemos fazer alterações nos eixos, como remover pedaços de um eixo, modificar sua forma, seu ângulo e ajustar sua posição.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy, color = class)) +
  geom_point() +
  ggtitle(&amp;quot;Título do gráfico&amp;quot;, &amp;quot;Subtítulo do gráfico&amp;quot;) +
  # Family é meio complicado de mudar, mas você pode escolher serif, sans ou mono
  theme(plot.title = element_text(family = &amp;quot;serif&amp;quot;, face = &amp;quot;bold&amp;quot;, colour = &amp;quot;red&amp;quot;),
        plot.subtitle = element_text(family = &amp;quot;mono&amp;quot;, face = &amp;quot;italic&amp;quot;, color = &amp;quot;forestgreen&amp;quot;),
        # você pode remover pedaços inteiros do gráfico com &amp;quot;element_blank()&amp;quot;
        axis.ticks.y = element_blank(),
        axis.text.y = element_blank(),
        axis.title.y = element_blank(),
        # você pode mudar a orientação, angulo, posição e até formato de elementos
        axis.title = element_text(angle = 90, hjust = 1),
        axis.text.x = element_text(angle = 45, vjust = 1),
        axis.ticks.x = element_line(
          colour = &amp;quot;royalblue3&amp;quot;,
          arrow = grid::arrow(angle = 45, length = unit(0.5, &amp;quot;cm&amp;quot;), ends = &amp;quot;first&amp;quot;, type = &amp;quot;closed&amp;quot;))
  )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-39-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Realmente, o céu é o limite e você pode deixar o seu gráfico tão horrível quanto você quiser.&lt;/p&gt;
&lt;h3 id=&#34;legendas&#34;&gt;Legendas&lt;/h3&gt;
&lt;p&gt;Legendas no &lt;code&gt;ggplot2&lt;/code&gt; são controladas em alguns lugares diferentes. Elas são tratadas como guias (&lt;code&gt;guides&lt;/code&gt;) no sentido de que são guias para o leitor. Vamos pegar outra variável de cores, para poder brincar com diferentes tipos de legenda.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy, color = cyl)) +
  geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-40-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Por padrão, ele entende cilindros como numérico e faz uma barra de cores contínua. Mas eu quero uma legenda!&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Jeito 1 - Simples e rápido
ggplot(mpg, aes(displ, hwy, color = cyl)) +
  geom_point() +
  guides(color = &amp;quot;legend&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-41-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Jeito 2 - Posso mudar detalhes!
ggplot(mpg, aes(displ, hwy, color = cyl)) +
  geom_point() +
  guides(color = guide_legend(title = &amp;quot;Cilindrossss&amp;quot;,
                              title.position = &amp;quot;right&amp;quot;,
                              label.position = &amp;quot;bottom&amp;quot;,
                              direction = &amp;quot;horizontal&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-41-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Jeito 3 - Mexendo diretamente nas escalas
ggplot(mpg, aes(displ, hwy, color = cyl)) +
  geom_point() +
  # Minha escala de cores preferida
  scale_color_viridis_c(guide = &amp;quot;legend&amp;quot;, option = &amp;quot;B&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-41-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Jeito 3 - de novo, mas agora usando a especificação mais completa do guia
ggplot(mpg, aes(displ, hwy, color = cyl)) +
  geom_point() +
  # Minha escala de cores preferida
  scale_color_viridis_c(
    guide = guide_legend(title = &amp;quot;Cilindrossss&amp;quot;,
                         title.position = &amp;quot;right&amp;quot;,
                         label.position = &amp;quot;bottom&amp;quot;,
                         direction = &amp;quot;horizontal&amp;quot;), 
    option = &amp;quot;B&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-41-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Em qualquer lugar onde você possa especificar &lt;code&gt;guides&lt;/code&gt;, você pode passar o valor &lt;code&gt;FALSE&lt;/code&gt; para remover a legenda.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Na camada &amp;quot;guides()&amp;quot;
ggplot(mpg, aes(displ, hwy, color = cyl, size = cyl)) +
  geom_point() +
  guides(color = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-42-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Na própria escala
ggplot(mpg, aes(displ, hwy, color = cyl, size = cyl)) +
  geom_point() +
  scale_size(guide = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-42-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Bônus = no tema, mas aí você remove todas
ggplot(mpg, aes(displ, hwy, color = cyl, size = cyl)) +
  geom_point() +
  theme(legend.position = &amp;quot;none&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-42-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;escalas&#34;&gt;Escalas&lt;/h3&gt;
&lt;p&gt;Já dei uma palhinha de editar escalas, antes, então aqui vai um pouco mais de detalhe:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy, color = cyl, size = cyl)) +
  geom_point()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-43-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Mudar as cores manualmente
cores &amp;lt;- c(&amp;quot;red&amp;quot;, &amp;quot;green&amp;quot;, &amp;quot;blue&amp;quot;, &amp;quot;yellow&amp;quot;, &amp;quot;purple&amp;quot;, &amp;quot;tomato&amp;quot;, &amp;quot;wheat2&amp;quot;)

ggplot(mpg, aes(displ, hwy, color = class, size = cyl)) +
  geom_point() +
  scale_color_manual(values = cores)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-43-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;# Mudar os tamanhos
ggplot(mpg, aes(displ, hwy, color = class, size = cyl)) +
  geom_point() +
  scale_color_manual(values = cores) +
  # scale_radius para fazer proprcional ao raio
  scale_radius(range = c(3,6))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-43-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy, color = class, size = cyl)) +
  geom_point() +
  scale_color_manual(values = cores) +
  # scale_size para fazer proprcional a área
  scale_size(range = c(2,4))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-43-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;É possível aplicar transformações na variável diretamente na escala, mudar o número de &lt;code&gt;breaks&lt;/code&gt; e especificar &lt;code&gt;labels&lt;/code&gt; e alterar os limites do gráfico manualmente.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy, color = class, size = cyl)) +
  geom_point() +
  scale_x_continuous(trans = &amp;quot;sqrt&amp;quot;, name = &amp;quot;Peso&amp;quot;) +
  scale_y_continuous(
    name   = &amp;quot;Consumo (rodovia)&amp;quot;,
    limits = c(0, 50),
    breaks = c(10, 20, 30, 40, 50), 
    labels = c(&amp;quot;fogo no clima&amp;quot;, &amp;quot;aquecimento global&amp;quot;, &amp;quot;caldeira planetária&amp;quot;, &amp;quot;deixa pra próxima geração&amp;quot;, &amp;quot;desastre em câmera lenta&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-44-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Cada escala vai ter argumentos específicos que fazem sentido em seu próprio contexto. Escalas contínuas tem argumentos para transformação estatística, escalas discretas não aceitam argumentos contínuos e etc.&lt;/p&gt;
&lt;p&gt;Isto encerra nossa parte de &lt;code&gt;ggplot2&lt;/code&gt;, que tal uns exercícios pra esquentar?&lt;/p&gt;
&lt;h2 id=&#34;exercícios&#34;&gt;Exercícios&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;O que tem de errado no código abaixo? Por que os pontos não ficaram azuis?&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, color = &amp;quot;blue&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-45-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;Utilizando o banco &lt;code&gt;mpg&lt;/code&gt;, faça o diagrama de dispersão de &lt;code&gt;displ&lt;/code&gt; por &lt;code&gt;hwy&lt;/code&gt; e mapeie a cor para &lt;code&gt;class&lt;/code&gt;, o tamanho para &lt;code&gt;cyl&lt;/code&gt; e a forma para &lt;code&gt;manufacturer&lt;/code&gt;. Como esses atributos estéticos se comportam diferente para variáveis categóricas vs contínuas?&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Utilizando o &lt;code&gt;diamonds&lt;/code&gt;, crie um diagrama de dispersão que relacione &lt;code&gt;carat&lt;/code&gt; com &lt;code&gt;price&lt;/code&gt;. Explore algumas outras variáveis utilizando escalas de cor para ver se você identifica algum padrão. Aplique transformações nas variáveis que você considerar justificadas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ainda continuando o exemplo anterior, aplique um &lt;code&gt;geom_smooth&lt;/code&gt; utilizando várias opções de &lt;code&gt;method&lt;/code&gt; para as variáveis originais ou transformadas.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No nosso gráfico de barras usando &lt;code&gt;stat(prop)&lt;/code&gt; a gente precisou colocar &lt;code&gt;group = 1&lt;/code&gt;, porque? Qual é a diferença entre esses dois códigos?&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = diamonds) + 
  geom_bar(mapping = aes(x = cut, y = after_stat(prop)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-47-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = diamonds) + 
  geom_bar(mapping = aes(x = cut, fill = color, y = after_stat(prop)))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-47-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;&lt;code&gt;stat_smooth&lt;/code&gt; é muito parecido com &lt;code&gt;geom_smooth&lt;/code&gt;, mas há uma diferença sutil. Compare os códigos abaixo.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy)) + 
  geom_point() +
  geom_smooth()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-48-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy)) + 
  geom_point() +
  stat_smooth(geom = &amp;quot;step&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-48-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy)) + 
  geom_point() +
  stat_smooth(geom = &amp;quot;linerange&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-48-3.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy)) + 
  geom_point() +
  stat_smooth(geom = &amp;quot;errorbar&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-48-4.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mpg, aes(displ, hwy)) + 
  geom_point() +
  stat_smooth(geom = &amp;quot;crossbar&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-48-5.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;
&lt;p&gt;Usando o &lt;code&gt;mpg&lt;/code&gt; e &lt;code&gt;facet_grid&lt;/code&gt;, crie um scatterplot que contenha &lt;code&gt;displ&lt;/code&gt; no eixo x, &lt;code&gt;hwy&lt;/code&gt; no eixo y, &lt;code&gt;class&lt;/code&gt; na cor, &lt;code&gt;drv&lt;/code&gt; nas facetas-coluna e &lt;code&gt;cyl&lt;/code&gt; nas facetas linha.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Você acha que os dois gráficos abaixo ficarão diferentes um do outro? Porque? Tente responder antes de rodar o código.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point() + 
  geom_smooth()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-50-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot() + 
  geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &#39;loess&#39; and formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-50-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;Tente recriar o seguinte gráfico&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &#39;y ~ x&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-51-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;Transforme o gráfico seguir em um gráfico de pizza usando &lt;code&gt;coord_polar&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(diamonds, aes(cut, fill = cut)) +
  geom_bar()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/courses/tidyverse/dia3_files/figure-html/unnamed-chunk-52-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>https://laddem.github.io/talk/example-talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/talk/example-talk/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page elements&lt;/a&gt; such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dia 1</title>
      <link>https://laddem.github.io/post/dia-1/</link>
      <pubDate>Wed, 19 May 2021 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/post/dia-1/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summary(Orange)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  Tree       age         circumference  
##  3:7   Min.   : 118.0   Min.   : 30.0  
##  1:7   1st Qu.: 484.0   1st Qu.: 65.5  
##  5:7   Median :1004.0   Median :115.0  
##  2:7   Mean   : 922.1   Mean   :115.9  
##  4:7   3rd Qu.:1372.0   3rd Qu.:161.5  
##        Max.   :1582.0   Max.   :214.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://laddem.github.io/post/dia-1/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to Wowchemy, the website builder for Hugo</title>
      <link>https://laddem.github.io/post/getting-started/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site&lt;/li&gt;
&lt;li&gt;The template can be modified and customised to suit your needs. It&amp;rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a &lt;strong&gt;no-code solution (write in Markdown and customize with YAML parameters)&lt;/strong&gt; and having &lt;strong&gt;flexibility to later add even deeper personalization with HTML and CSS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;get-started&#34;&gt;Get Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;👉 &lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Create a new site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;📚 &lt;a href=&#34;https://wowchemy.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Personalize your site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💬 &lt;a href=&#34;https://discord.gg/z8wNYzb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chat with the &lt;strong&gt;Wowchemy community&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Hugo community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🐦 Twitter: &lt;a href=&#34;https://twitter.com/wowchemy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@wowchemy&lt;/a&gt; &lt;a href=&#34;https://twitter.com/GeorgeCushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@GeorgeCushen&lt;/a&gt; &lt;a href=&#34;https://twitter.com/search?q=%28%23MadeWithWowchemy%20OR%20%23MadeWithAcademic%29&amp;amp;src=typed_query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#MadeWithWowchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💡 &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Request a &lt;strong&gt;feature&lt;/strong&gt; or report a &lt;strong&gt;bug&lt;/strong&gt; for &lt;em&gt;Wowchemy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;⬆️ &lt;strong&gt;Updating Wowchemy?&lt;/strong&gt; View the &lt;a href=&#34;https://wowchemy.com/docs/guide/update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/updates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crowd-funded-open-source-software&#34;&gt;Crowd-funded open-source software&lt;/h2&gt;
&lt;p&gt;To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.&lt;/p&gt;
&lt;h3 id=&#34;-click-here-to-become-a-sponsor-and-help-support-wowchemys-future-httpswowchemycomplans&#34;&gt;&lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;❤️ Click here to become a sponsor and help support Wowchemy&amp;rsquo;s future ❤️&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a token of appreciation for sponsoring, you can &lt;strong&gt;unlock &lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these&lt;/a&gt; awesome rewards and extra features 🦄✨&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/wowchemy/hugo-academic-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Academic CLI&lt;/a&gt;:&lt;/strong&gt; Automatically import publications from BibTeX&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inspiration&#34;&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://wowchemy.com/user-stories/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://wowchemy.com/docs/page-builder/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://wowchemy.com/docs/import/jupyter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://wowchemy.com/docs/install-locally/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://wowchemy.com/docs/customization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 34+ language packs including English, 中文, and Português&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;p&gt;Wowchemy and its templates come with &lt;strong&gt;automatic day (light) and night (dark) mode&lt;/strong&gt; built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo&lt;/a&gt; to see it in action! Day/night mode can also be disabled by the site admin in &lt;code&gt;params.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/customization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Choose a stunning &lt;strong&gt;theme&lt;/strong&gt; and &lt;strong&gt;font&lt;/strong&gt;&lt;/a&gt; for your site. Themes are fully customizable.&lt;/p&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/blob/master/LICENSE.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://laddem.github.io/post/2020-12-01-r-rmarkdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      <guid>https://laddem.github.io/post/2020-12-01-r-rmarkdown/</guid>
      <description>
&lt;script src=&#34;https://laddem.github.io/post/2020-12-01-r-rmarkdown/index.en_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see &lt;a href=&#34;http://rmarkdown.rstudio.com&#34; class=&#34;uri&#34;&gt;http://rmarkdown.rstudio.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can embed an R code chunk like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(cars)
##      speed           dist       
##  Min.   : 4.0   Min.   :  2.00  
##  1st Qu.:12.0   1st Qu.: 26.00  
##  Median :15.0   Median : 36.00  
##  Mean   :15.4   Mean   : 42.98  
##  3rd Qu.:19.0   3rd Qu.: 56.00  
##  Max.   :25.0   Max.   :120.00
fit &amp;lt;- lm(dist ~ speed, data = cars)
fit
## 
## Call:
## lm(formula = dist ~ speed, data = cars)
## 
## Coefficients:
## (Intercept)        speed  
##     -17.579        3.932&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;including-plots&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Including Plots&lt;/h1&gt;
&lt;p&gt;You can also embed plots. See Figure &lt;a href=&#34;#fig:pie&#34;&gt;1&lt;/a&gt; for example:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;par(mar = c(0, 1, 0, 1))
pie(
  c(280, 60, 20),
  c(&amp;#39;Sky&amp;#39;, &amp;#39;Sunny side of pyramid&amp;#39;, &amp;#39;Shady side of pyramid&amp;#39;),
  col = c(&amp;#39;#0292D8&amp;#39;, &amp;#39;#F7EA39&amp;#39;, &amp;#39;#C4B632&amp;#39;),
  init.angle = -50, border = NA
)&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:pie&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://laddem.github.io/post/2020-12-01-r-rmarkdown/index.en_files/figure-html/pie-1.png&#34; alt=&#34;A fancy pie chart.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: A fancy pie chart.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Academic</title>
      <link>https://laddem.github.io/post/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On this page, you&amp;rsquo;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code&gt;highlight&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;charts&#34;&gt;Charts&lt;/h3&gt;
&lt;p&gt;Academic supports the popular &lt;a href=&#34;https://plot.ly/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plotly&lt;/a&gt; chart format.&lt;/p&gt;
&lt;p&gt;Save your Plotly JSON in your page folder, for example &lt;code&gt;chart.json&lt;/code&gt;, and then add the &lt;code&gt;{{&amp;lt; chart data=&amp;quot;chart&amp;quot; &amp;gt;}}&lt;/code&gt; shortcode where you would like the chart to appear.&lt;/p&gt;
&lt;p&gt;Demo:&lt;/p&gt;


&lt;div id=&#34;chart-869153247&#34; class=&#34;chart&#34;&gt;&lt;/div&gt;
&lt;script&gt;
  (function() {
    let a = setInterval( function() {
      if ( typeof window.Plotly === &#39;undefined&#39; ) {
        return;
      }
      clearInterval( a );

      Plotly.d3.json(&#34;./line-chart.json&#34;, function(chart) {
        Plotly.plot(&#39;chart-869153247&#39;, chart.data, chart.layout, {responsive: true});
      });
    }, 500 );
  })();
&lt;/script&gt;
&lt;p&gt;You might also find the &lt;a href=&#34;http://plotly-json-editor.getforge.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plotly JSON Editor&lt;/a&gt; useful.&lt;/p&gt;
&lt;h3 id=&#34;math&#34;&gt;Math&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code&gt;math&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;To render &lt;em&gt;inline&lt;/em&gt; or &lt;em&gt;block&lt;/em&gt; math, wrap your LaTeX math with &lt;code&gt;$...$&lt;/code&gt; or &lt;code&gt;$$...$$&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;math block&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;$$\gamma_{n} = \frac{ 
\left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T 
\left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}
{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left |\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right |^2}$$&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;$\nabla F(\mathbf{x}_{n})$&lt;/code&gt; renders as $\nabla F(\mathbf{x}_{n})$.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the &lt;code&gt;\\\\&lt;/code&gt; math linebreak:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;$$f(k;p_{0}^{*}) = \begin{cases}p_{0}^{*} &amp;amp; \text{if }k=1, \\\\
1-p_{0}^{*} &amp;amp; \text{if }k=0.\end{cases}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$f(k;p_{0}^{*}) = \begin{cases}p_{0}^{*} &amp;amp; \text{if }k=1, \\&lt;br&gt;
1-p_{0}^{*} &amp;amp; \text{if }k=0.\end{cases}$$&lt;/p&gt;
&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;
&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;class diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;state diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;
&lt;p&gt;You can even write your todo lists in Academic too:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write math example&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write diagram example&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Do something else&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;
&lt;p&gt;Represent your data in tables:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;callouts&#34;&gt;Callouts&lt;/h3&gt;
&lt;p&gt;Academic supports a &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/#callouts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcode for callouts&lt;/a&gt;, also referred to as &lt;em&gt;asides&lt;/em&gt;, &lt;em&gt;hints&lt;/em&gt;, or &lt;em&gt;alerts&lt;/em&gt;. By wrapping a paragraph in &lt;code&gt;{{% callout note %}} ... {{% /callout %}}&lt;/code&gt;, it will render as an aside.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% callout note %}}
A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
{{% /callout %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;spoilers&#34;&gt;Spoilers&lt;/h3&gt;
&lt;p&gt;Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; spoiler text=&amp;quot;Click to view the spoiler&amp;quot; &amp;gt;}}
You found me!
{{&amp;lt; /spoiler &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-2&#34;&gt;
  &lt;summary&gt;Click to view the spoiler&lt;/summary&gt;
  &lt;p&gt;You found me!&lt;/p&gt;
&lt;/details&gt;
&lt;h3 id=&#34;icons&#34;&gt;Icons&lt;/h3&gt;
&lt;p&gt;Academic enables you to use a wide range of &lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/#icons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;icons from &lt;em&gt;Font Awesome&lt;/em&gt; and &lt;em&gt;Academicons&lt;/em&gt;&lt;/a&gt; in addition to &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#emojis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;emojis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some examples using the &lt;code&gt;icon&lt;/code&gt; shortcode to render icons:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; icon name=&amp;quot;terminal&amp;quot; pack=&amp;quot;fas&amp;quot; &amp;gt;}} Terminal  
{{&amp;lt; icon name=&amp;quot;python&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} Python  
{{&amp;lt; icon name=&amp;quot;r-project&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} R
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-terminal  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Terminal&lt;br&gt;

  &lt;i class=&#34;fab fa-python  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Python&lt;br&gt;

  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; R&lt;/p&gt;
&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>An example preprint / working paper</title>
      <link>https://laddem.github.io/publication/preprint/</link>
      <pubDate>Sun, 07 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/publication/preprint/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>https://laddem.github.io/post/jupyter/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/post/jupyter/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from IPython.core.display import Image
Image(&#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_1_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-python-and-jupyterlab&#34;&gt;Install Python and JupyterLab&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and JupyterLab.&lt;/p&gt;
&lt;p&gt;Alternatively, install JupyterLab with &lt;code&gt;pip3 install jupyterlab&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;
&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY-WEBSITE-FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;SHORT-POST-TITLE&amp;gt;&lt;/code&gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
cd &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
jupyter lab index.ipynb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;jupyter&lt;/code&gt; command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.&lt;/p&gt;
&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;
&lt;p&gt;The first cell of your Jupter notebook will contain your post metadata (&lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;front matter&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In Jupter, choose &lt;em&gt;Markdown&lt;/em&gt; as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: My post&#39;s title
date: 2019-09-01

# Put any other Academic metadata here...
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Edit the metadata of your post, using the &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; as a guide to the available options.&lt;/p&gt;
&lt;p&gt;To set a &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;
&lt;p&gt;For other tips, such as using math, see the guide on &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;This post was created with Jupyter. The orginal files can be found at &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&#34;&gt;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://laddem.github.io/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt; 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three 
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>https://laddem.github.io/project/external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/project/external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Internal Project</title>
      <link>https://laddem.github.io/project/internal-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/project/internal-project/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example journal article</title>
      <link>https://laddem.github.io/publication/journal-article/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/publication/journal-article/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>An example conference paper</title>
      <link>https://laddem.github.io/publication/conference-paper/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/publication/conference-paper/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Create your slides in Markdown - click the &lt;em&gt;Slides&lt;/em&gt; button to check out the example.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Supplementary notes can be added here, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;code, math, and images&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://laddem.github.io/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://laddem.github.io/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
